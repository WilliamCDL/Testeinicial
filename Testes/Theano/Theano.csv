Filename;Linha;Tipo;Autor;Email;Data;Hash;Commit
core.py;418;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-22 20:51:10-05:00;430999a9c650bdc8da503d4683034782e5660c50;"inline c stuff, elemwise!"
env.py;205;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-23 15:39:06-05:00;2aa7089ea544c9bc2e9ce061c37d13607156aa72;"adding gof package as a subdirectory"
ext.py;231;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-23 15:39:06-05:00;2aa7089ea544c9bc2e9ce061c37d13607156aa72;""
ext.py;238;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-23 15:39:06-05:00;2aa7089ea544c9bc2e9ce061c37d13607156aa72;""
ext.py;301;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-23 15:39:06-05:00;2aa7089ea544c9bc2e9ce061c37d13607156aa72;""
ext.py;306;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-23 15:39:06-05:00;2aa7089ea544c9bc2e9ce061c37d13607156aa72;""
ext.py;490;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-23 15:39:06-05:00;2aa7089ea544c9bc2e9ce061c37d13607156aa72;""
ext.py;497;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-23 15:39:06-05:00;2aa7089ea544c9bc2e9ce061c37d13607156aa72;""
ext.py;560;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-23 15:39:06-05:00;2aa7089ea544c9bc2e9ce061c37d13607156aa72;""
ext.py;565;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-23 15:39:06-05:00;2aa7089ea544c9bc2e9ce061c37d13607156aa72;""
listeners.py;353;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-23 15:39:06-05:00;2aa7089ea544c9bc2e9ce061c37d13607156aa72;""
listeners.py;420;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-23 15:39:06-05:00;2aa7089ea544c9bc2e9ce061c37d13607156aa72;""
listeners.py;425;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-23 15:39:06-05:00;2aa7089ea544c9bc2e9ce061c37d13607156aa72;""
core.py;416;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-24 04:26:29-05:00;d0c30ce230da7975d1746150b628f4860fd0acd1;"blah"
env.py;205;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-24 04:26:29-05:00;d0c30ce230da7975d1746150b628f4860fd0acd1;""
ext.py;231;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-24 04:26:29-05:00;d0c30ce230da7975d1746150b628f4860fd0acd1;""
ext.py;238;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-24 04:26:29-05:00;d0c30ce230da7975d1746150b628f4860fd0acd1;""
ext.py;301;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-24 04:26:29-05:00;d0c30ce230da7975d1746150b628f4860fd0acd1;""
ext.py;306;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-24 04:26:29-05:00;d0c30ce230da7975d1746150b628f4860fd0acd1;""
ext.py;490;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-24 04:26:29-05:00;d0c30ce230da7975d1746150b628f4860fd0acd1;""
ext.py;497;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-24 04:26:29-05:00;d0c30ce230da7975d1746150b628f4860fd0acd1;""
ext.py;560;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-24 04:26:29-05:00;d0c30ce230da7975d1746150b628f4860fd0acd1;""
ext.py;565;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-24 04:26:29-05:00;d0c30ce230da7975d1746150b628f4860fd0acd1;""
listeners.py;353;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-24 04:26:29-05:00;d0c30ce230da7975d1746150b628f4860fd0acd1;""
listeners.py;420;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-24 04:26:29-05:00;d0c30ce230da7975d1746150b628f4860fd0acd1;""
listeners.py;425;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-24 04:26:29-05:00;d0c30ce230da7975d1746150b628f4860fd0acd1;""
ext.py;231;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-29 16:39:33-05:00;bc3f88548e0ced0eb6832b10b554f9cfe08c226b;"small cleanup"
ext.py;238;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-29 16:39:33-05:00;bc3f88548e0ced0eb6832b10b554f9cfe08c226b;""
ext.py;301;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-29 16:39:33-05:00;bc3f88548e0ced0eb6832b10b554f9cfe08c226b;""
ext.py;306;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-29 16:39:33-05:00;bc3f88548e0ced0eb6832b10b554f9cfe08c226b;""
ext.py;231;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-31 14:20:46-05:00;5319c2a2e3ced13a8091163c757d0910a4d51442;"merged transpose"
ext.py;238;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-31 14:20:46-05:00;5319c2a2e3ced13a8091163c757d0910a4d51442;""
ext.py;301;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-31 14:20:46-05:00;5319c2a2e3ced13a8091163c757d0910a4d51442;""
ext.py;306;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-01-31 14:20:46-05:00;5319c2a2e3ced13a8091163c757d0910a4d51442;""
ext.py;232;DELETED;bergstrj@iro.umontreal.ca;bergstrj@iro.umontreal.ca;2008-02-20 13:14:11-05:00;514a561cb20a38e5b2ea6082023fe6cdaa0b34e7;"moved compute and DestroyHandler to lib, compute() uses history set now"
ext.py;239;DELETED;bergstrj@iro.umontreal.ca;bergstrj@iro.umontreal.ca;2008-02-20 13:14:11-05:00;514a561cb20a38e5b2ea6082023fe6cdaa0b34e7;""
ext.py;302;DELETED;bergstrj@iro.umontreal.ca;bergstrj@iro.umontreal.ca;2008-02-20 13:14:11-05:00;514a561cb20a38e5b2ea6082023fe6cdaa0b34e7;""
ext.py;307;DELETED;bergstrj@iro.umontreal.ca;bergstrj@iro.umontreal.ca;2008-02-20 13:14:11-05:00;514a561cb20a38e5b2ea6082023fe6cdaa0b34e7;""
lib.py;337;ADD;bergstrj@iro.umontreal.ca;bergstrj@iro.umontreal.ca;2008-02-20 13:14:11-05:00;514a561cb20a38e5b2ea6082023fe6cdaa0b34e7;""
lib.py;344;ADD;bergstrj@iro.umontreal.ca;bergstrj@iro.umontreal.ca;2008-02-20 13:14:11-05:00;514a561cb20a38e5b2ea6082023fe6cdaa0b34e7;""
lib.py;407;ADD;bergstrj@iro.umontreal.ca;bergstrj@iro.umontreal.ca;2008-02-20 13:14:11-05:00;514a561cb20a38e5b2ea6082023fe6cdaa0b34e7;""
lib.py;412;ADD;bergstrj@iro.umontreal.ca;bergstrj@iro.umontreal.ca;2008-02-20 13:14:11-05:00;514a561cb20a38e5b2ea6082023fe6cdaa0b34e7;""
listeners.py;353;DELETED;bergstrj@iro.umontreal.ca;bergstrj@iro.umontreal.ca;2008-02-21 19:00:25-05:00;a007e6860e81212e039dbb406d0afc8ebdd4308f;"removed dead code, installed ResultBase to gof"
listeners.py;420;DELETED;bergstrj@iro.umontreal.ca;bergstrj@iro.umontreal.ca;2008-02-21 19:00:25-05:00;a007e6860e81212e039dbb406d0afc8ebdd4308f;""
listeners.py;425;DELETED;bergstrj@iro.umontreal.ca;bergstrj@iro.umontreal.ca;2008-02-21 19:00:25-05:00;a007e6860e81212e039dbb406d0afc8ebdd4308f;""
core.py;836;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-02-26 16:10:23-05:00;4a6845b1943209dc06918b93d54d7bd85c1176c9;"added test files and moved stuff out of core.py"
elemwise.py;278;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-02-26 16:10:23-05:00;4a6845b1943209dc06918b93d54d7bd85c1176c9;""
_test_op.py;97;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-02-29 16:04:06-05:00;a5129f654d75d9cb7362fe00bf34aa0ca373e90e;"redone result, op, tests for result, op, graph"
_test_op.py;110;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-02-29 16:04:06-05:00;a5129f654d75d9cb7362fe00bf34aa0ca373e90e;""
_test_op.py;123;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-02-29 16:04:06-05:00;a5129f654d75d9cb7362fe00bf34aa0ca373e90e;""
result.py;166;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-02-29 16:04:06-05:00;a5129f654d75d9cb7362fe00bf34aa0ca373e90e;""
_test_ext.py;85;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;"upgraded DestroyHandler to handle result.indestructible when set, added mucho tests"
_test_op.py;125;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
_test_op.py;138;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
_test_op.py;151;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
_test_op.py;97;DELETED;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
_test_op.py;110;DELETED;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
_test_op.py;123;DELETED;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
env.py;170;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
env.py;392;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
env.py;414;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
env.py;447;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
ext.py;155;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
ext.py;163;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
ext.py;233;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
ext.py;238;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
lib.py;255;DELETED;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
lib.py;262;DELETED;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
lib.py;325;DELETED;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
lib.py;330;DELETED;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
op.py;85;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
op.py;315;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
op.py;80;DELETED;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-01 22:21:13-05:00;618ad84b2c81a9d37f34643792c1c08040d3c0a6;""
constructor.py;30;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-02 00:45:40-05:00;754f6f27179377b46399db37c4e9c358706a0d44;"implemented Constructor and various handy Allocators, modified the tests to use them instead of overriding __new__"
env.py;454;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-02 00:45:40-05:00;754f6f27179377b46399db37c4e9c358706a0d44;""
op.py;85;DELETED;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-03 02:53:11-05:00;834c5aa3fa53932f9642f62aad2dc5c8dd5fbc35;"cleaned up gof.op, added constant, same_properties and mergeable to Scalar"
cc.py;287;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-05 04:33:39-05:00;6ec9db6167dd7be25853ef1dbee21790e6ed7d3e;"cc.py is now in working order"
constructor.py;64;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-03-11 18:05:07-04:00;93b4e940e61fbcd8523a05294a93d3ea4c7305e0;"cleaned up the files"
elemwise.py;618;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-14 03:50:54-04:00;d26f29d35f8eda066e75acba2024a4248a2aa7b6;"elemwise is functional"
elemwise.py;555;DELETED;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-14 03:50:54-04:00;d26f29d35f8eda066e75acba2024a4248a2aa7b6;""
_test_ext.py;113;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-03-20 16:26:20-04:00;bcb1a52591d2653080861770c09abebccea18c59;"documented and added a lot of tests"
_test_ext.py;122;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-03-20 16:26:20-04:00;bcb1a52591d2653080861770c09abebccea18c59;""
_test_ext.py;138;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-03-20 16:26:20-04:00;bcb1a52591d2653080861770c09abebccea18c59;""
_test_op.py;126;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-03-20 16:26:20-04:00;bcb1a52591d2653080861770c09abebccea18c59;""
_test_op.py;139;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-03-20 16:26:20-04:00;bcb1a52591d2653080861770c09abebccea18c59;""
_test_op.py;152;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-03-20 16:26:20-04:00;bcb1a52591d2653080861770c09abebccea18c59;""
_test_cc.py;235;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-22 20:51:36-04:00;b05004d35783b645e7f2e858d3c85dc1042e5385;"added DualLinker"
_test_tensor.py;469;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-22 20:54:30-04:00;eaf7912434c4585207beaf6cd0fa21862b16f54d;"made tests use DualLinker"
link.py;106;ADD;olivier@olivier-desktop;olivier@olivier-desktop;2008-03-24 22:44:40-04:00;4b1085805b70385635056d72333fce2f2e280dba;"added Profiler class, profiler option to PerformLinker and OpWiseCLinker"
link.py;106;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-03-24 23:30:36-04:00;38f533d547b69f370fbd924589d2d9cd2f6f2092;"merge"
link.py;106;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-03-25 17:34:19-04:00;2bb3bd573b9e31a2834e2f1bc0bb2182506d2fe9;"changed the way Profiler is used"
link.py;106;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-03-26 16:42:59-04:00;d34d552de3f5b030b1fbb6ddc8e1d8ee398f53f4;"merge"
elemwise.py;620;DELETED;bergstrj@iro.umontreal.ca;bergstrj@iro.umontreal.ca;2008-04-10 16:12:10-04:00;c7db795f84cd0c10a893d93893a7cb2b2f1e6088;"moved scalar_ops to scalar, removed old elemwise.py."
_test_tensor.py;971;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;"switching from Op/Result to Op+Apply/Type+Result"
_test_tensor.py;966;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;""
cc.py;413;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;""
cc.py;411;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;""
env.py;405;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;""
env.py;439;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;""
env.py;478;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;""
env.py;171;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;""
env.py;186;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;""
env.py;423;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;""
env.py;452;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;""
env.py;485;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;""
op.py;163;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;""
op.py;311;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;""
result.py;144;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;""
toolbox.py;67;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-04-28 20:43:41-04:00;2fd6ea222e36ce2ba33ee65e2a5713f806d449bb;""
env.py;345;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-02 20:57:44-04:00;646f4c016a309174f98c4d65e3a4431cf70233d2;"halfway through redoing env"
env.py;176;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-02 20:57:44-04:00;646f4c016a309174f98c4d65e3a4431cf70233d2;""
env.py;405;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-02 20:57:44-04:00;646f4c016a309174f98c4d65e3a4431cf70233d2;""
env.py;439;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-02 20:57:44-04:00;646f4c016a309174f98c4d65e3a4431cf70233d2;""
env.py;521;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-04 01:54:35-04:00;65e08101ba64f72d24fad2bca27879ff5381348f;"env redone, toolbox redone"
env.py;546;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-04 01:54:35-04:00;65e08101ba64f72d24fad2bca27879ff5381348f;""
env.py;345;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-04 01:54:35-04:00;65e08101ba64f72d24fad2bca27879ff5381348f;""
env.py;455;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-04 01:54:35-04:00;65e08101ba64f72d24fad2bca27879ff5381348f;""
env.py;480;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-04 01:54:35-04:00;65e08101ba64f72d24fad2bca27879ff5381348f;""
toolbox.py;67;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-04 01:54:35-04:00;65e08101ba64f72d24fad2bca27879ff5381348f;""
cc.py;416;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-05 00:51:48-04:00;ea32b4db5209c503eccc4e78b2ffc0de6b7d486f;"too many things to list"
cc.py;413;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-05 00:51:48-04:00;ea32b4db5209c503eccc4e78b2ffc0de6b7d486f;""
env.py;521;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-05 00:51:48-04:00;ea32b4db5209c503eccc4e78b2ffc0de6b7d486f;""
env.py;546;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-05 00:51:48-04:00;ea32b4db5209c503eccc4e78b2ffc0de6b7d486f;""
op.py;167;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-05 15:12:05-04:00;eec75e9881479a5783cab0f18d567cf553628dce;"merge"
formula.py;474;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-16 16:57:26-04:00;e284625c3b1d21fc368f174eff8e1e7ee08bd791;"embryo of formula system"
formula.py;486;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-16 16:57:26-04:00;e284625c3b1d21fc368f174eff8e1e7ee08bd791;""
formula.py;505;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-20 14:09:00-04:00;bf69ab87323b9f97ba5df9bd01bb2c706b284c9b;"lots of stuff"
formula.py;517;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-05-20 14:09:00-04:00;bf69ab87323b9f97ba5df9bd01bb2c706b284c9b;""
cc.py;832;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-06-10 21:16:34-04:00;27270d63b5aabc8601de1fcc3a8a304811921e12;"small fix for hashing failure"
ext.py;351;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2008-08-26 10:58:10-04:00;213db8fdf1cb3600992bc38a202e8307e6df2f5e;"rewrote DestroyHandler and moved it to destroyhandler.py, moved view_roots to graph.py"
ext.py;364;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2008-08-26 10:58:10-04:00;213db8fdf1cb3600992bc38a202e8307e6df2f5e;""
ext.py;465;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2008-08-26 10:58:10-04:00;213db8fdf1cb3600992bc38a202e8307e6df2f5e;""
ext.py;470;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2008-08-26 10:58:10-04:00;213db8fdf1cb3600992bc38a202e8307e6df2f5e;""
_test_destroyhandler.py;258;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2008-08-26 10:59:25-04:00;d95e8b6cfab0e4b91d4bd1a54a22193096e2ae6d;"renamed _test_ext"
_test_destroyhandler.py;276;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2008-08-26 10:59:25-04:00;d95e8b6cfab0e4b91d4bd1a54a22193096e2ae6d;""
_test_destroyhandler.py;106;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2008-08-26 10:59:25-04:00;d95e8b6cfab0e4b91d4bd1a54a22193096e2ae6d;""
_test_destroyhandler.py;157;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2008-08-26 10:59:25-04:00;d95e8b6cfab0e4b91d4bd1a54a22193096e2ae6d;""
compile.py;148;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-09-17 21:35:43-04:00;b4a75fa64e38e338147ab4ce731a59461a53dc77;"FunctionMaker"
apirst2html.py;24;ADD;bergstrj@lgcm;bergstrj@lgcm;2008-09-23 18:05:01-04:00;fd3e360cd6957f9a9700139be0284453c792aeb6;"added apirst2html script, simplified html generation scripts"
apirst2html.py;24;ADD;Olivier Delalleau;delallea@iro;2008-09-25 11:22:02-04:00;b128f2b8b676f10260ac4deba86084a09f33d7a8;"Merged with all other changes"
compile.py;221;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-09-25 19:17:35-04:00;32136eb71ba99d30841420278f9164cc02f0789a;"merge"
tensor.py;1584;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2008-09-26 16:02:33-04:00;357efa534999dca1f4396d91e0c860fa1699fac0;"replaced MakeVector, VerticalStack and horizontal stacking ops with Join and Split.  Rewrote numeric_grad to work properly with in-place operations and arbitrary-rank tensors"
tensor.py;1584;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2008-09-26 16:04:00-04:00;e2202c3ffc5a05498806f86a52439d51534e763e;"merged"
pygments_code_block_directive.py;38;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2008-09-26 20:22:57-04:00;3498d80157d51204c556aebf4c961428e93c760b;"tags,  docs, syntax highlighting in code-block"
pygments_code_block_directive.py;168;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2008-09-26 20:22:57-04:00;3498d80157d51204c556aebf4c961428e93c760b;""
gen_oplist.py;102;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2008-09-26 20:22:57-04:00;3498d80157d51204c556aebf4c961428e93c760b;""
pygments_code_block_directive.py;38;DELETED;james@crane;james@crane;2008-09-27 17:02:18-04:00;b755173e45894dd6fbf33b7d0c836e27a62481f3;"lots of doc work"
compile.py;231;ADD;delallea@valhalla.apstat.com;delallea@valhalla.apstat.com;2008-09-30 10:29:00-04:00;5fb197cc335488952c4bdefb5fc93aaa2325d941;"Merged"
pygments_code_block_directive.py;184;ADD;delallea@valhalla.apstat.com;delallea@valhalla.apstat.com;2008-09-30 10:29:00-04:00;5fb197cc335488952c4bdefb5fc93aaa2325d941;""
gen_oplist.py;111;ADD;delallea@valhalla.apstat.com;delallea@valhalla.apstat.com;2008-09-30 10:29:00-04:00;5fb197cc335488952c4bdefb5fc93aaa2325d941;""
tensor.py;1595;ADD;delallea@valhalla.apstat.com;delallea@valhalla.apstat.com;2008-09-30 10:29:00-04:00;5fb197cc335488952c4bdefb5fc93aaa2325d941;""
pygments_code_block_directive.py;184;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-09-30 11:51:37-04:00;4c6c0034624dda13734dc7003b2835ab5b10e86a;"merge"
gen_oplist.py;111;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-09-30 11:51:37-04:00;4c6c0034624dda13734dc7003b2835ab5b10e86a;""
tensor.py;1598;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-09-30 11:51:37-04:00;4c6c0034624dda13734dc7003b2835ab5b10e86a;""
pygments_code_block_directive.py;184;ADD;delallea@valhalla.apstat.com;delallea@valhalla.apstat.com;2008-09-30 11:53:57-04:00;0e68b97a09b8c2cbb8a330cb7e8802f64a572782;"Merged"
gen_oplist.py;111;ADD;delallea@valhalla.apstat.com;delallea@valhalla.apstat.com;2008-09-30 11:53:57-04:00;0e68b97a09b8c2cbb8a330cb7e8802f64a572782;""
function_module.py;230;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-02 18:51:53-04:00;cda83c5db0e96aadaebbef1bd6deafccc9c84782;"expanded the structore of compile, added sanity check mode"
io.py;99;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-02 18:51:53-04:00;cda83c5db0e96aadaebbef1bd6deafccc9c84782;""
test_cc.py;246;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 02:36:29-04:00;9e669ec0a0f31a6610732632c28b7026861bfede;"incorporating py.test"
test_cc.py;245;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 02:36:29-04:00;9e669ec0a0f31a6610732632c28b7026861bfede;""
test_destroyhandler.py;197;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 02:36:29-04:00;9e669ec0a0f31a6610732632c28b7026861bfede;""
test_destroyhandler.py;206;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 02:36:29-04:00;9e669ec0a0f31a6610732632c28b7026861bfede;""
test_destroyhandler.py;283;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 02:36:29-04:00;9e669ec0a0f31a6610732632c28b7026861bfede;""
test_destroyhandler.py;301;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 02:36:29-04:00;9e669ec0a0f31a6610732632c28b7026861bfede;""
test_destroyhandler.py;173;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 02:36:29-04:00;9e669ec0a0f31a6610732632c28b7026861bfede;""
test_destroyhandler.py;182;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 02:36:29-04:00;9e669ec0a0f31a6610732632c28b7026861bfede;""
test_destroyhandler.py;257;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 02:36:29-04:00;9e669ec0a0f31a6610732632c28b7026861bfede;""
test_destroyhandler.py;275;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 02:36:29-04:00;9e669ec0a0f31a6610732632c28b7026861bfede;""
docgen.py;12;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 18:13:53-04:00;775fc20340869b9e31126e3f565537764ff22c31;"more doc scripts"
gen_oplist.py;112;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 22:19:18-04:00;9eefe324aa7151e52d1be8ed9079a30901ace29f;"docgen progress"
docgen.py;67;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 22:19:18-04:00;9eefe324aa7151e52d1be8ed9079a30901ace29f;""
docgen.py;12;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 22:19:18-04:00;9eefe324aa7151e52d1be8ed9079a30901ace29f;""
gen_oplist.py;112;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 22:19:27-04:00;129bf3cbae1e66d7a85e8466efed843255ea809f;"merge"
_test_cc.py;245;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 22:19:27-04:00;129bf3cbae1e66d7a85e8466efed843255ea809f;""
_test_destroyhandler.py;173;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 22:19:27-04:00;129bf3cbae1e66d7a85e8466efed843255ea809f;""
_test_destroyhandler.py;182;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 22:19:27-04:00;129bf3cbae1e66d7a85e8466efed843255ea809f;""
_test_destroyhandler.py;257;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 22:19:27-04:00;129bf3cbae1e66d7a85e8466efed843255ea809f;""
_test_destroyhandler.py;275;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 22:19:27-04:00;129bf3cbae1e66d7a85e8466efed843255ea809f;""
docgen.py;67;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 22:19:27-04:00;129bf3cbae1e66d7a85e8466efed843255ea809f;""
test_cc.py;246;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 22:19:27-04:00;129bf3cbae1e66d7a85e8466efed843255ea809f;""
test_destroyhandler.py;197;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 22:19:27-04:00;129bf3cbae1e66d7a85e8466efed843255ea809f;""
test_destroyhandler.py;206;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 22:19:27-04:00;129bf3cbae1e66d7a85e8466efed843255ea809f;""
test_destroyhandler.py;283;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 22:19:27-04:00;129bf3cbae1e66d7a85e8466efed843255ea809f;""
test_destroyhandler.py;301;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-07 22:19:27-04:00;129bf3cbae1e66d7a85e8466efed843255ea809f;""
apirst2html.py;24;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-08 18:27:10-04:00;1ad97e4517c0c0ff7bcce2cd66ab1ec603226d91;"removed __transit"
pygments_code_block_directive.py;184;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-08 18:27:10-04:00;1ad97e4517c0c0ff7bcce2cd66ab1ec603226d91;""
apirst2html.py;24;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-09 19:47:08-04:00;7f78499040dc5134af4584b2f6183df958c60443;"merge"
pygments_code_block_directive.py;184;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-09 19:47:08-04:00;7f78499040dc5134af4584b2f6183df958c60443;""
_test_cc.py;245;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-09 19:47:08-04:00;7f78499040dc5134af4584b2f6183df958c60443;""
_test_destroyhandler.py;173;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-09 19:47:08-04:00;7f78499040dc5134af4584b2f6183df958c60443;""
_test_destroyhandler.py;182;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-09 19:47:08-04:00;7f78499040dc5134af4584b2f6183df958c60443;""
_test_destroyhandler.py;257;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-09 19:47:08-04:00;7f78499040dc5134af4584b2f6183df958c60443;""
_test_destroyhandler.py;275;DELETED;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-09 19:47:08-04:00;7f78499040dc5134af4584b2f6183df958c60443;""
docgen.py;89;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-09 19:47:08-04:00;7f78499040dc5134af4584b2f6183df958c60443;""
gen_oplist.py;115;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-09 19:47:08-04:00;7f78499040dc5134af4584b2f6183df958c60443;""
test_cc.py;246;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-09 19:47:08-04:00;7f78499040dc5134af4584b2f6183df958c60443;""
test_destroyhandler.py;197;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-09 19:47:08-04:00;7f78499040dc5134af4584b2f6183df958c60443;""
test_destroyhandler.py;206;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-09 19:47:08-04:00;7f78499040dc5134af4584b2f6183df958c60443;""
test_destroyhandler.py;283;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-09 19:47:08-04:00;7f78499040dc5134af4584b2f6183df958c60443;""
test_destroyhandler.py;301;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-09 19:47:08-04:00;7f78499040dc5134af4584b2f6183df958c60443;""
apirst2html.py;24;DELETED;Joseph Turian;turian@iro.umontreal.ca;2008-10-15 17:01:26-04:00;78378ce81160290ed1548c5685fa49b70ebf00db;"merge"
pygments_code_block_directive.py;184;DELETED;Joseph Turian;turian@iro.umontreal.ca;2008-10-15 17:01:26-04:00;78378ce81160290ed1548c5685fa49b70ebf00db;""
_test_cc.py;245;DELETED;Joseph Turian;turian@iro.umontreal.ca;2008-10-15 17:01:26-04:00;78378ce81160290ed1548c5685fa49b70ebf00db;""
_test_destroyhandler.py;173;DELETED;Joseph Turian;turian@iro.umontreal.ca;2008-10-15 17:01:26-04:00;78378ce81160290ed1548c5685fa49b70ebf00db;""
_test_destroyhandler.py;182;DELETED;Joseph Turian;turian@iro.umontreal.ca;2008-10-15 17:01:26-04:00;78378ce81160290ed1548c5685fa49b70ebf00db;""
_test_destroyhandler.py;257;DELETED;Joseph Turian;turian@iro.umontreal.ca;2008-10-15 17:01:26-04:00;78378ce81160290ed1548c5685fa49b70ebf00db;""
_test_destroyhandler.py;275;DELETED;Joseph Turian;turian@iro.umontreal.ca;2008-10-15 17:01:26-04:00;78378ce81160290ed1548c5685fa49b70ebf00db;""
docgen.py;89;ADD;Joseph Turian;turian@iro.umontreal.ca;2008-10-15 17:01:26-04:00;78378ce81160290ed1548c5685fa49b70ebf00db;""
gen_oplist.py;115;ADD;Joseph Turian;turian@iro.umontreal.ca;2008-10-15 17:01:26-04:00;78378ce81160290ed1548c5685fa49b70ebf00db;""
test_cc.py;246;ADD;Joseph Turian;turian@iro.umontreal.ca;2008-10-15 17:01:26-04:00;78378ce81160290ed1548c5685fa49b70ebf00db;""
test_destroyhandler.py;197;ADD;Joseph Turian;turian@iro.umontreal.ca;2008-10-15 17:01:26-04:00;78378ce81160290ed1548c5685fa49b70ebf00db;""
test_destroyhandler.py;206;ADD;Joseph Turian;turian@iro.umontreal.ca;2008-10-15 17:01:26-04:00;78378ce81160290ed1548c5685fa49b70ebf00db;""
test_destroyhandler.py;283;ADD;Joseph Turian;turian@iro.umontreal.ca;2008-10-15 17:01:26-04:00;78378ce81160290ed1548c5685fa49b70ebf00db;""
test_destroyhandler.py;301;ADD;Joseph Turian;turian@iro.umontreal.ca;2008-10-15 17:01:26-04:00;78378ce81160290ed1548c5685fa49b70ebf00db;""
opt.py;753;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2008-10-21 16:25:46-04:00;2ced2dcc9d9df8496a51ffaa651674d20baa8942;"EquilibriumDB"
aa.py;215;ADD;Frederic Bastien;bastienf@iro.umontreal.ca;2008-11-20 16:44:25-05:00;7bac82c1df5b0e937cdce4c58f727beab34e5958;"Automated merge with ssh://projects@lgcm.iro.umontreal.ca/hg/theano"
opt.py;870;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2008-11-21 20:48:30-05:00;32105ec965d15ab39095f9b92512a261ecdac424;"refactored gemm-related code. added gemm-related optimizations and tests. added specializations for mul"
equilibrium.py;87;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2008-11-21 20:48:30-05:00;32105ec965d15ab39095f9b92512a261ecdac424;""
aa.py;216;ADD;desjagui@atchoum.iro.umontreal.ca;desjagui@atchoum.iro.umontreal.ca;2008-11-24 17:12:28-05:00;d653a63648ad1cc8eabd04c4e01c207516b6eaad;"merge"
opt.py;764;DELETED;desjagui@atchoum.iro.umontreal.ca;desjagui@atchoum.iro.umontreal.ca;2008-11-24 17:12:28-05:00;d653a63648ad1cc8eabd04c4e01c207516b6eaad;""
equilibrium.py;87;ADD;desjagui@atchoum.iro.umontreal.ca;desjagui@atchoum.iro.umontreal.ca;2008-11-24 17:12:28-05:00;d653a63648ad1cc8eabd04c4e01c207516b6eaad;""
test_basic.py;1674;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2008-12-13 16:27:11-05:00;0d302be509cbc690bd2233b1e37615157dbc4166;"Several changes: - revised destroyhandler to be more efficient, in view of how frequently   env.destroyers() was being called. - fixed errors in tensor.flatten(), but also changed semantics of the optional   shape parameter. - added testcases of the previous merge optimizer fix."
test_basic.py;1679;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2008-12-13 16:27:11-05:00;0d302be509cbc690bd2233b1e37615157dbc4166;""
test_basic.py;1686;ADD;Frederic Bastien;bastienf@iro.umontreal.ca;2008-12-15 09:38:20-05:00;848019a9beed4e7c81808e2fd9ee58f1ca6e09a6;"Automated merge with ssh://projects@lgcm.iro.umontreal.ca/hg/theano"
test_basic.py;1691;ADD;Frederic Bastien;bastienf@iro.umontreal.ca;2008-12-15 09:38:20-05:00;848019a9beed4e7c81808e2fd9ee58f1ca6e09a6;""
debugmode.py;178;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-02-13 14:07:44-05:00;9b5b0078ecac14814628113c4fd2e0594e984254;"adding debugmode to sandbox"
conf.py;31;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2009-03-01 23:44:09-05:00;71a443bbc25b440f9a82c7df093268e14a9088b0;"mostly done with the Module part of the basic tutorial - added support for :math: directive (requires Sphinx >= 0.5.1)"
conf.py;31;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-03-03 19:15:30-05:00;5837466827393d2d3830f85b9a48e80bb9999857;"merge"
test_module.py;478;ADD;james@X40;james@X40;2009-03-11 14:04:06-04:00;c104defbd1e6f7bc9ec8294d166bde1bfed53e97;"more changes to Module, more tests"
test_module.py;478;ADD;james@X40;james@X40;2009-03-11 17:59:36-04:00;3231b8ddd191c886e1a8fb7d761cb50507c6a4dc;"merge"
test_module.py;478;ADD;james@X40;james@X40;2009-03-11 19:26:33-04:00;4e6fd9164a9bed21509939a3c55a44947bcbd699;"merge"
test_module.py;479;ADD;Olivier Breuleux;breuleuo@iro.umontreal.ca;2009-03-12 15:58:39-04:00;09bce224ee6523c3c98da402444699c32c08b6d6;"merge"
basic.py;111;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-03-17 18:05:09-04:00;01cda1022ac0b78d99361dd81da1eb9a1300e1c6;"fixed get_vector_length bug, added support for unpacking vector results"
test_debugmode.py;341;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-03-23 17:32:17-04:00;8016537c0247a411dda09e769fb23c51fb327930;"added check_py_code option to DebugMode, c tests for erroneous destroy_map and view_map"
test_debugmode.py;369;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-03-23 17:32:17-04:00;8016537c0247a411dda09e769fb23c51fb327930;""
test_debugmode.py;341;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-03-23 17:32:29-04:00;ea02793c41042e78ad2d63d52ffceaa06971549a;"merge"
test_debugmode.py;369;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-03-23 17:32:29-04:00;ea02793c41042e78ad2d63d52ffceaa06971549a;""
test_debugmode.py;461;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-03-24 18:50:38-04:00;a170708bf91ef829aa0939bb2bc5bbc1b537a453;"added some tests to DebugMode to deal with aliased apply outputs"
test_debugmode.py;401;ADD;desjagui@atchoum.iro.umontreal.ca;desjagui@atchoum.iro.umontreal.ca;2009-03-25 14:36:06-04:00;1a6a156f6f557312df45c25fa6dde489992b901d;"* Added _check_viewmap functions in DEBUG_MODE: detects aliasing issues with respects to inputs and outputs, with Ops which fail to define the proper view_map and destroy_map  * Grouped all the view tests into single class  * fixed view map bug in TanhRnnGrad (Op defined in a test case)"
test_debugmode.py;369;DELETED;desjagui@atchoum.iro.umontreal.ca;desjagui@atchoum.iro.umontreal.ca;2009-03-25 14:36:06-04:00;1a6a156f6f557312df45c25fa6dde489992b901d;""
test_debugmode.py;461;DELETED;desjagui@atchoum.iro.umontreal.ca;desjagui@atchoum.iro.umontreal.ca;2009-03-25 14:36:06-04:00;1a6a156f6f557312df45c25fa6dde489992b901d;""
test_debugmode.py;401;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-03-25 14:55:00-04:00;030bb405e91c4ffe3ebd6e681f6a1613fe5b9d87;"merge"
test_debugmode.py;369;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2009-03-25 14:55:00-04:00;030bb405e91c4ffe3ebd6e681f6a1613fe5b9d87;""
test_debugmode.py;461;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2009-03-25 14:55:00-04:00;030bb405e91c4ffe3ebd6e681f6a1613fe5b9d87;""
compilelock.py;230;ADD;Olivier Delalleau;delallea@iro;2009-03-30 12:02:07-04:00;45881a7dec9c278b13772d2827ffcf830e83c4ab;"Fixed problem with compile lock where a lock might persist indefinitely"
cc.py;861;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-03-31 17:57:08-04:00;8c4c0074872974da3c366803d22af082dfdfeb57;"added try/finally in OpWiseCLinker.make_all to release lock"
cc.py;860;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2009-03-31 17:57:08-04:00;8c4c0074872974da3c366803d22af082dfdfeb57;""
cc.py;861;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-03-31 18:04:38-04:00;4b16dc1f9e49ac87d471119a7737d5d8bfeb1b43;"merge"
cc.py;860;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2009-03-31 18:04:38-04:00;4b16dc1f9e49ac87d471119a7737d5d8bfeb1b43;""
test_debugmode.py;555;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-04-01 10:42:37-04:00;bbd941f1794c76fd1a8550796b99a7774449acfd;"added check for NaN and Inf, fixed bug in DebugMode _Linker so that functions can be reused after raising an error"
test_debugmode.py;563;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-04-01 10:42:37-04:00;bbd941f1794c76fd1a8550796b99a7774449acfd;""
test_debugmode.py;571;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-04-01 10:42:37-04:00;bbd941f1794c76fd1a8550796b99a7774449acfd;""
test_debugmode.py;588;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-04-01 10:42:37-04:00;bbd941f1794c76fd1a8550796b99a7774449acfd;""
test_debugmode.py;555;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2009-04-01 11:54:44-04:00;795be4537b8f0c9413f689631283de8f9a1b202e;"merge"
test_debugmode.py;563;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2009-04-01 11:54:44-04:00;795be4537b8f0c9413f689631283de8f9a1b202e;""
test_debugmode.py;571;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2009-04-01 11:54:44-04:00;795be4537b8f0c9413f689631283de8f9a1b202e;""
test_debugmode.py;588;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2009-04-01 11:54:44-04:00;795be4537b8f0c9413f689631283de8f9a1b202e;""
test_debugmode.py;588;DELETED;Olivier Delalleau;delallea@iro;2009-05-26 16:02:57-04:00;68d1441b872fac26019ac013c1b2e0d229da85de;"Fixed test so that it passes following changes to TensorType.values_eq_approx"
test_debugmode.py;588;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2009-05-29 17:38:34-04:00;d8323502c2ef5a0134c1e1dde46c157ed01b67d7;"merge + float32 gradient modifications (sorry for combining the two!)"
test_pfunc.py;111;ADD;Olivier Delalleau;delallea@iro;2009-07-03 12:58:52-04:00;605b91e45277936e237bee46813125d6b4f34b2b;"Copied content of TheanoProposal_shared_val into theano.compile.sandbox"
test_shared.py;76;ADD;Olivier Delalleau;delallea@iro;2009-07-03 12:58:52-04:00;605b91e45277936e237bee46813125d6b4f34b2b;""
test_shared.py;99;ADD;Olivier Delalleau;delallea@iro;2009-07-03 12:58:52-04:00;605b91e45277936e237bee46813125d6b4f34b2b;""
cc.py;661;ADD;bergstra@tikuanyin;bergstra@tikuanyin;2009-07-16 18:46:58-04:00;eb6569b55d46935ff40849b98bf63d0629895dbd;"ModuleCache works without the pkl file now, more robust to various errors"
nvcc_compiler.py;79;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-07-22 12:01:31-04:00;602e87d8fd0de8c884700881fb7e522a8ddbdecb;"added files that i forgot to add before"
walltime.py;18;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-07-23 19:47:30-04:00;31afc498f3e52966f2ccce6343658d0115310245;"elemwise and dimshuffle working, basic profiling."
test_nnet.py;180;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-08-07 15:06:34-04:00;24858525a5d0cf6b84679e7289813106a21e1e7d;"adding cross-entropy but not done yet"
test_nnet.py;247;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-08-07 15:06:34-04:00;24858525a5d0cf6b84679e7289813106a21e1e7d;""
test_nnet.py;22;ADD;Frederic Bastien;nouiz@nouiz.org;2009-08-14 12:57:06-04:00;b2dd656779dd7124e50c53d9a9893d0d1591e6f1;"made more general the PROFILE_MODE handling."
test_nnet.py;180;DELETED;Frederic Bastien;nouiz@nouiz.org;2009-08-14 12:57:06-04:00;b2dd656779dd7124e50c53d9a9893d0d1591e6f1;""
test_nnet.py;247;DELETED;Frederic Bastien;nouiz@nouiz.org;2009-08-14 12:57:06-04:00;b2dd656779dd7124e50c53d9a9893d0d1591e6f1;""
test_nnet.py;22;DELETED;Frederic Bastien;nouiz@nouiz.org;2009-08-18 16:01:32-04:00;60b6facf1bfbe495e1b9cc724698b66350e6d2ce;"don't hide bug in profile mode."
test_nnet.py;22;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2009-08-18 17:34:22-04:00;a3758920b2f7b0c73ef7e02d2b92381c205bdd3c;"merge"
debugmode.py;144;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-09-11 20:05:12-04:00;9d2ae40758edfaa9975891827cc404076217ae20;"minor improvements to DebugMode"
debugmode.py;161;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-09-11 20:05:12-04:00;9d2ae40758edfaa9975891827cc404076217ae20;""
debugmode.py;270;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-09-11 20:05:12-04:00;9d2ae40758edfaa9975891827cc404076217ae20;""
debugmode.py;880;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2009-09-26 18:48:20-04:00;c11b64adbf00b73821b0d1e8e42ac4b8a7f827a0;"Removed useless code from DebugMode's linker."
debugmode.py;880;DELETED;Olivier Delalleau;delallea@iro;2009-09-29 13:36:03-04:00;f9a67241ed822a778998696eb28550474caa98ca;"Merged"
cc.py;1082;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2009-10-01 15:44:54-04:00;847b39ffc7db597aa3a9a866e1b03fbca076b1c3;"Removed deprecated cache mechanism from OpWiseCLinker."
pfunc.py;90;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2009-10-05 18:03:55-04:00;bc1ffeea275939d0b0a14db4a47ffe10da530e23;"added givens parameter to compile.sandbox.pfunc"
debugmode.py;179;ADD;Frederic Bastien;nouiz@nouiz.org;2009-11-18 14:35:12-05:00;69adb6ee37d4d4e86b51e40d976b386beceb58d9;"fix the printing of BadOptimization when we have CudaNdarray."
nnet.py;928;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-01-08 21:10:34-05:00;f6911c94bd999e1464e2e749dc6cbe33e4100192;"Added optimization to remove advanced indexing method of expressing cross-entropy"
nnet.py;939;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-01-08 21:10:34-05:00;f6911c94bd999e1464e2e749dc6cbe33e4100192;""
nnet.py;928;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2010-01-11 01:15:44-05:00;fd7e6d591b11a16bd37135a493959ff3e7f2dd30;"merge"
nnet.py;939;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2010-01-11 01:15:44-05:00;fd7e6d591b11a16bd37135a493959ff3e7f2dd30;""
scan.py;30;ADD;Razvan Pascanu;r.pascanu@gmail.com;2010-01-20 15:50:43-05:00;8779c7eb6365a69c252558f4978eb1e4095c49db;"fixed scan hashing issue"
scan.py;30;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2010-01-20 20:17:11-05:00;618a8e256060e042650bc538a9ad0e3a4b830a0f;"merge"
test_conv_cuda_ndarray.py;148;ADD;Frederic Bastien;nouiz@nouiz.org;2010-01-25 16:50:10-05:00;a68097aa9cff0c815368bbfceb44524b0328ea51;"included cuda_ndarray in theano to have everything in one package."
test_debugmode.py;558;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2010-01-29 11:31:23-05:00;5a0e994365c3d4f8079e2bb92df6b3c2f2a89bca;"corrections to DebugMode test of checks_isfinite"
test_debugmode.py;566;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2010-01-29 11:31:23-05:00;5a0e994365c3d4f8079e2bb92df6b3c2f2a89bca;""
test_debugmode.py;574;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2010-01-29 11:31:23-05:00;5a0e994365c3d4f8079e2bb92df6b3c2f2a89bca;""
test_debugmode.py;558;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2010-01-29 13:23:30-05:00;86ec00c02b02c383229c32828c629ee7c5db2e4d;"merge"
test_debugmode.py;566;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2010-01-29 13:23:30-05:00;86ec00c02b02c383229c32828c629ee7c5db2e4d;""
test_debugmode.py;574;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2010-01-29 13:23:30-05:00;86ec00c02b02c383229c32828c629ee7c5db2e4d;""
test_debugmode.py;558;DELETED;Dumitru Erhan;dumitru.erhan@gmail.com;2010-01-29 14:20:09-05:00;b4c881d10aa8e12668301dd89b29cfc7a2ca6697;"merge"
test_debugmode.py;566;DELETED;Dumitru Erhan;dumitru.erhan@gmail.com;2010-01-29 14:20:09-05:00;b4c881d10aa8e12668301dd89b29cfc7a2ca6697;""
test_debugmode.py;574;DELETED;Dumitru Erhan;dumitru.erhan@gmail.com;2010-01-29 14:20:09-05:00;b4c881d10aa8e12668301dd89b29cfc7a2ca6697;""
test_conv.py;178;ADD;gdesjardins;devnull@localhost;2010-01-29 16:22:36-05:00;1aeffb176614dd4c709b182cf5d0925a7e6f78ee;"Moved conv.py out of sandbox, with small cleanups: * removed numpy as N, tensor as T * wrapped docstrings to 80cols * moved getFilterOutShp to staticmethod * removed some useless code (old convolve2 function)  Reimplemented unittests for conv.  Speed tests will go in separate file (to come)"
test_conv.py;178;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-01-29 23:40:19-05:00;45f07e9348eab49902a97b82d5955f933137a6b9;"merge"
test_conv.py;178;ADD;gdesjardins;devnull@localhost;2010-02-01 18:21:08-05:00;0923873d080b67c69148504fcb85b80d5924338f;"* moved tensor/nnet.py to tensor/nnet/nnet.py * moved sandbox/conv.py to tensor/nnet/conv.py * created tensor/signal/conv.py which implements generic 2D convolution (i.e. traditional signal processing definition) + tests * added tensor/nnet/tests/speed_test_conv.py which contains Fred's speed tests for ConvOp * added appropriate documentation to sphinx library docs"
scan.py;55;ADD;Razvan Pascanu;r.pascanu@gmail.com;2010-02-11 20:45:00-05:00;25d974924b5817ffdf63ccae41e3427c322527d9;"scan added to theano"
scan.py;55;ADD;Razvan Pascanu;r.pascanu@gmail.com;2010-02-11 20:45:46-05:00;4fbce4113c25d634f827b03234ad95a6db13eb83;"merge"
scan.py;60;DELETED;Razvan Pascanu;r.pascanu@gmail.com;2010-02-17 10:31:39-05:00;9563676fa87bac1fbc04b4ac298dad4482c78776;"Deleted sandbox versions"
opt.py;505;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-02-17 23:01:23-05:00;a1a2a394f7f6cfff3ddde643d7e1ab20046ad914;"Moved most of ShapeOptimizer -> ShapeFeature.  An Env feature persists throughout the life of the env, so many optimizations can take advantage of the Shape analysis done by ShapeFeature."
opt.py;513;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-02-17 23:01:23-05:00;a1a2a394f7f6cfff3ddde643d7e1ab20046ad914;""
opt.py;505;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-02-17 23:18:37-05:00;af804be5844ffa63b888f5f9cd05084364124586;"merge"
opt.py;513;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-02-17 23:18:37-05:00;af804be5844ffa63b888f5f9cd05084364124586;""
scan.py;60;ADD;Razvan Pascanu;r.pascanu@gmail.com;2010-03-03 14:16:24-05:00;432ef1240ab8a8fe8f172c993c0b68dfa6851a87;"Fixed a bug in pfunc ( bug =  when you replaced a shared variable with givens, the shared variable did not got replaced, and the update rule was executed ) that resulted in fixing the failing tests of scan. I also did a bit of cleaining in scan tests and code, and fix an unobserved bug in inplace computation of scan plus made sure scan knows (once the optimization is written) to only store the last k steps of an output"
scan.py;59;DELETED;Razvan Pascanu;r.pascanu@gmail.com;2010-03-03 14:16:24-05:00;432ef1240ab8a8fe8f172c993c0b68dfa6851a87;""
rng_mrg.py;600;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-03-19 12:55:52-04:00;9b304769c22dccefa256e310ab96193d62e44ced;"rng_mrg - writing it"
rng_mrg.py;600;ADD;Olivier Delalleau;delallea@iro;2010-03-19 13:37:10-04:00;6736be2945cf857ec1b5d34902be16e9786ba6eb;"Merged"
test_conv.py;88;ADD;Frederic Bastien;nouiz@nouiz.org;2010-03-25 12:43:55-04:00;36f7e849d503d1607dd8345da2f145ea9768051c;"make tests valid that both case fail"
test_conv.py;180;ADD;Frederic Bastien;nouiz@nouiz.org;2010-03-30 15:57:53-04:00;adab6fba31bd62d98779e2e2f2635ba64958980a;"make the test more fine granular"
test_conv.py;186;ADD;Frederic Bastien;nouiz@nouiz.org;2010-03-30 15:57:53-04:00;adab6fba31bd62d98779e2e2f2635ba64958980a;""
test_conv.py;180;ADD;Razvan Pascanu;r.pascanu@gmail.com;2010-04-01 08:49:56-04:00;be0902fba92646e106894e8857397368584bbbbf;"merge"
test_conv.py;186;ADD;Razvan Pascanu;r.pascanu@gmail.com;2010-04-01 08:49:56-04:00;be0902fba92646e106894e8857397368584bbbbf;""
basic.py;3128;ADD;Frederic Bastien;nouiz@nouiz.org;2010-04-08 11:21:18-04:00;a3ea318e7c0400c1d27470d77b4fe174ddde8058;"fix syntax error of tensor.ARange.infer_shape found by Justin Brayer and fix behavior error found while making test for that case.  Added test for this. The new graph are ugly... 12 ops with dimshuffles and rebroardcast..."
test_basic.py;661;ADD;Frederic Bastien;nouiz@nouiz.org;2010-04-09 11:13:05-04:00;8ef9a3f02352617be4ffbe1527dc0fe6931e4efe;"backport test to python24"
test_basic.py;673;ADD;Frederic Bastien;nouiz@nouiz.org;2010-04-09 11:13:05-04:00;8ef9a3f02352617be4ffbe1527dc0fe6931e4efe;""
test_basic.py;812;ADD;Frederic Bastien;nouiz@nouiz.org;2010-04-09 11:13:05-04:00;8ef9a3f02352617be4ffbe1527dc0fe6931e4efe;""
test_basic.py;660;DELETED;Frederic Bastien;nouiz@nouiz.org;2010-04-09 11:13:05-04:00;8ef9a3f02352617be4ffbe1527dc0fe6931e4efe;""
test_basic.py;671;DELETED;Frederic Bastien;nouiz@nouiz.org;2010-04-09 11:13:05-04:00;8ef9a3f02352617be4ffbe1527dc0fe6931e4efe;""
test_basic.py;808;DELETED;Frederic Bastien;nouiz@nouiz.org;2010-04-09 11:13:05-04:00;8ef9a3f02352617be4ffbe1527dc0fe6931e4efe;""
test_basic.py;691;ADD;fsavard;devnull@localhost;2010-04-09 16:49:20-04:00;29b9b7211e6c35856267d1c7ad1718bddafdd9f6;"Merge"
test_basic.py;703;ADD;fsavard;devnull@localhost;2010-04-09 16:49:20-04:00;29b9b7211e6c35856267d1c7ad1718bddafdd9f6;""
test_basic.py;842;ADD;fsavard;devnull@localhost;2010-04-09 16:49:20-04:00;29b9b7211e6c35856267d1c7ad1718bddafdd9f6;""
test_basic.py;660;DELETED;fsavard;devnull@localhost;2010-04-09 16:49:20-04:00;29b9b7211e6c35856267d1c7ad1718bddafdd9f6;""
test_basic.py;671;DELETED;fsavard;devnull@localhost;2010-04-09 16:49:20-04:00;29b9b7211e6c35856267d1c7ad1718bddafdd9f6;""
test_basic.py;808;DELETED;fsavard;devnull@localhost;2010-04-09 16:49:20-04:00;29b9b7211e6c35856267d1c7ad1718bddafdd9f6;""
basic.py;180;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-04-21 17:29:41-04:00;a4646f2c45c98967480d847e5f68c8765ff515ca;"revised handling of casting of constant and shared scalars.  The basic idea is to apply autocasting to constants but not to shared scalars.  Joint work with Fred."
basic.py;1880;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-04-21 17:29:41-04:00;a4646f2c45c98967480d847e5f68c8765ff515ca;""
test_cuda_ndarray.py;263;ADD;Frederic Bastien;nouiz@nouiz.org;2010-04-23 10:22:37-04:00;5b5735d6bb3308e1a5b661db07192b6a32858832;"Fix a bug found with James in CudaNdarray.__getitem__ with negitave index.  Fix a bug found with new test. We did not raise correctly error when we where out of bound.  Added more tests case that cover those case."
test_cuda_ndarray.py;274;ADD;Frederic Bastien;nouiz@nouiz.org;2010-04-23 10:54:43-04:00;743f01e78000d2e1923a3776e169f1bb9dee0654;"make the indexing with int and slice into 0d array return the same error as with numpy."
test_complex.py;22;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-13 14:14:39-04:00;1a2e513560cd8e12fff2f130f922e98962525910;"added a few tests of new complex ops"
test_complex.py;27;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-13 14:14:39-04:00;1a2e513560cd8e12fff2f130f922e98962525910;""
test_complex.py;22;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-18 14:38:42-04:00;0626f5219f7b6fc47167f2271d9c469f21974ffd;"merge"
test_complex.py;27;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-18 14:38:42-04:00;0626f5219f7b6fc47167f2271d9c469f21974ffd;""
debugmode.py;117;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-21 16:43:15-04:00;350103879f9f53d54410f8b26b22f7d4509d8e95;"DebugMode - adding debug info to BadCLinkerOutput"
debugmode.py;129;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-21 16:43:15-04:00;350103879f9f53d54410f8b26b22f7d4509d8e95;""
debugmode.py;146;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-21 16:43:15-04:00;350103879f9f53d54410f8b26b22f7d4509d8e95;""
debugmode.py;117;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-21 23:58:44-04:00;c71069c29f8cbe1270deede79acd9146ce0f9ac1;"merge"
debugmode.py;129;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-21 23:58:44-04:00;c71069c29f8cbe1270deede79acd9146ce0f9ac1;""
debugmode.py;146;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-21 23:58:44-04:00;c71069c29f8cbe1270deede79acd9146ce0f9ac1;""
test_complex.py;22;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-21 23:58:44-04:00;c71069c29f8cbe1270deede79acd9146ce0f9ac1;""
test_complex.py;27;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-21 23:58:44-04:00;c71069c29f8cbe1270deede79acd9146ce0f9ac1;""
debugmode.py;117;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-23 12:54:20-04:00;a51e621e8e881967d04c0be336a667757860320d;"merge"
debugmode.py;129;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-23 12:54:20-04:00;a51e621e8e881967d04c0be336a667757860320d;""
debugmode.py;146;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-23 12:54:20-04:00;a51e621e8e881967d04c0be336a667757860320d;""
test_complex.py;22;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-23 12:54:20-04:00;a51e621e8e881967d04c0be336a667757860320d;""
test_complex.py;27;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-23 12:54:20-04:00;a51e621e8e881967d04c0be336a667757860320d;""
rng_mrg.py;608;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2010-05-25 02:49:19-04:00;0e861a54e27cd08781c4c742f1995450306b0358;"New keyword to explicitly choose a number of streams in uniform()"
rng_mrg.py;608;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-25 12:18:46-04:00;5878362729db77b0849b4b02b35ab1f9b691677e;"merge"
test_elemwise.py;197;ADD;Frederic Bastien;nouiz@nouiz.org;2010-05-25 13:19:33-04:00;64a95964223297b6aa5aa7457107cdf4e9859503;"make T.max() return a CAReduce instance as this is faster.  Add test for CAReduce{maximum,mul} and modified CAReduce to handle correctly maximum."
test_elemwise.py;197;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-05-25 15:31:51-04:00;0488bd55bf154afb516cbb970587a135bfcc207a;"merge"
rng_mrg.py;608;DELETED;Frederic Bastien;nouiz@nouiz.org;2010-06-01 14:59:14-04:00;b58fbb8525bbd8af8449820d473f9fbf3384c891;"merge"
debugmode.py;117;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:00:58-04:00;a07a1213037b7e6dd643facf9a75de9554a1a8b6;"merge"
debugmode.py;129;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:00:58-04:00;a07a1213037b7e6dd643facf9a75de9554a1a8b6;""
debugmode.py;146;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:00:58-04:00;a07a1213037b7e6dd643facf9a75de9554a1a8b6;""
test_complex.py;22;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:00:58-04:00;a07a1213037b7e6dd643facf9a75de9554a1a8b6;""
test_complex.py;27;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:00:58-04:00;a07a1213037b7e6dd643facf9a75de9554a1a8b6;""
debugmode.py;117;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:09:01-04:00;030d2ddd4299ee1865be98b84dcce27fbd2c2820;"merge"
debugmode.py;129;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:09:01-04:00;030d2ddd4299ee1865be98b84dcce27fbd2c2820;""
debugmode.py;146;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:09:01-04:00;030d2ddd4299ee1865be98b84dcce27fbd2c2820;""
test_complex.py;22;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:09:01-04:00;030d2ddd4299ee1865be98b84dcce27fbd2c2820;""
test_complex.py;27;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:09:01-04:00;030d2ddd4299ee1865be98b84dcce27fbd2c2820;""
debugmode.py;117;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:16:32-04:00;2fb51c86de216c8819a11c6a64d35739b4900da2;"merge"
debugmode.py;129;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:16:32-04:00;2fb51c86de216c8819a11c6a64d35739b4900da2;""
debugmode.py;146;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:16:32-04:00;2fb51c86de216c8819a11c6a64d35739b4900da2;""
test_complex.py;22;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:16:32-04:00;2fb51c86de216c8819a11c6a64d35739b4900da2;""
test_complex.py;27;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:16:32-04:00;2fb51c86de216c8819a11c6a64d35739b4900da2;""
debugmode.py;117;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:33:16-04:00;ba2cdabb036088fed3c5e896a109dd258de4881b;"merge"
debugmode.py;129;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:33:16-04:00;ba2cdabb036088fed3c5e896a109dd258de4881b;""
debugmode.py;146;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:33:16-04:00;ba2cdabb036088fed3c5e896a109dd258de4881b;""
test_complex.py;22;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:33:16-04:00;ba2cdabb036088fed3c5e896a109dd258de4881b;""
test_complex.py;27;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-01 15:33:16-04:00;ba2cdabb036088fed3c5e896a109dd258de4881b;""
debugmode.py;117;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:01:42-04:00;69dca6c85ed3fab69bca411b8c8845c85dda705f;"merge"
debugmode.py;129;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:01:42-04:00;69dca6c85ed3fab69bca411b8c8845c85dda705f;""
debugmode.py;146;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:01:42-04:00;69dca6c85ed3fab69bca411b8c8845c85dda705f;""
test_complex.py;22;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:01:42-04:00;69dca6c85ed3fab69bca411b8c8845c85dda705f;""
test_complex.py;27;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:01:42-04:00;69dca6c85ed3fab69bca411b8c8845c85dda705f;""
debugmode.py;117;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:27:48-04:00;755188ae70f88efaaabf1eecbd7fa06c4761d4f1;"merge"
debugmode.py;129;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:27:48-04:00;755188ae70f88efaaabf1eecbd7fa06c4761d4f1;""
debugmode.py;146;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:27:48-04:00;755188ae70f88efaaabf1eecbd7fa06c4761d4f1;""
test_complex.py;22;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:27:48-04:00;755188ae70f88efaaabf1eecbd7fa06c4761d4f1;""
test_complex.py;27;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:27:48-04:00;755188ae70f88efaaabf1eecbd7fa06c4761d4f1;""
debugmode.py;117;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:28:22-04:00;f70d4149a9bbe03769ca636d5eda5cc8005faf96;"merge"
debugmode.py;129;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:28:22-04:00;f70d4149a9bbe03769ca636d5eda5cc8005faf96;""
debugmode.py;146;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:28:22-04:00;f70d4149a9bbe03769ca636d5eda5cc8005faf96;""
test_complex.py;22;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:28:22-04:00;f70d4149a9bbe03769ca636d5eda5cc8005faf96;""
test_complex.py;27;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:28:22-04:00;f70d4149a9bbe03769ca636d5eda5cc8005faf96;""
debugmode.py;117;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:28:52-04:00;1a797fb4d5a435c0a5a00ea068e00ca0ea0a01f7;"merge"
debugmode.py;129;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:28:52-04:00;1a797fb4d5a435c0a5a00ea068e00ca0ea0a01f7;""
debugmode.py;146;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:28:52-04:00;1a797fb4d5a435c0a5a00ea068e00ca0ea0a01f7;""
test_complex.py;22;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:28:52-04:00;1a797fb4d5a435c0a5a00ea068e00ca0ea0a01f7;""
test_complex.py;27;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-07 16:28:52-04:00;1a797fb4d5a435c0a5a00ea068e00ca0ea0a01f7;""
test_complex.py;22;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-09 09:00:14-04:00;d38aff3e013fbcee3c9624241e5efb7bf5c9c97e;"updated complex test to match new implementations of real and imag"
test_complex.py;27;DELETED;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-09 09:00:14-04:00;d38aff3e013fbcee3c9624241e5efb7bf5c9c97e;""
debugmode.py;117;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-09 09:01:06-04:00;037d409ad350bc3ba86db7e8e725d30257f4b09f;"merge"
debugmode.py;129;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-09 09:01:06-04:00;037d409ad350bc3ba86db7e8e725d30257f4b09f;""
debugmode.py;146;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-09 09:01:06-04:00;037d409ad350bc3ba86db7e8e725d30257f4b09f;""
basic.py;1785;ADD;Frederic Bastien;nouiz@nouiz.org;2010-06-30 12:05:37-04:00;3a5e8260b044db5ee03ab8e9aaa298257b36efcb;"a test where we generate an Elemwise composite with a mod that don't compile and commit the fix at the same time."
gen_graph.py;9;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-30 16:15:41-04:00;f57ea7bdacfe7f7f157edf53a77413d83f2ff353;"modified gen_graph for benchmarking elementwise stuff to make stdout comprehensible"
basic.py;1783;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2010-06-30 16:17:54-04:00;e16f2ec73b1a6dd85c54e96940a5ac5f44c45b98;"merge"
test_basic_ops.py;220;ADD;Frederic Bastien;nouiz@nouiz.org;2010-07-21 11:53:41-04:00;d0b42eff74877c43e2e0c9d27aae675bbc8205a1;"GpuElemwise now raise an error when we could broadcast input to make the code run but did not set the broadcast flags to True. Added test that we raise this error."
test_basic_ops.py;219;ADD;Ian Goodfellow;devnull@localhost;2010-07-22 16:30:19-04:00;47d5b5a4675c4b2f1db6654ede17a0355637af3a;"merged after an hg pull"
test_basic.py;2705;ADD;Frederic Bastien;nouiz@nouiz.org;2010-07-26 09:28:26-04:00;59a438503bec337f3a2cb8fb31123ef3ecfaec11;"make theano raise an error if ndarray are not aligned and make a test for it."
test_cuda_ndarray.py;426;ADD;Frederic Bastien;nouiz@nouiz.org;2010-07-28 11:21:14-04:00;0624a8dcb07429c513aa244830cb75ad786f1cc1;"CudaNdarray.__setitem now accept an ndarray as a value. It copy the data direction. Restriction, no broadcasting, the CudaNdarray slice must be c contiguous."
test_cuda_ndarray.py;455;ADD;Frederic Bastien;nouiz@nouiz.org;2010-07-28 11:21:14-04:00;0624a8dcb07429c513aa244830cb75ad786f1cc1;""
test_cuda_ndarray.py;610;ADD;Frederic Bastien;nouiz@nouiz.org;2010-07-28 11:21:14-04:00;0624a8dcb07429c513aa244830cb75ad786f1cc1;""
test_cuda_ndarray.py;624;ADD;Frederic Bastien;nouiz@nouiz.org;2010-07-28 11:21:14-04:00;0624a8dcb07429c513aa244830cb75ad786f1cc1;""
test_cuda_ndarray.py;640;ADD;Frederic Bastien;nouiz@nouiz.org;2010-07-28 11:21:14-04:00;0624a8dcb07429c513aa244830cb75ad786f1cc1;""
test_opt.py;1659;ADD;Frederic Bastien;nouiz@nouiz.org;2010-08-02 16:53:58-04:00;15694cfbfcff826d3a1bc54bd005d131ffffeb97;"add test for the change to MakeVector."
opt.py;1808;ADD;Frederic Bastien;nouiz@nouiz.org;2010-08-10 09:29:47-04:00;6477a5008486e5f5af3f267057d7c7e5fbbc4910;"added optimization: now optimize sum(alloc(x,shps)"
opt.py;1820;ADD;Frederic Bastien;nouiz@nouiz.org;2010-08-10 09:29:47-04:00;6477a5008486e5f5af3f267057d7c7e5fbbc4910;""
basic_scipy.py;12;ADD;Frederic Bastien;nouiz@nouiz.org;2010-09-08 13:25:05-04:00;2c9624338dbb48798f5224b25c96b038bac79ae0;"Add new scalar and elemwise op erf and erfc."
test_basic.py;28;ADD;Frederic Bastien;nouiz@nouiz.org;2010-09-08 13:25:05-04:00;2c9624338dbb48798f5224b25c96b038bac79ae0;""
opt.py;2063;ADD;Frederic Bastien;nouiz@nouiz.org;2010-09-20 11:29:19-04:00;60f286bcd5076f86226556b9749a4adbc08cd617;"fix an error that make some optimization not being done in some case."
test_basic.py;2525;ADD;Frederic Bastien;nouiz@nouiz.org;2010-09-27 11:20:54-04:00;4e0a1674e8b58a94d6456d7399a336b461f70c07;"make TensorDot and TensorDotGrad work with scalar axes. Add tests for that and test that is raise error."
test_basic.py;2533;ADD;Frederic Bastien;nouiz@nouiz.org;2010-09-27 11:20:54-04:00;4e0a1674e8b58a94d6456d7399a336b461f70c07;""
test_basic.py;2542;ADD;Frederic Bastien;nouiz@nouiz.org;2010-09-27 11:20:54-04:00;4e0a1674e8b58a94d6456d7399a336b461f70c07;""
opt.py;1203;ADD;Xavier Glorot;glorotxa@iro.umontreal.ca;2010-09-28 14:16:23-04:00;382d7e07e4e924243ae08a72001fe594f99da252;"Added try statement to switch sink optimizations not to raise constant checking errors"
opt.py;1211;ADD;Xavier Glorot;glorotxa@iro.umontreal.ca;2010-09-28 14:16:23-04:00;382d7e07e4e924243ae08a72001fe594f99da252;""
opt.py;1238;ADD;Xavier Glorot;glorotxa@iro.umontreal.ca;2010-09-28 14:16:23-04:00;382d7e07e4e924243ae08a72001fe594f99da252;""
opt.py;1245;ADD;Xavier Glorot;glorotxa@iro.umontreal.ca;2010-09-28 14:16:23-04:00;382d7e07e4e924243ae08a72001fe594f99da252;""
test_basic.py;934;ADD;Frederic Bastien;nouiz@nouiz.org;2010-09-29 11:54:42-04:00;f95f64b60faa25a9789f37f04017ca9e9d4a257b;"add test for the gradiant of T.max_and_argmax and add test for T.max."
test_basic.py;946;ADD;Frederic Bastien;nouiz@nouiz.org;2010-09-29 11:54:42-04:00;f95f64b60faa25a9789f37f04017ca9e9d4a257b;""
opt_uncanonicalize.py;71;ADD;Frederic Bastien;nouiz@nouiz.org;2010-09-29 13:04:10-04:00;78c2c35a983ccdf2207b4500129e833f22a65bda;"add a MaxAndArgmax optimization when argmax is not used."
test_basic.py;945;ADD;Frederic Bastien;nouiz@nouiz.org;2010-09-29 14:44:28-04:00;2b350631d61028c3bc8e86f5bfca29e09b4a7273;"add optimization -max(-x) -> min(x). Add test for min() and the new optimization."
test_basic.py;958;ADD;Frederic Bastien;nouiz@nouiz.org;2010-09-29 14:44:28-04:00;2b350631d61028c3bc8e86f5bfca29e09b4a7273;""
test_basic.py;949;DELETED;Frederic Bastien;nouiz@nouiz.org;2010-09-29 14:44:28-04:00;2b350631d61028c3bc8e86f5bfca29e09b4a7273;""
test_basic.py;961;DELETED;Frederic Bastien;nouiz@nouiz.org;2010-09-29 14:44:28-04:00;2b350631d61028c3bc8e86f5bfca29e09b4a7273;""
test_basic.py;943;ADD;Frederic Bastien;nouiz@nouiz.org;2010-09-29 15:30:01-04:00;30af53be192554db4f96332582da27893d689a9d;"add test for argmin"
test_basic.py;955;ADD;Frederic Bastien;nouiz@nouiz.org;2010-09-29 15:30:01-04:00;30af53be192554db4f96332582da27893d689a9d;""
test_basic.py;993;ADD;Frederic Bastien;nouiz@nouiz.org;2010-10-13 10:40:21-04:00;7dcaea7e6cec12c6f76b80bd9303c6ecc97f0546;"added test for argmax"
test_basic.py;1007;ADD;Frederic Bastien;nouiz@nouiz.org;2010-10-13 10:40:21-04:00;7dcaea7e6cec12c6f76b80bd9303c6ecc97f0546;""
test_basic.py;1063;ADD;Frederic Bastien;nouiz@nouiz.org;2010-10-13 10:40:21-04:00;7dcaea7e6cec12c6f76b80bd9303c6ecc97f0546;""
test_basic.py;1082;ADD;Frederic Bastien;nouiz@nouiz.org;2010-10-13 10:40:21-04:00;7dcaea7e6cec12c6f76b80bd9303c6ecc97f0546;""
test_basic.py;983;DELETED;Frederic Bastien;nouiz@nouiz.org;2010-10-13 10:40:21-04:00;7dcaea7e6cec12c6f76b80bd9303c6ecc97f0546;""
test_basic.py;995;DELETED;Frederic Bastien;nouiz@nouiz.org;2010-10-13 10:40:21-04:00;7dcaea7e6cec12c6f76b80bd9303c6ecc97f0546;""
test_neighbours.py;42;ADD;Frederic Bastien;nouiz@nouiz.org;2010-10-27 13:23:10-04:00;98d2a0c30357d08c8abc1b31e49cac28300be9da;"In Image2Neibs(images2neibs) op added the neib_step parameter and updated the gpu op to raise an error if it is not the default as it don't implement the new option."
test_neighbours.py;54;ADD;Frederic Bastien;nouiz@nouiz.org;2010-10-27 13:23:10-04:00;98d2a0c30357d08c8abc1b31e49cac28300be9da;""
test_neighbours.py;67;ADD;Frederic Bastien;nouiz@nouiz.org;2010-10-27 17:04:01-04:00;b3203222b85375aa52dec38493c7ac855ac16256;"implemented mode wrap_centered in Images2Neibs in cpu mode. Make gpu raise NotImplementedError"
test_neighbours.py;79;ADD;Frederic Bastien;nouiz@nouiz.org;2010-10-27 17:04:01-04:00;b3203222b85375aa52dec38493c7ac855ac16256;""
test_neighbours.py;91;ADD;Frederic Bastien;nouiz@nouiz.org;2010-10-27 17:04:01-04:00;b3203222b85375aa52dec38493c7ac855ac16256;""
test_neighbours.py;103;ADD;Frederic Bastien;nouiz@nouiz.org;2010-10-27 17:04:01-04:00;b3203222b85375aa52dec38493c7ac855ac16256;""
conv.py;27;ADD;Frederic Bastien;nouiz@nouiz.org;2010-11-02 08:54:36-04:00;981d42a900ba187b9addbf00ec8150b0ff8381bc;"Remove some scipy dependency. We disable the perform method of the convolution when scipy is not available."
test_conv_cuda_ndarray.py;9;ADD;Frederic Bastien;nouiz@nouiz.org;2010-11-02 10:21:30-04:00;ee0cd0a3d2161296a4d62204a12cfe6e3faadcb2;"remove scipy dependency"
test_conv_cuda_ndarray.py;9;ADD;Olivier Delalleau;delallea@iro;2010-11-05 09:22:21-04:00;925a4eb62391b8250216247db2c986a489cc8faf;"Merged"
conv.py;27;ADD;Olivier Delalleau;delallea@iro;2010-11-05 09:22:21-04:00;925a4eb62391b8250216247db2c986a489cc8faf;""
test_basic.py;3013;ADD;gdesjardins;devnull@localhost;2010-11-15 13:31:34-05:00;1a3052533858bfcc3f066d1b040ed75aa71a7466;"Made tensordot interface the same as the documentation. Also fixed tensordot to accept numpy syntax for axes."
test_basic.py;3020;ADD;gdesjardins;devnull@localhost;2010-11-15 13:31:34-05:00;1a3052533858bfcc3f066d1b040ed75aa71a7466;""
argparse.py;635;ADD;Josh Bleecher Snyder;josharian@gmail.com;2010-11-17 16:05:23-05:00;3ac57b00d9652077532148c07175ad1cf7b22a6e;"First cut at whitespace-checking pretxncommit hook."
argparse.py;1623;ADD;Josh Bleecher Snyder;josharian@gmail.com;2010-11-17 16:05:23-05:00;3ac57b00d9652077532148c07175ad1cf7b22a6e;""
argparse.py;635;ADD;David Warde-Farley;wardefar@iro.umontreal.ca;2010-11-17 18:52:21-05:00;d7fa47aab7f3e89827d5abbe4251a70c906566d2;"Merged with the last thing before Fred's updates which conflict."
argparse.py;1623;ADD;David Warde-Farley;wardefar@iro.umontreal.ca;2010-11-17 18:52:21-05:00;d7fa47aab7f3e89827d5abbe4251a70c906566d2;""
test_tutorial.py;893;ADD;Razvan Pascanu;r.pascanu@gmail.com;2010-11-19 08:16:39-05:00;0025ac5c630b2a165cbdd4c763e702e4ee932f08;"File containing the new tests"
basic.py;3404;ADD;David Warde-Farley;wardefar@iro.umontreal.ca;2010-12-01 14:21:21-05:00;fe246e7b736a9c5b076b9d0fdb4dd8c6b6c96686;"Fix for ticket #434. Appears not to break anything."
basic.py;3459;ADD;David Warde-Farley;wardefar@iro.umontreal.ca;2010-12-01 14:24:12-05:00;80a67b2737c2a471bb872057895000d5d9f73533;"Merge."
basic.py;3459;ADD;fsavard;devnull@localhost;2010-12-01 14:33:25-05:00;e8c50c788660e0949474c8d74f00959b0f870804;"merge"
test_may_share_memory.py;27;ADD;Frederic Bastien;nouiz@nouiz.org;2010-12-08 12:13:17-05:00;33adfef5c0416b8ad9e0e7e4d0d5893fcd58da95;"added new theano.misc.may_share_memory that handle more case and can be called in all case(with and without scipy,...). Test it."
test_may_share_memory.py;48;ADD;Frederic Bastien;nouiz@nouiz.org;2010-12-08 12:13:17-05:00;33adfef5c0416b8ad9e0e7e4d0d5893fcd58da95;""
test_may_share_memory.py;46;ADD;Frederic Bastien;nouiz@nouiz.org;2010-12-09 10:55:15-05:00;90789025a3541981c4a7d8ce3d272b258730f548;"test more case of may_share_memory"
test_may_share_memory.py;73;ADD;Frederic Bastien;nouiz@nouiz.org;2010-12-09 10:55:15-05:00;90789025a3541981c4a7d8ce3d272b258730f548;""
test_neighbours.py;405;ADD;Frederic Bastien;nouiz@nouiz.org;2010-12-15 10:20:27-05:00;e8756c306004125b091df08155cef282eed80a1b;"disable gradient of Images2Neibs for mode wrap_centered that is not implemented!"
test_neighbours.py;410;ADD;Frederic Bastien;nouiz@nouiz.org;2010-12-16 15:29:15-05:00;470c218f468127d2f65d8a5540561d8438716c3b;"correctly test gpu code. The test was disabled by accident."
test_may_share_memory.py;45;ADD;Frederic Bastien;nouiz@nouiz.org;2010-12-17 14:11:58-05:00;614ec6d563b6b6bcef689cf1c48baa11d83dacb7;"fix may_share_memory for sparse type as it was done for ndarray type. Add may_share_memory test for CudaNdarray type"
test_may_share_memory.py;50;ADD;Frederic Bastien;nouiz@nouiz.org;2010-12-17 14:11:58-05:00;614ec6d563b6b6bcef689cf1c48baa11d83dacb7;""
test_may_share_memory.py;76;ADD;Frederic Bastien;nouiz@nouiz.org;2010-12-17 14:11:58-05:00;614ec6d563b6b6bcef689cf1c48baa11d83dacb7;""
test_may_share_memory.py;81;ADD;Frederic Bastien;nouiz@nouiz.org;2010-12-17 14:11:58-05:00;614ec6d563b6b6bcef689cf1c48baa11d83dacb7;""
test_may_share_memory.py;44;DELETED;Frederic Bastien;nouiz@nouiz.org;2010-12-17 14:11:58-05:00;614ec6d563b6b6bcef689cf1c48baa11d83dacb7;""
test_may_share_memory.py;49;DELETED;Frederic Bastien;nouiz@nouiz.org;2010-12-17 14:11:58-05:00;614ec6d563b6b6bcef689cf1c48baa11d83dacb7;""
test_may_share_memory.py;71;DELETED;Frederic Bastien;nouiz@nouiz.org;2010-12-17 14:11:58-05:00;614ec6d563b6b6bcef689cf1c48baa11d83dacb7;""
test_may_share_memory.py;76;DELETED;Frederic Bastien;nouiz@nouiz.org;2010-12-17 14:11:58-05:00;614ec6d563b6b6bcef689cf1c48baa11d83dacb7;""
test_tensor_op.py;101;ADD;Frederic Bastien;nouiz@nouiz.org;2010-12-17 14:11:58-05:00;614ec6d563b6b6bcef689cf1c48baa11d83dacb7;""
test_tensor_op.py;106;ADD;Frederic Bastien;nouiz@nouiz.org;2010-12-17 14:11:58-05:00;614ec6d563b6b6bcef689cf1c48baa11d83dacb7;""
type.py;16;ADD;bastienf@bikat.iro.umontreal.ca;bastienf@bikat.iro.umontreal.ca;2010-12-22 11:07:12-05:00;3412d57fa869a98197431b071cefcffc15c67b9f;"allow importing theano.sandbox.cuda.{var,type} when nvcc is not their  this will allow building the library cuda doc on our webserver"
type.py;367;ADD;bastienf@bikat.iro.umontreal.ca;bastienf@bikat.iro.umontreal.ca;2010-12-22 11:07:12-05:00;3412d57fa869a98197431b071cefcffc15c67b9f;""
var.py;15;ADD;bastienf@bikat.iro.umontreal.ca;bastienf@bikat.iro.umontreal.ca;2010-12-22 11:07:12-05:00;3412d57fa869a98197431b071cefcffc15c67b9f;""
test_may_share_memory.py;45;ADD;Olivier Delalleau;delallea@iro;2011-01-07 10:09:10-05:00;5432363f04670c6cfa068fce616d3172541a7416;"Merged"
test_may_share_memory.py;50;ADD;Olivier Delalleau;delallea@iro;2011-01-07 10:09:10-05:00;5432363f04670c6cfa068fce616d3172541a7416;""
test_may_share_memory.py;76;ADD;Olivier Delalleau;delallea@iro;2011-01-07 10:09:10-05:00;5432363f04670c6cfa068fce616d3172541a7416;""
test_may_share_memory.py;81;ADD;Olivier Delalleau;delallea@iro;2011-01-07 10:09:10-05:00;5432363f04670c6cfa068fce616d3172541a7416;""
test_may_share_memory.py;44;DELETED;Olivier Delalleau;delallea@iro;2011-01-07 10:09:10-05:00;5432363f04670c6cfa068fce616d3172541a7416;""
test_may_share_memory.py;49;DELETED;Olivier Delalleau;delallea@iro;2011-01-07 10:09:10-05:00;5432363f04670c6cfa068fce616d3172541a7416;""
test_may_share_memory.py;71;DELETED;Olivier Delalleau;delallea@iro;2011-01-07 10:09:10-05:00;5432363f04670c6cfa068fce616d3172541a7416;""
test_may_share_memory.py;76;DELETED;Olivier Delalleau;delallea@iro;2011-01-07 10:09:10-05:00;5432363f04670c6cfa068fce616d3172541a7416;""
test_tensor_op.py;101;ADD;Olivier Delalleau;delallea@iro;2011-01-07 10:09:10-05:00;5432363f04670c6cfa068fce616d3172541a7416;""
test_tensor_op.py;106;ADD;Olivier Delalleau;delallea@iro;2011-01-07 10:09:10-05:00;5432363f04670c6cfa068fce616d3172541a7416;""
type.py;16;ADD;Olivier Delalleau;delallea@iro;2011-01-07 10:09:10-05:00;5432363f04670c6cfa068fce616d3172541a7416;""
type.py;367;ADD;Olivier Delalleau;delallea@iro;2011-01-07 10:09:10-05:00;5432363f04670c6cfa068fce616d3172541a7416;""
var.py;15;ADD;Olivier Delalleau;delallea@iro;2011-01-07 10:09:10-05:00;5432363f04670c6cfa068fce616d3172541a7416;""
test_neighbours.py;410;ADD;Olivier Delalleau;delallea@iro;2011-01-07 10:09:10-05:00;5432363f04670c6cfa068fce616d3172541a7416;""
cc.py;516;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2011-01-20 17:37:46-05:00;c6209b933e164bff3c559f9ab1e1cb28eb7530ac;"Split some lines, add a comment explaining "else:" after "try: / except:""
cc.py;516;ADD;Olivier Delalleau;delallea@iro;2011-01-21 09:59:31-05:00;2d2e548cdcf1e99fdd4f4195a1a0889efcd44167;"Merged"
configparser.py;78;ADD;Josh Bleecher Snyder;josharian@gmail.com;2011-01-28 18:03:04-08:00;eb873a041fef2b8bf77f830a8ab702e3ff0d51b9;"Only parse THEANO_FLAGS once. Warn when a value-less key is provided. Use warnings instead of print statements.  Fixes http://trac-hg.assembla.com/theano/ticket/565."
configparser.py;78;ADD;Ian Goodfellow;devnull@localhost;2011-03-16 19:05:25-04:00;a01aca11b576b9e09d0d28134fa2ab60c5e8d9cb;"merged"
test_blas.py;902;ADD;Ian Goodfellow;devnull@localhost;2011-03-18 13:59:20-04:00;22c567c09bb2e3985b35c4a76fafbf0a869b10f4;"ported scipy gemv tests"
test_blas.py;911;ADD;Ian Goodfellow;devnull@localhost;2011-03-18 13:59:20-04:00;22c567c09bb2e3985b35c4a76fafbf0a869b10f4;""
basic.py;2633;ADD;Razvan Pascanu;r.pascanu@gmail.com;2011-03-18 14:45:03-04:00;9c07bd6548460df1cc967743b9df6f4944de850b;"Added two function to help deal with subtensors. One function defines the slices given the idx_list and the list of node inputs. The other function transforms a slice into a canonical form ( where all entries are positives), which makes dealing with slices much easier. I've also refractored the perform of the Subtensor to use the first function ( since is mostly copy paste from that code anyway)"
basic.py;2633;ADD;Razvan Pascanu;r.pascanu@gmail.com;2011-03-18 14:46:20-04:00;4551ce727a162b956467a01ee08ebc9af563b396;"merge"
basic.py;2620;ADD;Razvan Pascanu;r.pascanu@gmail.com;2011-03-20 18:25:08-04:00;5e51a8f22b23e5270a8861741a3e007ca0823855;"move the extract_constant outside the canonical_form function so that I can re-use it for other optimizations."
basic.py;2631;DELETED;Razvan Pascanu;r.pascanu@gmail.com;2011-03-20 18:25:08-04:00;5e51a8f22b23e5270a8861741a3e007ca0823855;""
test_blas.py;908;DELETED;Frederic Bastien;nouiz@nouiz.org;2011-03-21 13:51:39-04:00;97c61d06e473d921d8144f3ef91edae164908356;"Test that gemv are inserted into the graph. Disable the gemv test on complex as they don't get inserted."
test_blas.py;917;DELETED;Frederic Bastien;nouiz@nouiz.org;2011-03-21 13:51:39-04:00;97c61d06e473d921d8144f3ef91edae164908356;""
opt.py;3422;ADD;Frederic Bastien;nouiz@nouiz.org;2011-03-21 16:58:36-04:00;f8e22d5ef5ff7a0192693c903a9af9c9d76bb037;"Make fusion optimizer faster for big graph."
opt.py;3421;DELETED;Frederic Bastien;nouiz@nouiz.org;2011-03-21 16:58:36-04:00;f8e22d5ef5ff7a0192693c903a9af9c9d76bb037;""
pycuda_init.py;20;ADD;Frederic Bastien;nouiz@nouiz.org;2011-03-25 15:52:32-04:00;63b17b095c1dc227fd88fc88e622c214c9211d1a;"'use a new way to init pycuda to work correctly with newer version of Theano and Pycuda.'"
__init__.py;163;ADD;Josh Bleecher Snyder;josharian@gmail.com;2011-03-25 17:30:08-07:00;a9cb097cfffe001f3ca3b36da5a8384fce3d7303;"prevent NameError when a prior error (unusual) caused variable not to be defined"
__init__.py;163;ADD;David Warde-Farley;wardefar@iro.umontreal.ca;2011-03-28 17:57:05-04:00;5aac104a2083ccefea1d9ba776762a2dfcd567d1;"Merge."
pfunc.py;172;DELETED;Frederic Bastien;nouiz@nouiz.org;2011-03-29 10:53:50-04:00;3a9c6df808aa782458d3a80e398d3e9957e4b04c;"merge the new Scan change in the trunk."
scan.py;79;DELETED;Frederic Bastien;nouiz@nouiz.org;2011-03-29 10:53:50-04:00;3a9c6df808aa782458d3a80e398d3e9957e4b04c;""
scan_utils.py;367;ADD;Frederic Bastien;nouiz@nouiz.org;2011-03-29 10:53:50-04:00;3a9c6df808aa782458d3a80e398d3e9957e4b04c;""
pfunc.py;172;DELETED;Razvan Pascanu;r.pascanu@gmail.com;2011-03-30 20:06:55-04:00;9c48e363774fffb072acd8420c40ac32f758c3f6;"merge with assembla"
scan.py;79;DELETED;Razvan Pascanu;r.pascanu@gmail.com;2011-03-30 20:06:55-04:00;9c48e363774fffb072acd8420c40ac32f758c3f6;""
scan_utils.py;374;ADD;Razvan Pascanu;r.pascanu@gmail.com;2011-03-30 20:06:55-04:00;9c48e363774fffb072acd8420c40ac32f758c3f6;""
pfunc.py;172;DELETED;Frederic Bastien;nouiz@nouiz.org;2011-04-01 15:13:38-04:00;de635cb9c28b97ccec10b8468666516725bb296f;"merge without conflict."
scan.py;79;DELETED;Frederic Bastien;nouiz@nouiz.org;2011-04-01 15:13:38-04:00;de635cb9c28b97ccec10b8468666516725bb296f;""
scan_utils.py;374;ADD;Frederic Bastien;nouiz@nouiz.org;2011-04-01 15:13:38-04:00;de635cb9c28b97ccec10b8468666516725bb296f;""
pfunc.py;172;DELETED;Ian Goodfellow;devnull@localhost;2011-04-06 10:53:43-04:00;163d88ea11bd4f7b251ff1a478e0dffe73c53991;"merged"
scan.py;79;DELETED;Ian Goodfellow;devnull@localhost;2011-04-06 10:53:43-04:00;163d88ea11bd4f7b251ff1a478e0dffe73c53991;""
scan_utils.py;374;ADD;Ian Goodfellow;devnull@localhost;2011-04-06 10:53:43-04:00;163d88ea11bd4f7b251ff1a478e0dffe73c53991;""
test_gradient.py;261;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2011-04-21 11:05:37-04:00;f9dd5a84cbbe776f323441019a53f6adb94c5e2a;"added unimplented_grad method to theano.gradient"
test_gradient.py;261;ADD;Ian Goodfellow;devnull@localhost;2011-04-21 15:50:47-04:00;2317ffbbb1fc148a5950225506fed97d5a56c538;"merge"
test_opt.py;655;ADD;Olivier Delalleau;delallea@iro;2011-05-11 11:56:00-04:00;875aa3d7043df1455beba12acb1e56f488f92c86;"Fixed test on integer division, since it is now supposed to raise an exception"
test_opt.py;655;ADD;Olivier Delalleau;delallea@iro;2011-05-11 15:58:36-04:00;61493b722f6ece5472286fd2c48449d4c482c974;"Merged"
test_basic.py;187;ADD;Olivier Delalleau;delallea@iro;2011-05-12 16:51:43-04:00;24f42f24e710f7d044fa6a0cb38a7ed978eb79a6;"Added a simple test to test that Theano crashes when trying to do x % y with either x or y a complex number"
test_basic.py;4699;ADD;Olivier Delalleau;delallea@iro;2011-05-13 10:38:00-04:00;7c94a2ea8204d5402731d9dbc47ff4a4ee0cddc4;"Added test to make sure Mod fails on complex tensors as well"
test_basic.py;187;ADD;Olivier Delalleau;delallea@iro;2011-05-16 09:08:35-04:00;c326cc224da59ae2350f017dc4af6d579a545c38;"Merged"
test_basic.py;4699;ADD;Olivier Delalleau;delallea@iro;2011-05-16 09:08:35-04:00;c326cc224da59ae2350f017dc4af6d579a545c38;""
test_opt.py;656;ADD;Olivier Delalleau;delallea@iro;2011-05-16 09:08:35-04:00;c326cc224da59ae2350f017dc4af6d579a545c38;""
test_basic.py;187;ADD;Olivier Delalleau;delallea@iro;2011-05-19 17:01:42-04:00;7e06433073cca5b98bbb85f9522ff7de6879e23c;"Merged"
test_basic.py;4748;ADD;Olivier Delalleau;delallea@iro;2011-05-19 17:01:42-04:00;7e06433073cca5b98bbb85f9522ff7de6879e23c;""
test_opt.py;656;ADD;Olivier Delalleau;delallea@iro;2011-05-19 17:01:42-04:00;7e06433073cca5b98bbb85f9522ff7de6879e23c;""
test_basic.py;187;ADD;Olivier Delalleau;delallea@iro;2011-05-20 09:06:54-04:00;77223d4910669448fee722786c4e24148ee7c2ee;"Merged"
test_basic.py;4748;ADD;Olivier Delalleau;delallea@iro;2011-05-20 09:06:54-04:00;77223d4910669448fee722786c4e24148ee7c2ee;""
test_opt.py;656;ADD;Olivier Delalleau;delallea@iro;2011-05-20 09:06:54-04:00;77223d4910669448fee722786c4e24148ee7c2ee;""
test_basic.py;187;ADD;Olivier Delalleau;delallea@iro;2011-05-24 11:33:25-04:00;64c46aa123ea276e187f4d97858610cb698f964d;"Merged"
test_basic.py;4748;ADD;Olivier Delalleau;delallea@iro;2011-05-24 11:33:25-04:00;64c46aa123ea276e187f4d97858610cb698f964d;""
test_opt.py;656;ADD;Olivier Delalleau;delallea@iro;2011-05-24 11:33:25-04:00;64c46aa123ea276e187f4d97858610cb698f964d;""
test_basic.py;187;ADD;Olivier Delalleau;delallea@iro;2011-06-03 11:25:53-04:00;da2a1bbd8c25a1432b79e0945ecd0383a9e9a76b;"Merged"
test_basic.py;4748;ADD;Olivier Delalleau;delallea@iro;2011-06-03 11:25:53-04:00;da2a1bbd8c25a1432b79e0945ecd0383a9e9a76b;""
test_opt.py;656;ADD;Olivier Delalleau;delallea@iro;2011-06-03 11:25:53-04:00;da2a1bbd8c25a1432b79e0945ecd0383a9e9a76b;""
test_basic.py;187;ADD;Olivier Delalleau;delallea@iro;2011-06-06 09:09:35-04:00;4bcbc2f5ff46fa26d5e4a05ac61984a6db2db227;"Merged"
test_basic.py;4748;ADD;Olivier Delalleau;delallea@iro;2011-06-06 09:09:35-04:00;4bcbc2f5ff46fa26d5e4a05ac61984a6db2db227;""
test_opt.py;656;ADD;Olivier Delalleau;delallea@iro;2011-06-06 09:09:35-04:00;4bcbc2f5ff46fa26d5e4a05ac61984a6db2db227;""
test_basic.py;187;ADD;Olivier Delalleau;delallea@iro;2011-06-06 23:29:52-04:00;2084204ca63f388de0f23993689612b42975b2d0;"Merged -- solved conflict in theano/tensor/basic.py"
test_basic.py;4794;ADD;Olivier Delalleau;delallea@iro;2011-06-06 23:29:52-04:00;2084204ca63f388de0f23993689612b42975b2d0;""
test_opt.py;666;ADD;Olivier Delalleau;delallea@iro;2011-06-06 23:29:52-04:00;2084204ca63f388de0f23993689612b42975b2d0;""
test_basic.py;187;ADD;Olivier Delalleau;delallea@iro;2011-06-07 10:58:49-04:00;8902caa2e74762e20dde954a70eb1ed39bad26b0;"Merged"
test_basic.py;4794;ADD;Olivier Delalleau;delallea@iro;2011-06-07 10:58:49-04:00;8902caa2e74762e20dde954a70eb1ed39bad26b0;""
test_opt.py;666;ADD;Olivier Delalleau;delallea@iro;2011-06-07 10:58:49-04:00;8902caa2e74762e20dde954a70eb1ed39bad26b0;""
test_basic.py;187;ADD;Olivier Delalleau;delallea@iro;2011-06-07 11:50:02-04:00;0ca40811ef63289158992824e601a2adf726818a;"Merged -- Recovered merged theano/tensor/basic.py from ef6faf480b24"
test_basic.py;4794;ADD;Olivier Delalleau;delallea@iro;2011-06-07 11:50:02-04:00;0ca40811ef63289158992824e601a2adf726818a;""
test_opt.py;666;ADD;Olivier Delalleau;delallea@iro;2011-06-07 11:50:02-04:00;0ca40811ef63289158992824e601a2adf726818a;""
test_basic.py;187;ADD;Olivier Delalleau;delallea@iro;2011-06-07 12:45:48-04:00;480d65c29541226649c9397250da417e99061069;"Remerged 3446d3f07946 and 0fd23055db15: the merge in 491d6aa69509 was incorrect due to badly configured merge tool"
test_basic.py;4794;ADD;Olivier Delalleau;delallea@iro;2011-06-07 12:45:48-04:00;480d65c29541226649c9397250da417e99061069;""
test_opt.py;666;ADD;Olivier Delalleau;delallea@iro;2011-06-07 12:45:48-04:00;480d65c29541226649c9397250da417e99061069;""
test_basic.py;187;ADD;Olivier Delalleau;delallea@iro;2011-06-07 21:35:04-04:00;2f3d6d7389005644f5f7f123ef846b0e02fceacd;"Merged -- solved conflict in theano/configdefaults.py"
test_basic.py;4797;ADD;Olivier Delalleau;delallea@iro;2011-06-07 21:35:04-04:00;2f3d6d7389005644f5f7f123ef846b0e02fceacd;""
test_opt.py;666;ADD;Olivier Delalleau;delallea@iro;2011-06-07 21:35:04-04:00;2f3d6d7389005644f5f7f123ef846b0e02fceacd;""
test_basic.py;187;ADD;Olivier Delalleau;delallea@iro;2011-06-08 08:48:35-04:00;00ecd70db9d9ffcaefbf279f4ef0c58226a9184f;"Merged"
test_basic.py;4797;ADD;Olivier Delalleau;delallea@iro;2011-06-08 08:48:35-04:00;00ecd70db9d9ffcaefbf279f4ef0c58226a9184f;""
test_opt.py;666;ADD;Olivier Delalleau;delallea@iro;2011-06-08 08:48:35-04:00;00ecd70db9d9ffcaefbf279f4ef0c58226a9184f;""
ops.py;64;ADD;boulanni;nicolas_boulanger@hotmail.com;2011-06-08 12:43:30-04:00;c2905e7b8707eb077a7e2b0ba63d518a83d04f1d;"linalg"
ops.py;64;ADD;boulanni;nicolas_boulanger@hotmail.com;2011-06-08 13:06:51-04:00;7048569d7d00f85a0321028ff9a30664238e75eb;"merge"
ops.py;64;ADD;Olivier Delalleau;delallea@iro;2011-06-08 14:50:20-04:00;f09168ed614595d75acc777a6958b5cb4b72d603;"Merged"
test_basic.py;187;ADD;Olivier Delalleau;delallea@iro;2011-06-08 15:55:48-04:00;1b08347321c55d0396937c67915b76943120b9e9;"Merged"
test_basic.py;4820;ADD;Olivier Delalleau;delallea@iro;2011-06-08 15:55:48-04:00;1b08347321c55d0396937c67915b76943120b9e9;""
test_opt.py;666;ADD;Olivier Delalleau;delallea@iro;2011-06-08 15:55:48-04:00;1b08347321c55d0396937c67915b76943120b9e9;""
test_opt.py;666;DELETED;Olivier Delalleau;delallea@iro;2011-06-09 13:54:25-04:00;c82a180b91e066c419761296d6135e688e112e37;"Reverted 81914b004731 to fix a test in a way that better preserves its original goal"
ops.py;63;ADD;Olivier Delalleau;delallea@iro;2011-06-10 11:39:34-04:00;a69b604550f02b78875625aafb47d769ea304995;"Merged -- solved conflicts in .hgignore and doc/install.txt"
test_basic.py;187;ADD;Olivier Delalleau;delallea@iro;2011-06-10 11:39:34-04:00;a69b604550f02b78875625aafb47d769ea304995;""
test_basic.py;4823;ADD;Olivier Delalleau;delallea@iro;2011-06-10 11:39:34-04:00;a69b604550f02b78875625aafb47d769ea304995;""
test_config.py;34;ADD;Olivier Delalleau;delallea@iro;2011-06-13 16:45:06-04:00;d62503f398b04a8a98d92249a89fe22572be6580;"Fix to avoid a bad default value of a config option from causing trouble:  The 'filter' method of a ConfigParam object is not called anymore on the default value when the ConfigParam is created.  Added a test case to test this new behavior."
test_cuda_ndarray.py;826;ADD;Frederic Bastien;nouiz@nouiz.org;2011-06-21 13:51:52-04:00;4023597344beaf1725ff6380874f3c8dbb693912;"'Added more test for cuda_ndarray.zeros() and make it raise an appropriate error when it receive no input.'"
test_cuda_ndarray.py;832;ADD;Frederic Bastien;nouiz@nouiz.org;2011-06-21 13:51:52-04:00;4023597344beaf1725ff6380874f3c8dbb693912;""
test_cuda_ndarray.py;835;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2011-06-22 23:18:59-04:00;f6351e1a1aedab5af35355a2db128def7ccbd716;"merge w conflict in cuda_ndarray.cu"
test_cuda_ndarray.py;841;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2011-06-22 23:18:59-04:00;f6351e1a1aedab5af35355a2db128def7ccbd716;""
ops.py;63;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2011-06-22 23:18:59-04:00;f6351e1a1aedab5af35355a2db128def7ccbd716;""
test_basic.py;187;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2011-06-22 23:18:59-04:00;f6351e1a1aedab5af35355a2db128def7ccbd716;""
test_basic.py;4871;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2011-06-22 23:18:59-04:00;f6351e1a1aedab5af35355a2db128def7ccbd716;""
test_config.py;30;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2011-06-22 23:18:59-04:00;f6351e1a1aedab5af35355a2db128def7ccbd716;""
vm.py;367;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2011-07-06 13:13:27-04:00;9433d5d28f4f0d5d662dc9afae07ca42e51a75c0;"vm linker"
test_lazy.py;110;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2011-07-06 13:13:27-04:00;cd2b4a31bce2bec01f90432e6c64879e13cbec18;"adding lazy cond op as IfElse Op * * * new op: Cond * * * gpu lazycond optimization"
test_vm.py;6;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2011-07-06 13:13:27-04:00;cd2b4a31bce2bec01f90432e6c64879e13cbec18;""
test_lazy.py;110;ADD;Olivier Delalleau;delallea@iro;2011-07-06 13:34:15-04:00;ca79f02efa2c982dd0d0ec5be9ca8f499df819f4;"Merged -- no conflict"
test_vm.py;6;ADD;Olivier Delalleau;delallea@iro;2011-07-06 13:34:15-04:00;ca79f02efa2c982dd0d0ec5be9ca8f499df819f4;""
vm.py;367;ADD;Olivier Delalleau;delallea@iro;2011-07-06 13:34:15-04:00;ca79f02efa2c982dd0d0ec5be9ca8f499df819f4;""
test_updates.py;73;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2011-07-06 14:05:24-04:00;caa8e40d0cfc2fb038de10bd32c18f0ee2395e56;"new feature: Updates"
basic.py;3905;ADD;Razvan Pascanu;r.pascanu@gmail.com;2011-07-13 16:27:58-04:00;4ab51bb56893bbbd0d4d5a08c5f9e1ce5ea451c9;"Fix for replace join with gpu_join bug.  Consecutive calls of the the join op ( during the optimization phase) get the axis as a constant. What used to happen was that in such cases Theano would not use that constant to define its broadcastable pattern."
opt.py;270;ADD;Razvan Pascanu;r.pascanu@gmail.com;2011-07-17 09:51:05-04:00;af68ea42dadc18678c0d318f1dd999c1f2654e4d;"dot(zeros,x) -> zeros  new optimization for dot products."
opt.py;278;ADD;Razvan Pascanu;r.pascanu@gmail.com;2011-07-17 09:51:05-04:00;af68ea42dadc18678c0d318f1dd999c1f2654e4d;""
opt.py;1638;ADD;Razvan Pascanu;r.pascanu@gmail.com;2011-07-17 09:56:07-04:00;11f88f7ca072a2e1d619e31c76dfec18bf6badf5;"Optimizations for set_subtensor and inc_subtensor when applied on alloc or zeros."
opt.py;268;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2011-07-17 18:01:26-04:00;ff542349cdd328af2022c0df94ca5a4dd5bb338d;"Simplify checking for constant zeros in optimization, test it.  More cases are detected now."
opt.py;274;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2011-07-17 18:01:26-04:00;ff542349cdd328af2022c0df94ca5a4dd5bb338d;""
opt.py;1634;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2011-07-17 18:01:26-04:00;ff542349cdd328af2022c0df94ca5a4dd5bb338d;""
opt.py;1658;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2011-07-17 18:01:26-04:00;ff542349cdd328af2022c0df94ca5a4dd5bb338d;""
opt.py;1667;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2011-07-17 18:01:26-04:00;ff542349cdd328af2022c0df94ca5a4dd5bb338d;""
opt.py;270;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2011-07-17 18:01:26-04:00;ff542349cdd328af2022c0df94ca5a4dd5bb338d;""
opt.py;278;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2011-07-17 18:01:26-04:00;ff542349cdd328af2022c0df94ca5a4dd5bb338d;""
opt.py;1638;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2011-07-17 18:01:26-04:00;ff542349cdd328af2022c0df94ca5a4dd5bb338d;""
opt.py;269;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2011-07-17 18:06:37-04:00;3daf9b02e468b15cd72a650db6255fa81fd46910;"Cosmetic changes"
opt.py;275;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2011-07-17 18:06:37-04:00;3daf9b02e468b15cd72a650db6255fa81fd46910;""
opt.py;268;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2011-07-17 18:06:37-04:00;3daf9b02e468b15cd72a650db6255fa81fd46910;""
opt.py;274;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2011-07-17 18:06:37-04:00;3daf9b02e468b15cd72a650db6255fa81fd46910;""
scan_opt.py;81;ADD;Razvan Pascanu;r.pascanu@gmail.com;2011-07-19 16:40:23-04:00;6626f4853766d5cab952c809be3676c3e1df9c03;"new optimization for scan that removes constants and useless inputs  The scope is to make the computational graph more readable, and to move constants in the inner graph, allowing constant folding in the inner graph to do its job (performance)."
scan_opt.py;796;ADD;Razvan Pascanu;r.pascanu@gmail.com;2011-07-19 20:18:55-04:00;b0050f2d7ae2ee2458e6affda4f6ce56d6a01418;"new optimization that merges scan ops"
opt.py;1268;ADD;Razvan Pascanu;r.pascanu@gmail.com;2011-07-22 10:32:50-04:00;1ede2527ce12f55f120f5ecd5fa1b505085d1db4;"Fixed local_useless_subtensor optimization"
scan_opt.py;808;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2011-07-22 15:08:42-04:00;cd9e62a05e78ae99a5189027381fdcc901fbf530;"merge NC"
opt.py;1268;ADD;James Bergstra;bergstrj@iro.umontreal.ca;2011-07-22 15:08:42-04:00;cd9e62a05e78ae99a5189027381fdcc901fbf530;""
opt.py;1267;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2011-07-22 16:58:51-04:00;2fb76e8db2bfc260273ee9aaee1d836467366f60;"Fix the fix of local_useless_subtensor opt. Add two new test cases."
opt.py;1268;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2011-07-22 16:58:51-04:00;2fb76e8db2bfc260273ee9aaee1d836467366f60;""
test_pycuda_utils.py;51;ADD;Frederic Bastien;nouiz@nouiz.org;2011-07-23 13:43:03-04:00;6a2ee199c9b70173d51d805b4a57dd3ba1aba9df;"Added function to create pycuda.gpuarray.GPUArray from CudaNdarray and the other way."
test_pycuda_utils.py;70;ADD;Frederic Bastien;nouiz@nouiz.org;2011-07-23 13:43:03-04:00;6a2ee199c9b70173d51d805b4a57dd3ba1aba9df;""
test_pycuda_utils.py;76;ADD;Frederic Bastien;nouiz@nouiz.org;2011-07-23 13:43:03-04:00;6a2ee199c9b70173d51d805b4a57dd3ba1aba9df;""
scan_opt.py;903;ADD;Razvan Pascanu;r.pascanu@gmail.com;2011-07-24 18:36:30-04:00;f16704220e8646f0a21777dd76a961dc758c2e50;"rewrote implementation that merges scan ops  The old implementation used to result in stochastic order error in debugmode. After many attempts to solve it, I decided that it would be better and faster just to rewrite it. This new implementation does not suffer from any bug (i.e. all tests pass in debug mode)."
scan_opt.py;910;ADD;Razvan Pascanu;r.pascanu@gmail.com;2011-07-24 18:36:30-04:00;f16704220e8646f0a21777dd76a961dc758c2e50;""
scan_opt.py;807;DELETED;Razvan Pascanu;r.pascanu@gmail.com;2011-07-24 18:36:30-04:00;f16704220e8646f0a21777dd76a961dc758c2e50;""
cc.py;931;ADD;Razvan Pascanu;r.pascanu@gmail.com;2011-07-26 11:47:27-04:00;09f08136550a9a0dba34340e87d568d1f9b38ef5;"Fixed computing cache for pure ops"
test_sp.py;389;ADD;Frederic Bastien;nouiz@nouiz.org;2011-07-27 15:19:48-04:00;ae9b8c2fd23e2191b2692f51ae6ea706fa5846fb;"Fix how a function is accessed and add missing test for that case."
test_sp.py;401;ADD;Frederic Bastien;nouiz@nouiz.org;2011-07-27 15:19:48-04:00;ae9b8c2fd23e2191b2692f51ae6ea706fa5846fb;""
scan_utils.py;123;DELETED;Frederic Bastien;nouiz@nouiz.org;2011-08-11 10:51:51-04:00;14a9fde718df398fbabbfaa36d81915400fc0dc7;"Remove try except not needed anymore.  In fact, it could hid problem that where not expected."
scan_utils.py;123;DELETED;Razvan Pascanu;r.pascanu@gmail.com;2011-08-11 11:11:44-04:00;f9813f0f732e855b46b99b8b5b914b79aef3e527;"merge; no conflicts"
test_basic.py;1964;ADD;Frederic;nouiz@nouiz.org;2011-09-16 13:19:26-04:00;9637468fc3fb7a0f33c636e6848ec340433492f0;"Added subtensor test with negative value."
test_basic.py;1961;DELETED;Frederic;nouiz@nouiz.org;2011-09-16 13:19:26-04:00;9637468fc3fb7a0f33c636e6848ec340433492f0;""
test_basic.py;1964;ADD;James Bergstra;james.bergstra@gmail.com;2011-09-16 15:14:03-07:00;91935a04b018f52f1190580b677dcd185ac4ccc3;"Merge pull request #45 from nouiz/mixed_commit  Mixed commit"
test_basic.py;1959;DELETED;James Bergstra;james.bergstra@gmail.com;2011-09-16 15:14:03-07:00;91935a04b018f52f1190580b677dcd185ac4ccc3;""
test_basic.py;2409;ADD;David Warde-Farley;wardefar@iro.umontreal.ca;2011-09-19 17:46:41-04:00;5310e24fb594f96cc174f0e85e00bd43d9d8bde7;"TST: subtensor with float index raises TypeError  Adds regression test for bug fixed in https://github.com/Theano/Theano/pull/47"
test_basic.py;2415;ADD;David Warde-Farley;wardefar@iro.umontreal.ca;2011-09-19 17:46:41-04:00;5310e24fb594f96cc174f0e85e00bd43d9d8bde7;""
test_basic.py;2421;ADD;David Warde-Farley;wardefar@iro.umontreal.ca;2011-09-19 17:46:41-04:00;5310e24fb594f96cc174f0e85e00bd43d9d8bde7;""
test_basic.py;2409;ADD;goodfeli;goodfellow.ian@gmail.com;2011-09-19 14:51:10-07:00;e63a7df18bf6d3de5d4a082bdca19bbf008b4353;"Merge pull request #50 from dwf/test_subtensor_regression  TST: subtensor with float index raises TypeError"
test_basic.py;2415;ADD;goodfeli;goodfellow.ian@gmail.com;2011-09-19 14:51:10-07:00;e63a7df18bf6d3de5d4a082bdca19bbf008b4353;""
test_basic.py;2421;ADD;goodfeli;goodfellow.ian@gmail.com;2011-09-19 14:51:10-07:00;e63a7df18bf6d3de5d4a082bdca19bbf008b4353;""
test_rop.py;271;ADD;Ian Goodfellow;goodfellow.ian@gmail.com;2011-09-26 14:18:12-04:00;12d07fe193bce61b413acc09d8bed1f3c0dbe1eb;"added some defensive programming reduces # of cases where Rop succesfully runs on invalid input complete safety would require use of Assert op which disrupts optimizations, so not done for now"
compiledir.py;90;ADD;Frederic;nouiz@nouiz.org;2011-09-27 10:19:34-04:00;a64ace019b666d4c9f6e86ffa7bf2e494647e657;"Added theano-cache list. It list the content of the theano cache."
compiledir.py;97;ADD;Frederic;nouiz@nouiz.org;2011-09-27 11:33:45-04:00;97b4c3700fd13852c0479387d203d6289c4cc7ce;"Small modif following code review(doc, python 2.4 compatibility, import)"
compiledir.py;96;DELETED;Frederic;nouiz@nouiz.org;2011-09-27 11:33:45-04:00;97b4c3700fd13852c0479387d203d6289c4cc7ce;""
compiledir.py;96;ADD;delallea;delallea@iro.umontreal.ca;2011-09-27 11:04:59-07:00;c0f5f8112ee57f49413d6431d76684832dc33a8e;"Merge pull request #67 from nouiz/list_cache  Added "theano-cache list" to list the content of the theano cache"
test_rop.py;271;ADD;delallea;delallea@iro.umontreal.ca;2011-09-27 19:09:19-07:00;9d186f9fc61bc2c767ddc7ddd8eaaa67b113cf7f;"Merge pull request #60 from goodfeli/Rop_defense  added some defensive programming"
blas.py;1131;ADD;Frederic;nouiz@nouiz.org;2011-09-28 11:39:31-04:00;83d55369eeadbb399303c59c061dc32bacfac67d;"Fixed an optimization crash during gemm optimization related to complex"
blas.py;1131;DELETED;Frederic;nouiz@nouiz.org;2011-10-03 10:53:13-04:00;92021ca6facb4af84aad4fe0050b780a5f0c9de8;"new more complet fix. Now we check that we don't downcast at this place too.  All test was passing without this, so the no downcast is also checked elsewhere but it is safer to do it before the downcast then recover somewhere later."
test_basic.py;5173;ADD;Frederic;nouiz@nouiz.org;2011-10-25 15:58:09-04:00;6ddf8bec376028b1e326c9f14df84e9ed14b864a;"Better error message."
elemwise.py;49;ADD;Frederic;nouiz@nouiz.org;2011-11-01 11:38:49-04:00;5ca75d685ad7acca479f42a566c7bc4d35e9b921;"fix the Composite change as it was making the buildbot crash.  We should always use the convention name for input to function that we override!  There is more fix that are missing."
elemwise.py;49;ADD;Razvan Pascanu;r.pascanu@gmail.com;2011-11-01 08:47:24-07:00;b3cf9269b9c47072e5ff4643878f5ca1cf093954;"Merge pull request #177 from nouiz/important_fix  Important fix Everything looks good"
test_basic.py;3336;DELETED;James Bergstra;james.bergstra@gmail.com;2011-11-03 14:22:26-04:00;1451d21450be79ee6b55445bf1b60e55888f970a;"removing vast commented test cases in tensor test_basic"
basic.py;2108;ADD;James Bergstra;james.bergstra@gmail.com;2011-11-03 23:21:39-04:00;e05cd06efb5747f9bf32dfca127c7c284cb24b98;"fix: Elemwise returns all support code  Elemwise should return both c_support_code and c_support_code_apply for the scalar_op. It now does this and there is a comment explaining why."
basic.py;2108;ADD;nouiz;nouiz@nouiz.org;2011-11-04 14:21:20-07:00;7c17434da733c00ed2e5b404e87aa9e576066f29;"Merge pull request #188 from jaberg/master  Fix failing tests in tensor module"
test_basic.py;3336;DELETED;nouiz;nouiz@nouiz.org;2011-11-04 14:21:20-07:00;7c17434da733c00ed2e5b404e87aa9e576066f29;""
basic.py;4433;DELETED;Frederic;nouiz@nouiz.org;2011-11-24 15:54:28-05:00;45f8baf18c456eee6ed70be17c036839492c242d;"Removed a few old tag.shape and vec_length left.  They should not have been used anymore as they should have been removed already."
basic.py;4433;DELETED;Olivier Delalleau;delallea@iro.umontreal.ca;2011-11-25 13:39:48-08:00;4566125bf5eba267e4f5f246ee3d735768edc7ba;"Merge pull request #226 from nouiz/remove_deprecated  Remove deprecated stuff"
test_sp.py;386;DELETED;Valentin Bisson;valentin.bisson@umontreal.ca;2011-11-07 16:47:23-05:00;69b1b98e964217f52d4be29f29f57127ac92235e;"Reviewed SpSum Op and completed non-grad-related tests.  Conflicts:  	theano/sparse/sandbox/test_sp.py"
test_sp.py;398;DELETED;Valentin Bisson;valentin.bisson@umontreal.ca;2011-11-07 16:47:23-05:00;69b1b98e964217f52d4be29f29f57127ac92235e;""
test_basic.py;2103;ADD;Olivier Delalleau;delallea@iro;2011-12-03 23:41:32-05:00;b660cf305eab87106884971b3fbc2f1ce9f56187;"Fixed some tests with compute_test_value = ignore"
test_basic.py;2095;DELETED;Olivier Delalleau;delallea@iro;2011-12-03 23:41:32-05:00;b660cf305eab87106884971b3fbc2f1ce9f56187;""
test_basic.py;2103;ADD;nouiz;nouiz@nouiz.org;2011-12-05 06:56:34-08:00;32d80f56477b8c95d7cba9c883824f63c564e06e;"Merge pull request #262 from delallea/test_fix  Fixed some tests with compute_test_value = ignore"
test_basic.py;2095;DELETED;nouiz;nouiz@nouiz.org;2011-12-05 06:56:34-08:00;32d80f56477b8c95d7cba9c883824f63c564e06e;""
opt.py;993;ADD;Olivier Delalleau;delallea@iro;2012-01-19 13:28:43-05:00;96c4b88d9229f93258d1f19105ded045c2a43eff;"Fixed bug in deque implementation for Python 2.4  The 'remove' method was bugged (it would not remove an item if it was the last item in the queue). This commit actually replaces the full custom deque implementation by a subclass of the original Python 2.4 implementation of deque, as it seems safer than re-writing everything.  The implementation is also moved to the python25.py file since it is the place for Python 2.4 compatibility code."
opt.py;1033;ADD;Olivier Delalleau;delallea@iro;2012-01-19 13:28:43-05:00;96c4b88d9229f93258d1f19105ded045c2a43eff;""
opt.py;1141;ADD;Olivier Delalleau;delallea@iro;2012-01-19 13:28:43-05:00;96c4b88d9229f93258d1f19105ded045c2a43eff;""
opt.py;993;ADD;nouiz;nouiz@nouiz.org;2012-01-20 11:35:46-08:00;1ff337112e85ca10b39296dc142c976f52e38203;"Merge pull request #367 from delallea/win_py24  Fixes for Windows and Python 2.4"
opt.py;1033;ADD;nouiz;nouiz@nouiz.org;2012-01-20 11:35:46-08:00;1ff337112e85ca10b39296dc142c976f52e38203;""
opt.py;1141;ADD;nouiz;nouiz@nouiz.org;2012-01-20 11:35:46-08:00;1ff337112e85ca10b39296dc142c976f52e38203;""
test_elemwise.py;576;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2012-01-27 12:49:42-05:00;1005832bc28ec0d44e346a689bc1fe11cf1d4595;"Add tests for arg "dtype" of tensor.mean."
test_elemwise.py;581;ADD;nouiz;nouiz@nouiz.org;2012-01-31 13:52:37-08:00;01ab8831f0f0e15deab6735a5abcb7f161421d64;"Merge pull request #402 from lamblin/tensor_careduce_dtype  dtype for different Tensor CAReduce operations"
test_neighbours.py;51;ADD;Frederic;nouiz@nouiz.org;2012-02-06 15:29:43-05:00;e22a820e017937f7b2bf9d83b2e132cb096f999d;"test refactoring to remove duplicate code."
test_neighbours.py;68;ADD;Frederic;nouiz@nouiz.org;2012-02-06 15:29:43-05:00;e22a820e017937f7b2bf9d83b2e132cb096f999d;""
test_neighbours.py;82;ADD;Frederic;nouiz@nouiz.org;2012-02-06 15:29:43-05:00;e22a820e017937f7b2bf9d83b2e132cb096f999d;""
test_neighbours.py;50;DELETED;Frederic;nouiz@nouiz.org;2012-02-06 15:29:43-05:00;e22a820e017937f7b2bf9d83b2e132cb096f999d;""
test_neighbours.py;63;DELETED;Frederic;nouiz@nouiz.org;2012-02-06 15:29:43-05:00;e22a820e017937f7b2bf9d83b2e132cb096f999d;""
test_neighbours.py;79;DELETED;Frederic;nouiz@nouiz.org;2012-02-06 15:29:43-05:00;e22a820e017937f7b2bf9d83b2e132cb096f999d;""
test_neighbours.py;93;DELETED;Frederic;nouiz@nouiz.org;2012-02-06 15:29:43-05:00;e22a820e017937f7b2bf9d83b2e132cb096f999d;""
test_neighbours.py;107;DELETED;Frederic;nouiz@nouiz.org;2012-02-06 15:29:43-05:00;e22a820e017937f7b2bf9d83b2e132cb096f999d;""
test_neighbours.py;121;DELETED;Frederic;nouiz@nouiz.org;2012-02-06 15:29:43-05:00;e22a820e017937f7b2bf9d83b2e132cb096f999d;""
compiledir.py;152;ADD;Frederic;nouiz@nouiz.org;2012-02-07 13:50:17-05:00;e7c3d879f533b01ae62ec773aa506e7945cac29c;"Add theano-cache cleanup that delete the old keys with ndarray from the cache."
compiledir.py;152;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-02-07 12:30:11-08:00;16025b5f590c8404fb6fab6c57cd2c40c6580937;"Merge pull request #423 from nouiz/cache  Cache"
test_neighbours.py;51;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-02-07 12:30:11-08:00;16025b5f590c8404fb6fab6c57cd2c40c6580937;""
test_neighbours.py;68;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-02-07 12:30:11-08:00;16025b5f590c8404fb6fab6c57cd2c40c6580937;""
test_neighbours.py;82;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-02-07 12:30:11-08:00;16025b5f590c8404fb6fab6c57cd2c40c6580937;""
test_neighbours.py;50;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-02-07 12:30:11-08:00;16025b5f590c8404fb6fab6c57cd2c40c6580937;""
test_neighbours.py;63;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-02-07 12:30:11-08:00;16025b5f590c8404fb6fab6c57cd2c40c6580937;""
test_neighbours.py;79;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-02-07 12:30:11-08:00;16025b5f590c8404fb6fab6c57cd2c40c6580937;""
test_neighbours.py;93;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-02-07 12:30:11-08:00;16025b5f590c8404fb6fab6c57cd2c40c6580937;""
test_neighbours.py;107;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-02-07 12:30:11-08:00;16025b5f590c8404fb6fab6c57cd2c40c6580937;""
test_neighbours.py;121;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-02-07 12:30:11-08:00;16025b5f590c8404fb6fab6c57cd2c40c6580937;""
test_basic.py;5637;ADD;Hani;hani.mousli@gmail.com;2012-02-16 14:35:50-05:00;00f26d888a97ef0573b9acf87d5118d22327ed59;"Added SortOp"
nvcc_compiler.py;284;ADD;Frederic;nouiz@nouiz.org;2012-02-21 11:49:18-05:00;cff27c13d7faeffe25801d081831808d07f15909;"make {nvcc,gcc}_module_compile_str a class with another function compile_args that get added in the keys."
nvcc_compiler.py;268;DELETED;Frederic;nouiz@nouiz.org;2012-02-21 11:49:18-05:00;cff27c13d7faeffe25801d081831808d07f15909;""
nvcc_compiler.py;285;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-02-21 11:19:25-08:00;f374e21e2da3d54eff57e7c9d3525ed7a727ac53;"Merge pull request #465 from nouiz/compiler  Compiler"
nvcc_compiler.py;268;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-02-21 11:19:25-08:00;f374e21e2da3d54eff57e7c9d3525ed7a727ac53;""
test_basic.py;5637;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-02-22 14:06:33-08:00;b60f9a5d6fc48b7e04ac019eeca338c67b79ac3e;"Merge pull request #395 from HaniAlmousli/sort  Added tensor.sort() op"
test_basic.py;5637;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2012-02-22 18:24:17-05:00;f4c06f34fd4b098841eed6dc5ea2d3a042f1e57a;"Refactor tests, and test that axis=None works"
test_basic.py;5637;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-02-22 19:39:17-08:00;7add8bc575cb3b9a8317ff0a848da39eded0a3eb;"Merge pull request #475 from lamblin/sort_axis_none  Implement tensor.sort(..., axis=None)"
test_conv.py;93;DELETED;Frederic;nouiz@nouiz.org;2012-02-23 16:17:59-05:00;e6e229ef0de5d86fee13e8162c24a6d4c60afaad;"Use the right method to test for exception to don't catch interrupt."
test_conv.py;98;DELETED;Frederic;nouiz@nouiz.org;2012-02-23 16:17:59-05:00;e6e229ef0de5d86fee13e8162c24a6d4c60afaad;""
test_conv.py;317;DELETED;Frederic;nouiz@nouiz.org;2012-02-23 16:27:37-05:00;01b88ba7e137c5553f37d845290145e6f238e370;"Use the good way to test for exception to don't catch interrupt."
test_conv.py;323;DELETED;Frederic;nouiz@nouiz.org;2012-02-23 16:27:37-05:00;01b88ba7e137c5553f37d845290145e6f238e370;""
test_conv.py;329;DELETED;Frederic;nouiz@nouiz.org;2012-02-23 16:27:37-05:00;01b88ba7e137c5553f37d845290145e6f238e370;""
test_conv.py;317;DELETED;Olivier Delalleau;delallea@iro.umontreal.ca;2012-02-23 14:19:37-08:00;f1ef401b92ae734b115ecd4f2f4a3e2a7f39891d;"Merge pull request #479 from nouiz/except  Better exception handling"
test_conv.py;323;DELETED;Olivier Delalleau;delallea@iro.umontreal.ca;2012-02-23 14:19:37-08:00;f1ef401b92ae734b115ecd4f2f4a3e2a7f39891d;""
test_conv.py;329;DELETED;Olivier Delalleau;delallea@iro.umontreal.ca;2012-02-23 14:19:37-08:00;f1ef401b92ae734b115ecd4f2f4a3e2a7f39891d;""
test_conv.py;93;DELETED;Olivier Delalleau;delallea@iro.umontreal.ca;2012-02-23 14:19:37-08:00;f1ef401b92ae734b115ecd4f2f4a3e2a7f39891d;""
test_conv.py;98;DELETED;Olivier Delalleau;delallea@iro.umontreal.ca;2012-02-23 14:19:37-08:00;f1ef401b92ae734b115ecd4f2f4a3e2a7f39891d;""
call_nose.py;28;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2012-02-24 13:34:40-05:00;85c052a7463b63c507daf995e0ff4216b3e709e6;"Add the KnownFailure plugin in call_nose.py  and an option to disable it."
call_nose.py;28;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2012-02-24 15:11:09-05:00;a4a3b5eb9eba417905a225cd2e06e8b10e3ea337;"Move call_nose.py to bin/theano-nose, add --batch  The --batch option makes it easier to call run_tests_in_batch"
gen_oplist.py;116;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2012-03-05 15:30:25-05:00;bfd8a94a2185ef7f2be57c364261999bacb03a1d;"Remove obsolete :api: role, and replace refs.  Also removes now unused scripts."
gen_oplist.py;125;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2012-03-05 15:30:25-05:00;bfd8a94a2185ef7f2be57c364261999bacb03a1d;""
gen_oplist.py;116;DELETED;nouiz;nouiz@nouiz.org;2012-03-06 06:27:36-08:00;adbc78dd568b59f13a57481724767893bda0d209;"Merge pull request #501 from lamblin/remove_api  Remove obsolete :api: role, and replace refs."
gen_oplist.py;125;DELETED;nouiz;nouiz@nouiz.org;2012-03-06 06:27:36-08:00;adbc78dd568b59f13a57481724767893bda0d209;""
cc.py;657;ADD;Frederic;nouiz@nouiz.org;2012-03-07 10:37:38-05:00;897082b550ebcbb49196f829c7ae8dc58fda85c2;"pep8"
cc.py;689;ADD;Frederic;nouiz@nouiz.org;2012-03-07 10:37:38-05:00;897082b550ebcbb49196f829c7ae8dc58fda85c2;""
cc.py;704;ADD;Frederic;nouiz@nouiz.org;2012-03-07 10:37:38-05:00;897082b550ebcbb49196f829c7ae8dc58fda85c2;""
cc.py;720;ADD;Frederic;nouiz@nouiz.org;2012-03-07 10:37:38-05:00;897082b550ebcbb49196f829c7ae8dc58fda85c2;""
cc.py;757;ADD;Frederic;nouiz@nouiz.org;2012-03-07 10:37:38-05:00;897082b550ebcbb49196f829c7ae8dc58fda85c2;""
cc.py;773;ADD;Frederic;nouiz@nouiz.org;2012-03-07 10:37:38-05:00;897082b550ebcbb49196f829c7ae8dc58fda85c2;""
cc.py;789;ADD;Frederic;nouiz@nouiz.org;2012-03-07 10:37:38-05:00;897082b550ebcbb49196f829c7ae8dc58fda85c2;""
cc.py;669;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-03-07 08:45:14-08:00;941ea07c8ed1a73fea84bbae9af117f49a88b2af;"Merge pull request #511 from nouiz/pep8  Pep8"
cc.py;701;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-03-07 08:45:14-08:00;941ea07c8ed1a73fea84bbae9af117f49a88b2af;""
cc.py;716;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-03-07 08:45:14-08:00;941ea07c8ed1a73fea84bbae9af117f49a88b2af;""
cc.py;732;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-03-07 08:45:14-08:00;941ea07c8ed1a73fea84bbae9af117f49a88b2af;""
cc.py;769;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-03-07 08:45:14-08:00;941ea07c8ed1a73fea84bbae9af117f49a88b2af;""
cc.py;785;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-03-07 08:45:14-08:00;941ea07c8ed1a73fea84bbae9af117f49a88b2af;""
cc.py;801;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-03-07 08:45:14-08:00;941ea07c8ed1a73fea84bbae9af117f49a88b2af;""
type.py;440;DELETED;Olivier Delalleau;delallea@iro;2012-03-24 08:31:55-04:00;3e58a15d1e8dad980db3332f7044e25847579a1c;"Fixed crash when cuda is not available  This crash was introduced recently by ccb0135"
type.py;440;DELETED;nouiz;nouiz@nouiz.org;2012-03-24 05:51:06-07:00;0bbb3ab5ed100601003bfe27c9b6762bf1ac973a;"Merge pull request #565 from delallea/no_cuda_fix  Fixed crash when cuda is not available"
basic.py;2898;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2012-03-28 17:02:13-04:00;9aac06d5462ca56c515e248c357d50ac20aa0d09;"Always introduce Alloc node when calling alloc()  That way, DebugMode can catch shape errors."
basic.py;2904;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2012-03-29 12:43:37-04:00;aa6a4960b000c615c8eb8a89a61d1e34f2ca2ba1;"Always create Alloc node if not during opt.  Also use correct mode in test."
test_cuda_ndarray.py;870;ADD;Frederic;nouiz@nouiz.org;2012-03-30 14:30:27-04:00;697d3eb7611f475529ef4baa58c94d2f3ded1030;"update test for CudaNdarray__setitem"
test_cuda_ndarray.py;638;DELETED;Frederic;nouiz@nouiz.org;2012-03-30 14:30:27-04:00;697d3eb7611f475529ef4baa58c94d2f3ded1030;""
test_cuda_ndarray.py;667;DELETED;Frederic;nouiz@nouiz.org;2012-03-30 14:30:27-04:00;697d3eb7611f475529ef4baa58c94d2f3ded1030;""
test_cuda_ndarray.py;822;DELETED;Frederic;nouiz@nouiz.org;2012-03-30 14:30:27-04:00;697d3eb7611f475529ef4baa58c94d2f3ded1030;""
test_cuda_ndarray.py;836;DELETED;Frederic;nouiz@nouiz.org;2012-03-30 14:30:27-04:00;697d3eb7611f475529ef4baa58c94d2f3ded1030;""
test_cuda_ndarray.py;852;DELETED;Frederic;nouiz@nouiz.org;2012-03-30 14:30:27-04:00;697d3eb7611f475529ef4baa58c94d2f3ded1030;""
test_cuda_ndarray.py;870;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-03-30 13:09:28-07:00;3a4e6c786bfa78d737bc350181ed9ee3ff7a0c3e;"Merge pull request #582 from nouiz/gpu_stuff  Gpu stuff"
test_cuda_ndarray.py;638;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-03-30 13:09:28-07:00;3a4e6c786bfa78d737bc350181ed9ee3ff7a0c3e;""
test_cuda_ndarray.py;667;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-03-30 13:09:28-07:00;3a4e6c786bfa78d737bc350181ed9ee3ff7a0c3e;""
test_cuda_ndarray.py;822;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-03-30 13:09:28-07:00;3a4e6c786bfa78d737bc350181ed9ee3ff7a0c3e;""
test_cuda_ndarray.py;836;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-03-30 13:09:28-07:00;3a4e6c786bfa78d737bc350181ed9ee3ff7a0c3e;""
test_cuda_ndarray.py;852;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-03-30 13:09:28-07:00;3a4e6c786bfa78d737bc350181ed9ee3ff7a0c3e;""
opt2.py;320;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;"More sane inplace optimization  The optimization before was all or nothing, which is a bad compromise for scan. This new optimization tries to work in place on each outputs, and keeps only those for which it can. This way you do not get your entire op to be non-inplace because of a single output that can not be computed inplace."
opt2.py;326;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;""
opt2.py;1144;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;""
opt2.py;1153;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;""
opt2.py;1515;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;""
opt2.py;1997;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;""
opt2.py;2023;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;""
opt2.py;2028;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;""
opt2.py;2219;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;""
opt2.py;2229;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;""
opt2.py;2260;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;""
opt2.py;2269;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;""
opt2.py;3123;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;""
opt2.py;3137;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;""
opt2.py;3326;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;""
opt2.py;4519;ADD;Razvan Pascanu;r.pascanu@gmail.com;2012-03-13 09:27:33-04:00;ed4154546fad75c2b273a2c6924c8a25e40b265c;""
opt2.py;320;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;"remove files I've added by mistake"
opt2.py;326;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;""
opt2.py;1144;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;""
opt2.py;1153;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;""
opt2.py;1515;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;""
opt2.py;1997;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;""
opt2.py;2023;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;""
opt2.py;2028;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;""
opt2.py;2219;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;""
opt2.py;2229;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;""
opt2.py;2260;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;""
opt2.py;2269;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;""
opt2.py;3123;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;""
opt2.py;3137;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;""
opt2.py;3326;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;""
opt2.py;4519;DELETED;Razvan Pascanu;pascanur@iro;2012-04-24 11:09:00-04:00;1fa097dcd7273a17d2d87a45ec83c2e93c966975;""
__init__.py;4;ADD;Frederic;nouiz@nouiz.org;2012-05-25 14:45:23-04:00;eaa5f5250664897980c89a2e213aa04276f0847b;"Allow to import theano when nose is not installed."
__init__.py;4;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-05-28 08:17:13-07:00;95e9d0f5686535e09eb10894761435dd6093cd37;"Merge pull request #662 from nouiz/small  Small"
blas.py;1346;ADD;Frederic;nouiz@nouiz.org;2012-06-08 14:56:32-04:00;d604b4be36d17b9d453bb2e9ee4fd13f10160abd;"Allow an optimizer to make sure its replacement remove a Variable/Apply node in the graph.  When it is not the case, don't apply the optimization and warn about it."
blas.py;1346;ADD;James Bergstra;james.bergstra@gmail.com;2012-06-08 19:25:10-07:00;be95a5ce23aa02edc5a0d5f718d88f75eddb9747;"Merge pull request #684 from nouiz/blas  Improve gemm optimizer to never accidentally duplicate work."
pycuda_init.py;43;ADD;Frederic;nouiz@nouiz.org;2012-06-18 15:03:17-04:00;06cccd4335de14cac7665eed001478f19a0147b3;"fix context problem with pycuda by checking it is imported before.  Also add the pycuda.init flag to force its import.  It is not needed to set it to True in the buildbot, as all test file get imported before test start to run. So this init PyCUDA first if the theano flag device and init_gpu_device are not used."
pycuda_init.py;43;DELETED;Frederic;nouiz@nouiz.org;2012-06-18 17:16:24-04:00;183ec93738b570c1bc9ce8956a595a85bd7035a5;"small fix following code review."
gh_api.py;6;ADD;Frederic;nouiz@nouiz.org;2012-06-19 11:11:41-04:00;6345ec0b66789515533faf907567892961bcb427;"Add script to test PR.  those come from ipython that have the same license as Theano."
gh_api.py;6;ADD;nouiz;nouiz@nouiz.org;2012-06-19 08:12:53-07:00;822a6648e3e691b428810a7ca41f3449195bcf56;"Merge pull request #708 from nouiz/test_pr  Add script to test PR."
test_updates.py;68;ADD;Frederic;nouiz@nouiz.org;2012-06-19 17:02:24-04:00;b1ff1b33812f359e371651bcabaab6e75bd41b7f;"The Updates object now check that the key are SharedVariable when we pass them in the __init__ function."
test_updates.py;73;DELETED;Frederic;nouiz@nouiz.org;2012-06-19 17:02:24-04:00;b1ff1b33812f359e371651bcabaab6e75bd41b7f;""
test_updates.py;68;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-06-19 14:10:08-07:00;490ef97a88437564c662e289b1adf91789847081;"Merge pull request #710 from nouiz/small  Small"
test_updates.py;73;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-06-19 14:10:08-07:00;490ef97a88437564c662e289b1adf91789847081;""
test_opt.py;3474;ADD;Eric Larsen;erlars2002@yahoo.com;2012-07-20 19:12:16-04:00;180777ee47fcac09ac5f9c5ccb63f6dc598562be;"testing infer_shape: OP MakeVector"
test_opt.py;3468;DELETED;Eric Larsen;erlars2002@yahoo.com;2012-07-20 19:12:16-04:00;180777ee47fcac09ac5f9c5ccb63f6dc598562be;""
test_opt.py;3524;ADD;nouiz;nouiz@nouiz.org;2012-07-24 12:57:31-07:00;4c1ae802933b43412f0d4139756274f41dcfee47;"Merge pull request #778 from larseeri/shape_opt  -Add missing infer_shape and tests about it to Shape_i and MakeVector. -Add missing infer_shape to the Assert class."
test_opt.py;3496;DELETED;nouiz;nouiz@nouiz.org;2012-07-24 12:57:31-07:00;4c1ae802933b43412f0d4139756274f41dcfee47;""
pycuda_init.py;47;ADD;Frederic;nouiz@nouiz.org;2012-07-26 16:14:55-04:00;50c16b4a1fb4c7a1d30732f9ca7d038b8e7752ec;"Fix pycuda import to remove tests error."
pycuda_init.py;47;ADD;Olivier Delalleau;delallea@iro.umontreal.ca;2012-07-30 06:35:08-07:00;4fe8381ea773d2df6e100e6de0c6a470b08002bb;"Merge pull request #792 from nouiz/fix_py2.4  small Fix py2.4"
test_gradient.py;265;ADD;Ian Goodfellow;goodfellow.ian@gmail.com;2012-08-20 22:46:01-04:00;a1be50797fd3af29eb0309122f43a731a210f908;"implemented correct handling of unimplemented gradients"
test_gradient.py;265;ADD;nouiz;nouiz@nouiz.org;2012-08-22 12:21:54-07:00;487d25edbe0ba16dcef03a098c72e8c63525066b;"Merge pull request #878 from goodfeli/unimp_undef_grad  Adds correct handling of unimplemented gradients"
test_neighbours.py;354;DELETED;Frederic;nouiz@nouiz.org;2012-08-21 15:22:22-04:00;86613b028a42233260a16de0f946caf68742f40a;"Reenabled the grad of Images2Neibs. The problem was in the tests, not op.grad()  The problem was that we tested sqr(images2neibs(x)) with too big values. This caused problem when we compute the numerical gradient."
test_neighbours.py;361;DELETED;Frederic;nouiz@nouiz.org;2012-08-21 15:22:22-04:00;86613b028a42233260a16de0f946caf68742f40a;""
test_neighbours.py;52;DELETED;Frederic;nouiz@nouiz.org;2012-08-22 15:22:20-04:00;28bfa8d50c380a43a78a8b69616380e129e60887;"big refactoring and Images2Neibs tests and some update to it at the same time.  No need to review in detail. This is sandbox stuff."
test_neighbours.py;69;DELETED;Frederic;nouiz@nouiz.org;2012-08-22 15:22:20-04:00;28bfa8d50c380a43a78a8b69616380e129e60887;""
test_neighbours.py;83;DELETED;Frederic;nouiz@nouiz.org;2012-08-22 15:22:20-04:00;28bfa8d50c380a43a78a8b69616380e129e60887;""
test_gradient.py;280;ADD;Ian Goodfellow;goodfellow.ian@gmail.com;2012-08-23 13:28:33-04:00;f010aa39a049fb010da8994ab371120c41b40bbc;"added tests for undefined gradient functionality"
test_gradient.py;317;ADD;Ian Goodfellow;goodfellow.ian@gmail.com;2012-08-23 13:28:33-04:00;f010aa39a049fb010da8994ab371120c41b40bbc;""
test_neighbours.py;52;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-08-23 12:12:28-07:00;6dcd47211bfc42bb9dd00b78fbdd4fed77f3a754;"Merge pull request #881 from nouiz/mixed3  Mixed3"
test_neighbours.py;69;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-08-23 12:12:28-07:00;6dcd47211bfc42bb9dd00b78fbdd4fed77f3a754;""
test_neighbours.py;83;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-08-23 12:12:28-07:00;6dcd47211bfc42bb9dd00b78fbdd4fed77f3a754;""
test_neighbours.py;354;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-08-23 12:12:28-07:00;6dcd47211bfc42bb9dd00b78fbdd4fed77f3a754;""
test_neighbours.py;361;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-08-23 12:12:28-07:00;6dcd47211bfc42bb9dd00b78fbdd4fed77f3a754;""
test_gradient.py;280;ADD;nouiz;nouiz@nouiz.org;2012-08-23 12:23:17-07:00;010aa6206df483e46a4232f6ec9fd0a659624d86;"Merge pull request #885 from goodfeli/undef_grad  Support for undefined gradients"
test_gradient.py;317;ADD;nouiz;nouiz@nouiz.org;2012-08-23 12:23:17-07:00;010aa6206df483e46a4232f6ec9fd0a659624d86;""
gradient.py;784;ADD;Ian Goodfellow;goodfellow.ian@gmail.com;2012-09-05 19:00:34-04:00;18d6bd2fee5f6b46cfdccce1bf660842767d02f2;"added check that gradient of int is 0"
gradient.py;794;ADD;Ian Goodfellow;goodfellow.ian@gmail.com;2012-09-06 13:52:55-04:00;35d782584aa7d958184b5d13dad5ee87520782be;"made zero check handle sparse types"
gradient.py;799;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-09-12 10:29:34-07:00;c0c255598235b902e1c0955e7215dd30b51c3c05;"Merge pull request #910 from goodfeli/int_grad  Consistent & correct handling of integers and gradients  -Documentation and implementation of a consistent way of handling gradients and integers -Type checks that ensure the gradient is always floating point and not an integer -Type checks that ensure the gradient of an integer is always undefined or 0 -An upgraded version of connection_pattern that provides theano with enough information to answer questions like "is variable x a function of variable y?" accurately"
test_basic.py;4221;ADD;Jeremiah Lowin;jlowin@lowindata.com;2012-10-02 01:21:30-04:00;4ec86f95b5ffd5802ee9462b9d935a8f6f1aebbc;"re-enabled tests of tensor dot products (using dot op)"
test_basic.py;4229;ADD;Jeremiah Lowin;jlowin@lowindata.com;2012-10-02 01:21:30-04:00;4ec86f95b5ffd5802ee9462b9d935a8f6f1aebbc;""
test_basic.py;6073;ADD;Frederic;nouiz@nouiz.org;2012-10-24 14:19:17-04:00;7363cbca179425e14a877b585704e055f138b0a5;"INTERFACE CHANGE: Disable using unaligned tensor in all case. We supported it for python code before."
test_basic.py;6091;ADD;Frederic;nouiz@nouiz.org;2012-10-24 14:19:17-04:00;7363cbca179425e14a877b585704e055f138b0a5;""
test_gradient.py;142;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2012-10-24 19:13:03-04:00;67185ec056472afbcd95a1681170e1f86aa03fd2;"Refactor tests into class, use self.assertRaises"
test_gradient.py;153;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2012-10-24 19:13:03-04:00;67185ec056472afbcd95a1681170e1f86aa03fd2;""
test_gradient.py;173;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2012-10-24 19:13:03-04:00;67185ec056472afbcd95a1681170e1f86aa03fd2;""
test_gradient.py;192;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2012-10-24 19:13:03-04:00;67185ec056472afbcd95a1681170e1f86aa03fd2;""
test_basic.py;6072;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-10-25 08:18:32-07:00;872ead68a971447f7ee981a8d096750b3f23289b;"Merge pull request #1025 from nouiz/err_msg_unalign  Err msg unalign"
test_basic.py;6090;ADD;lamblin;lamblinp@iro.umontreal.ca;2012-10-25 08:18:32-07:00;872ead68a971447f7ee981a8d096750b3f23289b;""
test_gradient.py;142;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-10-25 14:26:19-07:00;5f75d4a03c98887cb9993bd19b4cbf8b35efce24;"Merge pull request #1019 from lamblin/grad_downcast  Re-add part of the dtype constraint on out grads"
test_gradient.py;153;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-10-25 14:26:19-07:00;5f75d4a03c98887cb9993bd19b4cbf8b35efce24;""
test_gradient.py;173;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-10-25 14:26:19-07:00;5f75d4a03c98887cb9993bd19b4cbf8b35efce24;""
test_gradient.py;192;DELETED;lamblin;lamblinp@iro.umontreal.ca;2012-10-25 14:26:19-07:00;5f75d4a03c98887cb9993bd19b4cbf8b35efce24;""
gradient.py;1704;ADD;Ian Goodfellow;goodfellow.ian@gmail.com;2012-11-13 11:31:29-05:00;72ed94f54e6ac4c3c7a4573099982b205c3c86b3;"factored out the _is_zero logic"
gradient.py;936;DELETED;Ian Goodfellow;goodfellow.ian@gmail.com;2012-11-13 11:31:29-05:00;72ed94f54e6ac4c3c7a4573099982b205c3c86b3;""
gradient.py;1578;ADD;David Warde-Farley;wardefar@iro.umontreal.ca;2012-11-16 13:00:37-08:00;40bbb7dac3475cbf533f7f01e7a4fff9c526309f;"Merge pull request #1068 from goodfeli/fix_consider_constant  Fixes several issues with gradients and some other bugs"
gradient.py;882;DELETED;David Warde-Farley;wardefar@iro.umontreal.ca;2012-11-16 13:00:37-08:00;40bbb7dac3475cbf533f7f01e7a4fff9c526309f;""
gradient.py;1609;ADD;Rami Al-Rfou;rmyeid@gmail.com;2012-11-21 17:47:11-05:00;ea3d61015454686b035efe1254c78ed23421a956;"Merge branch 'master' of https://github.com/Theano/Theano into grad_advinc_subtensor"
gradient.py;882;DELETED;Rami Al-Rfou;rmyeid@gmail.com;2012-11-21 17:47:11-05:00;ea3d61015454686b035efe1254c78ed23421a956;""
test_basic.py;4291;ADD;Jeremiah Lowin;jlowin@lowindata.com;2012-10-02 01:21:30-04:00;71d99506115c4279e817b6a51791d18c79941db3;"re-enabled tests of tensor dot products (using dot op)"
test_basic.py;4299;ADD;Jeremiah Lowin;jlowin@lowindata.com;2012-10-02 01:21:30-04:00;71d99506115c4279e817b6a51791d18c79941db3;""
test_basic.py;4316;DELETED;Jeremiah Lowin;jlowin@lowindata.com;2012-12-21 10:28:34-05:00;51a3f3a57d21e91d1377284aea19d0fa56f9932b;"changes made for clarity, per code review"
test_basic.py;4324;DELETED;Jeremiah Lowin;jlowin@lowindata.com;2012-12-21 10:28:34-05:00;51a3f3a57d21e91d1377284aea19d0fa56f9932b;""
test_basic.py;5526;DELETED;Jeremiah Lowin;jlowin@lowindata.com;2012-12-21 11:17:39-05:00;56bf2c46e090445591fd21fda2cdcc85c3ce22dc;"use cleaner representation of negative unit tests (per code review)"
test_basic.py;5533;DELETED;Jeremiah Lowin;jlowin@lowindata.com;2012-12-21 11:17:39-05:00;56bf2c46e090445591fd21fda2cdcc85c3ce22dc;""
test_basic.py;5540;DELETED;Jeremiah Lowin;jlowin@lowindata.com;2012-12-21 11:17:39-05:00;56bf2c46e090445591fd21fda2cdcc85c3ce22dc;""
test_basic.py;5547;DELETED;Jeremiah Lowin;jlowin@lowindata.com;2012-12-21 11:17:39-05:00;56bf2c46e090445591fd21fda2cdcc85c3ce22dc;""
test_basic.py;5554;DELETED;Jeremiah Lowin;jlowin@lowindata.com;2012-12-21 11:17:39-05:00;56bf2c46e090445591fd21fda2cdcc85c3ce22dc;""
test_basic.py;5463;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-01-25 14:42:37-08:00;d13064f7530dc8bf5381390ecd8efaa2b29b22ad;"Merge pull request #986 from jlowin/dot_test  Ready for merge: Streamline dot & tensordot / Allow dot products of n-dimensional variables"
test_basic.py;5470;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-01-25 14:42:37-08:00;d13064f7530dc8bf5381390ecd8efaa2b29b22ad;""
test_basic.py;5477;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-01-25 14:42:37-08:00;d13064f7530dc8bf5381390ecd8efaa2b29b22ad;""
test_basic.py;5484;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-01-25 14:42:37-08:00;d13064f7530dc8bf5381390ecd8efaa2b29b22ad;""
test_basic.py;5491;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-01-25 14:42:37-08:00;d13064f7530dc8bf5381390ecd8efaa2b29b22ad;""
basic_ops.py;22;ADD;Frederic;nouiz@nouiz.org;2013-02-12 09:50:43-05:00;cd37c765b76a37ca2d7af1eb42fdf96527c0124d;"Allow to import theano.sandbox.cuda.basic_op on computer without GPU.  This is needed to allow generating the autodoc of this file."
basic_ops.py;22;ADD;nouiz;nouiz@nouiz.org;2013-02-12 06:52:18-08:00;99df3eb34126f48501836b1e5fb6211404f719c8;"Merge pull request #1220 from nouiz/fix_doc  Allow to import theano.sandbox.cuda.basic_op on computer without GPU."
basic_ops.py;22;ADD;abalkin;abalkin@enlnt.com;2013-02-13 09:51:01-05:00;44a3e92cdc3d589cc08efd29a033b9a7c1b2b75b;"Merge remote-tracking branch 'upstream/master' into no-relative-imports  Conflicts: 	theano/compile/function.py 	theano/compile/pfunc.py 	theano/gof/fg.py 	theano/gof/type.py"
basic_ops.py;22;ADD;abalkin;abalkin@enlnt.com;2013-02-13 10:50:39-05:00;a3282db2213b8bef64823e4de52a8e38a0c6569d;"Merge remote-tracking branch 'upstream/master' into take-op-c-code-clean"
configparser.py;239;ADD;Frederic;nouiz@nouiz.org;2013-02-15 13:29:31-05:00;5e3f90ff2b1b5aacb51622e7aa8582ece56b54df;"Do not trigger the call to callable default value when we create the config value.  We want to have it evaluated only if the config value get used. Otherwise, this will trigger compilation at import time for a following commit."
configparser.py;239;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-02-18 12:58:39-08:00;cdaaf1372df0ff75feb5f6b9a24fab6496e23093;"Merge pull request #1232 from nouiz/lazy_config_default_value  Lazy config default value"
test_elemwise.py;1077;ADD;Olivier Delalleau;delallea@iro;2013-04-17 21:22:08-04:00;d4436e8e181a87d63d418f7723f161e1db52add1;"Improved test"
test_elemwise.py;1087;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-04-18 06:44:35-07:00;83d77e844151b92542dd98e9d9ad9635d148c05d;"Merge pull request #1326 from delallea/notimplemented_elemwise_grad   Fixed crash for unimplemented elemwise gradient"
basic.py;32;ADD;Olivier Delalleau;delallea@iro;2013-04-20 10:17:53-04:00;a4d193371a71fc70297101e16d6fdb77b8911643;"Do not attempt compilation without a compiler  This fixes a crash on "import theano" when g++ is not available."
basic.py;32;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-04-20 08:48:55-07:00;3cfa7a35042b814f5b943f6df6a3307e0e94c895;"Merge pull request #1342 from delallea/minor  Do not attempt compilation without a compiler"
test_basic.py;6401;ADD;Frederic;nouiz@nouiz.org;2013-04-23 14:02:16-04:00;30556a7c985cc911c7807362de8f17932033deed;"Fix test error with NumPy 1.7.1.  This is for python long that fit in uint64, but not in an int64. NumPy 1.7 raise an Overflow error, but NumPy 1.7.1 return an uint64."
test_basic.py;6408;ADD;Frederic;nouiz@nouiz.org;2013-04-23 14:02:16-04:00;30556a7c985cc911c7807362de8f17932033deed;""
test_basic.py;6414;ADD;Frederic;nouiz@nouiz.org;2013-04-23 14:02:16-04:00;30556a7c985cc911c7807362de8f17932033deed;""
test_basic.py;2924;DELETED;Frederic;nouiz@nouiz.org;2013-04-29 13:13:48-04:00;a0344d4b2d2dee9b26972e00a155678fe8cf3c66;"Remove not used var tval, simplify the test and test for the error!"
test_basic.py;6396;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-05-02 12:22:29-07:00;cb371ba76f403405819a91e8c693044652c34f8f;"Merge pull request #1348 from nouiz/fixes  Small fixes"
test_basic.py;6403;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-05-02 12:22:29-07:00;cb371ba76f403405819a91e8c693044652c34f8f;""
test_basic.py;6409;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-05-02 12:22:29-07:00;cb371ba76f403405819a91e8c693044652c34f8f;""
test_basic.py;2922;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-05-02 12:22:29-07:00;cb371ba76f403405819a91e8c693044652c34f8f;""
blas.py;214;ADD;Frederic;nouiz@nouiz.org;2013-05-15 15:52:40-04:00;1a8eb6ddddcbcfabc64c2815761ab6686fd16752;"Define the theano flag blas.ldflags before we use it."
blas.py;398;DELETED;Frederic;nouiz@nouiz.org;2013-05-15 15:52:40-04:00;1a8eb6ddddcbcfabc64c2815761ab6686fd16752;""
blas.py;214;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-05-15 13:06:26-07:00;5f08dd27580dc9ecf41f98abe8069a684597e4af;"Merge pull request #1377 from nouiz/fix_cho_test  Make test more resistent to different seed value."
blas.py;390;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-05-15 13:06:26-07:00;5f08dd27580dc9ecf41f98abe8069a684597e4af;""
elemwise.py;1123;ADD;Frederic;nouiz@nouiz.org;2013-05-24 13:44:23-04:00;68aad6d2db7a1fb8584f35e72323f80c9ee818f4;"Add ScalarOp.c_code_contiguous interface and use it with exp.  Do this for amdlibm.  There is code for sigmoid, but it is disabled as it is slower."
elemwise.py;1123;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-05-24 20:25:51-07:00;413f34ac92b6d50929f7b9b4513c25ec94ef7af2;"Merge pull request #1389 from nouiz/sigmoid  Sigmoid"
elemwise.py;1123;DELETED;Frederic;nouiz@nouiz.org;2013-05-28 11:59:39-04:00;f982cbd779960e52f8748090754ef464f28b138b;"Elemwise now special case the code when all inputs are contiguous.  Do not work yet when the inputs is fortran, as the outputs is always c contig for now."
elemwise.py;1123;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-05-28 13:46:13-07:00;dcb5e09873ce2b3212f6715e6a8920d607f1be82;"Merge pull request #1393 from nouiz/fcontig  Elemwise faster when c or f contig inputs"
cmodule.py;22;ADD;Frederic;nouiz@nouiz.org;2013-06-07 16:08:14-04:00;7b9e7ea4d7ff70aff8ac831b810f402bfe956073;"fix import problem with python 3.3.0"
cmodule.py;22;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-06-11 08:47:12-07:00;0845ddc352ab80a0cdb4de80af1fc67aaabb2e80;"Merge pull request #1407 from nouiz/fix_test_p33  Fix test p33"
test_lazy.py;117;ADD;Frederic;nouiz@nouiz.org;2013-05-10 14:24:50-04:00;03435c8c778681d218e7efa5c05050f5179d4d69;"Make a test pass when the flag vm.lazy=False"
test_lazy.py;110;DELETED;Frederic;nouiz@nouiz.org;2013-05-10 14:24:50-04:00;03435c8c778681d218e7efa5c05050f5179d4d69;""
test_lazy.py;156;ADD;Frederic;nouiz@nouiz.org;2013-06-25 12:02:55-04:00;9cc893f1ad9e5c0257445a2f51a2166256d5af39;"Make test pass when vm.lazy is false."
test_cuda_ndarray.py;951;ADD;Frederic;nouiz@nouiz.org;2013-06-27 16:52:35-04:00;5b16f04576fe9c15dff3b8fe299af3c3250ccd02;"Implement a_cuda_ndarray.strides = (...)"
test_cuda_ndarray.py;957;ADD;Frederic;nouiz@nouiz.org;2013-06-27 16:52:35-04:00;5b16f04576fe9c15dff3b8fe299af3c3250ccd02;""
test_cuda_ndarray.py;963;ADD;Frederic;nouiz@nouiz.org;2013-06-27 16:52:35-04:00;5b16f04576fe9c15dff3b8fe299af3c3250ccd02;""
test_cuda_ndarray.py;951;DELETED;Frederic;nouiz@nouiz.org;2013-06-27 17:27:17-04:00;bc1320a5de6b590803ced7765b3fb108163224cf;"Allow a_cuda_ndarray.strides = [...]"
test_cuda_ndarray.py;961;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-06-27 15:13:44-07:00;cd50d5ef769e893561e90a9364d58546037a7e1d;"Merge pull request #1436 from nouiz/gpu_extract_diag  Gpu extract diag"
test_cuda_ndarray.py;967;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-06-27 15:13:44-07:00;cd50d5ef769e893561e90a9364d58546037a7e1d;""
test_lazy.py;123;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-07-09 08:46:14-07:00;b7294365bf588e4d2bcd101b26a95faea742c55f;"Merge pull request #1376 from nouiz/fix_tests  Fix tests"
test_lazy.py;156;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-07-09 08:46:14-07:00;b7294365bf588e4d2bcd101b26a95faea742c55f;""
test_lazy.py;110;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-07-09 08:46:14-07:00;b7294365bf588e4d2bcd101b26a95faea742c55f;""
unittest_tools.py;274;ADD;Frederic;nouiz@nouiz.org;2012-11-30 13:55:20-05:00;fd40edf6092cdf68016b1572a00721b093e3ee9a;"Add utt.assert_allclose that raise a more informative error.  This will help remove an error that appear with different seed in the tests."
unittest_tools.py;288;ADD;Frederic;nouiz@nouiz.org;2012-11-30 13:55:20-05:00;fd40edf6092cdf68016b1572a00721b093e3ee9a;""
unittest_tools.py;307;ADD;Frederic;nouiz@nouiz.org;2012-11-30 13:55:20-05:00;fd40edf6092cdf68016b1572a00721b093e3ee9a;""
debugmode.py;201;DELETED;Frederic;nouiz@nouiz.org;2013-07-09 15:18:55-04:00;121bea8217c1b6aa196e190baa2932f5cf772068;"Refactoring to have BadThunkOutput reuse str_diagnostic()"
debugmode.py;215;DELETED;Frederic;nouiz@nouiz.org;2013-07-09 15:18:55-04:00;121bea8217c1b6aa196e190baa2932f5cf772068;""
debugmode.py;234;DELETED;Frederic;nouiz@nouiz.org;2013-07-09 15:18:55-04:00;121bea8217c1b6aa196e190baa2932f5cf772068;""
unittest_tools.py;263;ADD;Frederic;nouiz@nouiz.org;2013-07-09 15:18:55-04:00;121bea8217c1b6aa196e190baa2932f5cf772068;""
unittest_tools.py;277;ADD;Frederic;nouiz@nouiz.org;2013-07-09 15:18:55-04:00;121bea8217c1b6aa196e190baa2932f5cf772068;""
unittest_tools.py;300;ADD;Frederic;nouiz@nouiz.org;2013-07-09 15:18:55-04:00;121bea8217c1b6aa196e190baa2932f5cf772068;""
unittest_tools.py;274;DELETED;Frederic;nouiz@nouiz.org;2013-07-09 15:18:55-04:00;121bea8217c1b6aa196e190baa2932f5cf772068;""
unittest_tools.py;288;DELETED;Frederic;nouiz@nouiz.org;2013-07-09 15:18:55-04:00;121bea8217c1b6aa196e190baa2932f5cf772068;""
unittest_tools.py;307;DELETED;Frederic;nouiz@nouiz.org;2013-07-09 15:18:55-04:00;121bea8217c1b6aa196e190baa2932f5cf772068;""
debugmode.py;201;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-07-09 14:22:15-07:00;60ad703d2858a9ab727333e653df135ebf97095b;"Merge pull request #1106 from nouiz/err_msg2  Add utt.assert_allclose that raise a more informative error."
debugmode.py;215;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-07-09 14:22:15-07:00;60ad703d2858a9ab727333e653df135ebf97095b;""
debugmode.py;234;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-07-09 14:22:15-07:00;60ad703d2858a9ab727333e653df135ebf97095b;""
unittest_tools.py;263;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-07-09 14:22:15-07:00;60ad703d2858a9ab727333e653df135ebf97095b;""
unittest_tools.py;277;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-07-09 14:22:15-07:00;60ad703d2858a9ab727333e653df135ebf97095b;""
unittest_tools.py;300;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-07-09 14:22:15-07:00;60ad703d2858a9ab727333e653df135ebf97095b;""
basic.py;33;DELETED;Frederic;nouiz@nouiz.org;2013-07-26 12:03:27-04:00;5243a337ff56440f34b8e92dbaed4288513c3411;"Move all subtensor op/fct in its own file.  This make tensor/basic.py at 191k, so lower then 200k for gh-651."
test_basic.py;3518;DELETED;Frederic;nouiz@nouiz.org;2013-07-26 12:03:27-04:00;5243a337ff56440f34b8e92dbaed4288513c3411;""
test_basic.py;3524;DELETED;Frederic;nouiz@nouiz.org;2013-07-26 12:03:27-04:00;5243a337ff56440f34b8e92dbaed4288513c3411;""
test_basic.py;3530;DELETED;Frederic;nouiz@nouiz.org;2013-07-26 12:03:27-04:00;5243a337ff56440f34b8e92dbaed4288513c3411;""
subtensor.py;29;ADD;Frederic;nouiz@nouiz.org;2013-07-26 15:19:19-04:00;3167f410ccdc3045167ef4ec624b4b93ccb53a44;"Add missing file from the refactoring."
test_subtensor.py;745;ADD;Frederic;nouiz@nouiz.org;2013-07-26 15:19:19-04:00;3167f410ccdc3045167ef4ec624b4b93ccb53a44;""
test_subtensor.py;751;ADD;Frederic;nouiz@nouiz.org;2013-07-26 15:19:19-04:00;3167f410ccdc3045167ef4ec624b4b93ccb53a44;""
test_subtensor.py;757;ADD;Frederic;nouiz@nouiz.org;2013-07-26 15:19:19-04:00;3167f410ccdc3045167ef4ec624b4b93ccb53a44;""
basic.py;32;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-08-02 10:02:56-07:00;fc66c3fd9374636cf2410353c70ef56106cad98e;"Merge pull request #1470 from nouiz/split_file  Split file"
subtensor.py;30;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-08-02 10:02:56-07:00;fc66c3fd9374636cf2410353c70ef56106cad98e;""
test_basic.py;3518;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-08-02 10:02:56-07:00;fc66c3fd9374636cf2410353c70ef56106cad98e;""
test_basic.py;3524;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-08-02 10:02:56-07:00;fc66c3fd9374636cf2410353c70ef56106cad98e;""
test_basic.py;3530;DELETED;lamblin;lamblinp@iro.umontreal.ca;2013-08-02 10:02:56-07:00;fc66c3fd9374636cf2410353c70ef56106cad98e;""
test_subtensor.py;745;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-08-02 10:02:56-07:00;fc66c3fd9374636cf2410353c70ef56106cad98e;""
test_subtensor.py;751;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-08-02 10:02:56-07:00;fc66c3fd9374636cf2410353c70ef56106cad98e;""
test_subtensor.py;757;ADD;lamblin;lamblinp@iro.umontreal.ca;2013-08-02 10:02:56-07:00;fc66c3fd9374636cf2410353c70ef56106cad98e;""
opt.py;4606;ADD;Frederic;nouiz@nouiz.org;2013-08-05 14:43:45-04:00;127c347b8490a1e1f9fe2e0500907cafc86efb6a;"Add test value during opt."
opt.py;4660;ADD;Frederic;nouiz@nouiz.org;2013-08-05 14:43:45-04:00;127c347b8490a1e1f9fe2e0500907cafc86efb6a;""
basic_sympy.py;10;ADD;Matthew Rocklin;mrocklin@gmail.com;2013-08-09 09:16:36-05:00;2daa77b1ca10d3363706500d65d687d0a18ae110;"first draft of SymPyCCode op"
basic_sympy.py;11;ADD;Frédéric Bastien;nouiz@nouiz.org;2013-08-13 07:39:30-07:00;d734be740e0eb085fde7d562b2bc673dd07477af;"Merge pull request #1486 from mrocklin/sympy-ccode-op  SymPyCCode op"
cc.py;788;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2013-08-28 17:44:02-04:00;520f92a45362ac173ba1fcff8f81a1e001cb6eef;"Add init_code mechanism to register code in module init fn"
opt.py;4606;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2013-09-03 14:44:14-07:00;a351e3dbcc5953c77b3de8502d7ce8799ecb8dc0;"Merge pull request #1482 from nouiz/rnade  Scan crash fix"
opt.py;4662;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2013-09-03 14:44:14-07:00;a351e3dbcc5953c77b3de8502d7ce8799ecb8dc0;""
cc.py;788;ADD;Frédéric Bastien;nouiz@nouiz.org;2013-09-04 06:42:21-07:00;920d123d495c0324ab9ce49cb2489e35c8b0c0b4;"Merge pull request #1517 from lamblin/init_code  Add init_code mechanism to register code in module init function"
type.py;15;ADD;Arnaud Bergeron;abergeron@gmail.com;2012-10-05 14:39:25-04:00;481cf68a0627210f1ad7f5efbb900fddf3e04f5c;"Initial files for the support of a new type base on compyte in theano"
var.py;10;ADD;Arnaud Bergeron;abergeron@gmail.com;2012-10-05 14:39:25-04:00;481cf68a0627210f1ad7f5efbb900fddf3e04f5c;""
var.py;11;DELETED;Arnaud Bergeron;abergeron@gmail.com;2012-11-09 15:11:22-05:00;3f16fbc5d4d10293d3a387aea06294231bb2c65b;"Merge var and type, makes it easier not to misuse."
type.py;14;DELETED;Arnaud Bergeron;abergeron@gmail.com;2013-06-17 16:33:58-04:00;c13192c012e30b9e0abd84221d39d2e3f9d8dcc4;"Misceallenous fixes all over discovered in the first real test."
elemwise.py;97;ADD;Arnaud Bergeron;abergeron@gmail.com;2013-07-12 17:15:48-04:00;a0921c99aa69c931361a927d932fbbb26a24e7c3;"Add GpuElemwise op (python-only for now)."
elemwise.py;101;ADD;Arnaud Bergeron;abergeron@gmail.com;2013-07-12 17:15:48-04:00;a0921c99aa69c931361a927d932fbbb26a24e7c3;""
basic_ops.py;13;ADD;Arnaud Bergeron;abergeron@gmail.com;2013-08-26 14:22:48-04:00;9b2c2087109827b55d0f9ebd479610e8a327db24;"Make sure we don't need to have pygpu installed to run theano."
elemwise.py;7;ADD;Arnaud Bergeron;abergeron@gmail.com;2013-08-26 14:22:48-04:00;9b2c2087109827b55d0f9ebd479610e8a327db24;""
type.py;13;ADD;Arnaud Bergeron;abergeron@gmail.com;2013-08-26 14:22:48-04:00;9b2c2087109827b55d0f9ebd479610e8a327db24;""
basic_ops.py;15;ADD;Frédéric Bastien;nouiz@nouiz.org;2013-09-09 14:23:38-07:00;44f9d0f74386740aa45332c18b5a3b216350e0d3;"Merge pull request #1001 from abergeron/compyte  Support for a new type based on compyte in theano"
elemwise.py;7;ADD;Frédéric Bastien;nouiz@nouiz.org;2013-09-09 14:23:38-07:00;44f9d0f74386740aa45332c18b5a3b216350e0d3;""
elemwise.py;102;ADD;Frédéric Bastien;nouiz@nouiz.org;2013-09-09 14:23:38-07:00;44f9d0f74386740aa45332c18b5a3b216350e0d3;""
elemwise.py;108;ADD;Frédéric Bastien;nouiz@nouiz.org;2013-09-09 14:23:38-07:00;44f9d0f74386740aa45332c18b5a3b216350e0d3;""
type.py;13;ADD;Frédéric Bastien;nouiz@nouiz.org;2013-09-09 14:23:38-07:00;44f9d0f74386740aa45332c18b5a3b216350e0d3;""
test_cuda_ndarray.py;49;ADD;Frederic;nouiz@nouiz.org;2013-09-19 15:13:09-04:00;8e512ce05c275d9b673be178e115688f1bfa29e6;"Allow numpy.asarray(cuda_ndarray, dtype=...)"
test_basic.py;462;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2013-09-26 15:40:04-04:00;8e12c44a63aa854dadeeaf7cd276f1422438e1c1;"Add tests calling op.grad() to check if None are returned"
test_basic.py;465;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2013-09-30 14:21:49-04:00;8e5725ea304c1ea4f4d69628855f9de967919be5;"Move condition earlier to avoid useless computations"
test_basic.py;462;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2013-09-30 14:21:49-04:00;8e5725ea304c1ea4f4d69628855f9de967919be5;""
test_cuda_ndarray.py;49;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2013-09-30 12:08:49-07:00;6937f122ec56f55eec932c107834c1387ca69161;"Merge pull request #1524 from nouiz/fix_cycle  Fix cycle"
test_basic.py;465;ADD;Frédéric Bastien;nouiz@nouiz.org;2013-09-30 12:44:40-07:00;14ab494568f5bfa605887d2998d63d8471bfc691;"Merge pull request #1537 from lamblin/fix_grad_none  Do not return None in scalar op's grad, add tests"
fg.py;440;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2013-10-24 14:46:11-04:00;77f610603aad9f94df1538fa130b1befdb5cb158;"Assert that test values (if any) of replaced nodes match with replacement"
fg.py;439;ADD;Razvan Pascanu;r.pascanu@gmail.com;2013-10-25 10:31:03-07:00;e6633d20851bed10b3d728544b31ecc418e3f201;"Merge pull request #1578 from lamblin/fix_scan_merge_inouts  Fix scan merge inouts"
subtensor.py;12;ADD;Arnaud Bergeron;abergeron@gmail.com;2013-09-11 17:04:44-04:00;5e1935badf6a399d34de619db848a02a042afc87;"Mirror tensor and move the subtensor op in its own file."
subtensor.py;14;ADD;Frédéric Bastien;nouiz@nouiz.org;2013-10-31 05:57:40-07:00;8bd900f87f35a2bec94969437eeb67cf9747f6b6;"Merge pull request #1582 from abergeron/compyte2-rb  Compyte2 rebase"
opt_uncanonicalize.py;71;DELETED;Frederic;nouiz@nouiz.org;2013-11-07 10:27:41-05:00;054f21e6e0c5e3e4991f58e480bbbb9b4a0b9875;"Speed up MaxAndArgmaxOptimizer.  This is done by making it a local optimizer. This change to allow local optimizer to remove variable in the graph. I allow this only for variable that aren't used.  In a small test case, it wsa taking 0.6s now it take .1s. In a bigger test case, it was taking 40s. I didn't rerun it with the opt as it is too long.  This speed up the opt, as we do less iteration on the graph, as in the EquilibriumOptimizer add in the current iteration the new node in the graph. The old opt wasn't doing this and I didn't wanted to duplicate all those type of code."
pkl_utils.py;77;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2013-11-07 17:10:30-05:00;effeb3902ee47b5b1092407b1c2de996e83af453;"Add compatibility unpickler for python 3, use it in test"
pkl_utils.py;77;ADD;Frédéric Bastien;nouiz@nouiz.org;2013-11-07 18:47:20-08:00;f51cb06675327dc75bb5e43bce5e04fce6ffa518;"Merge pull request #1593 from lamblin/fix_py3_unpickle  Add compatibility unpickler for python 3, use it in test"
opt_uncanonicalize.py;71;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2013-11-11 06:38:59-08:00;2fe4b0b88f1888598c958bcd4d3952493f616f60;"Merge pull request #1594 from nouiz/faster_opt  [MRG] Fix test python 2.4 and faster opt"
blas.py;138;ADD;Frederic;nouiz@nouiz.org;2013-11-15 10:07:25-05:00;4de381134859813fc4730af3b1fe1fe4a2a11865;"NumPy 1.8 changed a private interface, but the official interface output useless stuff to the user.  Try to use the old interface and silence part of the printed stuff."
blas.py;138;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2013-11-18 15:02:31-08:00;1668349072ba0fa1b8a7612e40837f3f39ce8af7;"Merge pull request #1611 from nouiz/release  Release preparation"
nnet.py;12;ADD;Vincent Dumoulin;vi.dumoulin@gmail.com;2013-11-29 11:36:58-05:00;a3102cd385a2bbb6fedc6e444ac7293a93d74bbd;"Convert output creation to use pygpu_empty"
nnet.py;12;ADD;abergeron;abergeron@gmail.com;2013-12-05 12:02:57-08:00;51a6bbc694a7d19bffdb23629075dd11c32cea8b;"Merge pull request #1634 from vdumoulin/new_backend  New backend: GpuCrossentropySoftmaxArgmax1HotWithBias, GpuCrossentropySoftmax1HotWithBiasDx"
elemwise.py;85;ADD;Frederic;nouiz@nouiz.org;2013-12-05 22:51:57-05:00;36ebd8c9f2c04184684c6adc7b61ca180a759bfd;"Don't try to generate the kernel in the make_node."
elemwise.py;93;ADD;Frederic;nouiz@nouiz.org;2013-12-05 22:51:57-05:00;36ebd8c9f2c04184684c6adc7b61ca180a759bfd;""
elemwise.py;87;DELETED;Frederic;nouiz@nouiz.org;2013-12-05 22:51:57-05:00;36ebd8c9f2c04184684c6adc7b61ca180a759bfd;""
elemwise.py;93;DELETED;Frederic;nouiz@nouiz.org;2013-12-05 22:51:57-05:00;36ebd8c9f2c04184684c6adc7b61ca180a759bfd;""
opt.py;737;ADD;Frederic;nouiz@nouiz.org;2013-12-06 14:10:08-05:00;bbc8b5198414817dfdf225365647414ce8e5cccc;"fix gh-1122 It is a crash fix reported by abalkin"
opt.py;737;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2013-12-06 12:05:47-08:00;2688f9f87a808366ffc68fb205ddafdbfa71de5b;"Merge pull request #1644 from nouiz/gh-1122  Gh 1122"
elemwise.py;85;ADD;abergeron;abergeron@gmail.com;2013-12-06 12:15:11-08:00;03bb1866dc06df1dbcdf7f34d42129a2a5958af6;"Merge pull request #1642 from nouiz/gpua_elemwise  Gpua elemwise"
elemwise.py;93;ADD;abergeron;abergeron@gmail.com;2013-12-06 12:15:11-08:00;03bb1866dc06df1dbcdf7f34d42129a2a5958af6;""
elemwise.py;87;DELETED;abergeron;abergeron@gmail.com;2013-12-06 12:15:11-08:00;03bb1866dc06df1dbcdf7f34d42129a2a5958af6;""
elemwise.py;93;DELETED;abergeron;abergeron@gmail.com;2013-12-06 12:15:11-08:00;03bb1866dc06df1dbcdf7f34d42129a2a5958af6;""
cc.py;637;ADD;Arnaud Bergeron;abergeron@gmail.com;2013-12-04 14:47:00-05:00;6d8513344062c5033e6eb2acfc617ec606af91b8;"Add c_init_code_apply()."
basic.py;585;ADD;Frederic;nouiz@nouiz.org;2013-12-09 15:10:25-05:00;494a4c6f31ab17b0b3568b18d59aec7d88e1f264;"get_scalar_constant_value() support more Elewmise op.  Needed to detect the right broadcast pattern."
subtensor.py;427;ADD;Frederic;nouiz@nouiz.org;2013-12-10 01:05:46-05:00;fcb54f8acacc38e5cf2fe028142f6c4975c06c83;"Make Subtensor.make_node() detect more broadcastable dimensions."
cc.py;637;ADD;Frédéric Bastien;nouiz@nouiz.org;2013-12-09 22:22:48-08:00;f85085d0d272d18c6dd814c00871e346786160f1;"Merge pull request #1646 from abergeron/c_red  c_code() for GpuCAReduce (in gpuarray)"
basic.py;591;DELETED;Frederic;nouiz@nouiz.org;2013-12-10 15:20:01-05:00;280cb21b81759a02e429c3373583ec0f77e17065;"small code clean up following code review"
subtensor.py;430;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2013-12-17 12:15:50-08:00;aeeec0bf69744f3aa93e6184cc456cd32d13e6e8;"Merge pull request #1655 from nouiz/local_subtensor_of_alloc  Local subtensor of alloc"
test_conv_cuda_ndarray.py;16;ADD;Frederic;nouiz@nouiz.org;2013-12-13 20:27:26-05:00;baf12f542ebaa2ea607dd32e72d800eb6a42e2d9;"Advance the new GpuConv"
test_conv_cuda_ndarray.py;16;ADD;abergeron;abergeron@gmail.com;2014-01-08 10:38:23-08:00;1d9767b51d3d2c710cb78f47d429ad127e72c408;"Merge pull request #1668 from nouiz/gpu_conv  port GpuConv to the new gpu back-end"
cmodule.py;1806;ADD;Jeremiah Lowin;jlowin@gmail.com;2014-02-02 00:40:21-05:00;0e3cdab21f71b5f7c9c4914b8145be9950f4b7e8;"Python3 compatibility in test program compilation  Similar fix to #1660.  Without this fix, a `'str' does not support the buffer interface` error is raised in Python 3.3 on Mac OSX 10.9. One place it occurs is during testing for the Mac OS sdot bug (line 73, blas_headers.py)"
cmodule.py;1806;ADD;Frédéric Bastien;nouiz@nouiz.org;2014-02-03 06:27:59-08:00;7551d6dbaa2a88ce58797a6b29034cba3b1db2d5;"Merge pull request #1721 from jlowin/patch-1  Python3 compatibility in test program compilation"
subtensor.py;430;DELETED;Arnaud Bergeron;abergeron@gmail.com;2014-02-17 18:18:23-05:00;c49564d2e3787025932435e8de37802cb23c3dbd;"Fix optimizations that depend on python scalar being in idx_list."
subtensor.py;430;DELETED;Frédéric Bastien;nouiz@nouiz.org;2014-02-25 11:26:15-05:00;22ce58a2ff6878f2690ede24ce92162e59d5d102;"Merge pull request #1729 from abergeron/subtensor_const  Lift subtensor constant indexes as constants in the graph rather than keep them op-internal."
subtensor.py;430;DELETED;Laurent Dinh;dinh.laurent@gmail.com;2014-03-02 08:54:09-05:00;9ad99d0fecc1a8561b6a2fae3459927a08400ce3;"Merge branch 'master' of git://github.com/Theano/Theano into scan"
debugmode.py;168;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;"Merge git://github.com/Theano/Theano"
debugmode.py;182;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
debugmode.py;201;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
configparser.py;240;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
cc.py;644;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
cc.py;805;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
cmodule.py;21;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
cmodule.py;1809;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
fg.py;459;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_lazy.py;126;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_lazy.py;159;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_lazy.py;110;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
gradient.py;1679;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
gh_api.py;6;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
pkl_utils.py;77;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
pycuda_init.py;47;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
basic_ops.py;22;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_cuda_ndarray.py;49;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_cuda_ndarray.py;1016;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_cuda_ndarray.py;1022;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
basic_ops.py;19;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
elemwise.py;19;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
elemwise.py;90;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
elemwise.py;98;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
nnet.py;11;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
subtensor.py;15;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_conv_cuda_ndarray.py;16;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
type.py;14;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_neighbours.py;52;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_neighbours.py;69;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_neighbours.py;83;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_neighbours.py;354;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_neighbours.py;361;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
basic_sympy.py;11;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
basic.py;3059;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
basic.py;3364;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
blas.py;138;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
blas.py;281;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
opt.py;750;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
opt.py;4659;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
opt.py;4716;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
opt_uncanonicalize.py;70;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
subtensor.py;29;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_basic.py;473;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_basic.py;5685;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_basic.py;5694;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_basic.py;5702;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_basic.py;5877;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_basic.py;5895;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_basic.py;2281;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_basic.py;2723;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_basic.py;2729;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_basic.py;2735;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_basic.py;4829;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_basic.py;4836;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_basic.py;4843;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_basic.py;4850;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_basic.py;4857;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_elemwise.py;1276;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_opt.py;3954;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_opt.py;3450;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_subtensor.py;746;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_subtensor.py;752;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_subtensor.py;758;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
__init__.py;4;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_gradient.py;261;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_updates.py;68;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
test_updates.py;73;DELETED;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
unittest_tools.py;268;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
unittest_tools.py;282;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
unittest_tools.py;305;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-03-10 16:43:58-04:00;5c89596df9e5d8ecafa7d4c0aa8f0f4eb393cd57;""
nnet.py;516;ADD;Frederic;nouiz@nouiz.org;2014-03-18 15:39:55-04:00;9d73a2d56184b09cd6b29a5f6374ffea203badf6;"Use vectorized version of exp in the Softmax op."
nnet.py;258;ADD;Frederic;nouiz@nouiz.org;2014-03-18 16:04:53-04:00;abc885cf6c1da2efdee63a582b6330c57064e3ee;"Same speed up for SoftmaxWithBias"
nnet.py;247;ADD;abergeron;abergeron@gmail.com;2014-03-20 11:40:11-04:00;95bf6e34e3e9ed4f02fc1f73c8f16467f5a84611;"Merge pull request #1774 from nouiz/softmax  Softmax optimization"
nnet.py;551;ADD;abergeron;abergeron@gmail.com;2014-03-20 11:40:11-04:00;95bf6e34e3e9ed4f02fc1f73c8f16467f5a84611;""
nnet.py;247;ADD;Laurent Dinh;dinh.laurent@gmail.com;2014-03-24 15:53:12-04:00;d0cbf05e0c66334134daa0183ac9ab72f633ecd5;"Merge branch 'master' of git://github.com/Theano/Theano into scan"
nnet.py;551;ADD;Laurent Dinh;dinh.laurent@gmail.com;2014-03-24 15:53:12-04:00;d0cbf05e0c66334134daa0183ac9ab72f633ecd5;""
neighbours.py;12;ADD;Pierre Luc Carrier;carriepl@chai.iro.umontreal.ca;2014-03-31 15:34:08-04:00;c41a814a63fa0cf6a08fa03aadeeb4c62b2f1d6f;"Bug fixes in op GpuImages2Neibs"
nnet.py;247;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-04-09 16:54:23-04:00;52057806798bc881894c421c894fd6409e29dae8;"merge"
nnet.py;551;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-04-09 16:54:23-04:00;52057806798bc881894c421c894fd6409e29dae8;""
neighbours.py;12;ADD;Frédéric Bastien;nouiz@nouiz.org;2014-04-22 11:13:49-04:00;450615d57f15c4d579e48ad48087bc66c6c13c2d;"Merge pull request #1787 from carriepl/gpuImages2Neibs  Port op GpuImages2Neibs to new GPU backend"
neighbours.py;12;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-04-25 16:32:20-04:00;9bbf919e07349a4a642a484df762052d4e33ba9c;"Merge https://github.com/Theano/Theano"
nnet.py;247;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-04-25 16:32:20-04:00;9bbf919e07349a4a642a484df762052d4e33ba9c;""
nnet.py;551;ADD;Yann N. Dauphin;dhaemon@gmail.com;2014-04-25 16:32:20-04:00;9bbf919e07349a4a642a484df762052d4e33ba9c;""
opt.py;7;ADD;Pierre Luc Carrier;carriepl@grincheux.iro.umontreal.ca;2014-04-28 13:17:16-04:00;c17bce72f3fc1c701c61531f90fdf9eb7a7df9b1;"Corrected check for whether cuda is active or not and compile only one addition kernel instead of many in the perform() method."
opt.py;7;ADD;Pierre Luc Carrier;carriepl@grincheux.iro.umontreal.ca;2014-04-28 13:17:16-04:00;21c11dc108418ed48a7bbe4e5bc0d70a21fabc74;"Corrected check for whether cuda is active or not and compile only one addition kernel instead of many in the perform() method."
elemwise.py;161;ADD;Frederic;nouiz@nouiz.org;2014-04-29 16:03:13-04:00;1feb53a746f6e5d954d6474bdf2254246613dec7;"Add some support for GpuElemwise scalar_op c_support_code.  This is needed for the new gpu op tests to pass."
elemwise.py;161;ADD;Frédéric Bastien;nouiz@nouiz.org;2014-04-30 08:31:06-04:00;a1796d2d242c227669d270d18f263f9a87908787;"Merge pull request #1828 from nouiz/carriepl-subtensor  gh-1816 PR with small fixes"
opt.py;7;ADD;Frédéric Bastien;nouiz@nouiz.org;2014-04-30 08:31:06-04:00;a1796d2d242c227669d270d18f263f9a87908787;""
basic_ops.py;746;ADD;Arnaud Bergeron;abergeron@gmail.com;2014-04-30 17:14:23-04:00;4bacd641240d0968b5306e507869ba17e1d74f23;"Make c_code() defer to perform if broadcast is required."
basic_ops.py;746;DELETED;Arnaud Bergeron;abergeron@gmail.com;2014-05-01 14:14:43-04:00;6da774d11ee8e51c8f3d92dd396de9ecc945d731;"Following a change in pygpu to raise a ValueError instead of a GpuArrayException on GA_VALUE_ERROR we can remove workaround code."
test_conv_gemm.py;17;ADD;Arjun Jain;arjunjain@gmail.com;2014-07-29 14:51:42-04:00;fb66035292ef070b86466bf61c9c42b8faaa0a1c;"caffe conv kernel for theano. tests work, but needs integration and some cleanup"
test_conv_gemm.py;16;DELETED;Frederic;nouiz@nouiz.org;2014-07-30 15:04:14-04:00;998b9bc420a32f2ddefa05053581a1e9bfe16a9d;"Reuse the current gpu conv test for gpuconvmm"
opt.py;1286;ADD;Nicolas Ballas;ballas.n@gmail.com;2014-07-29 11:46:40-04:00;69bfdf7a181c9546b58529b1d7ef5ccc32ec7b9c;"[3DfftConv] Add stride value checking"
opt.py;1319;ADD;Nicolas Ballas;ballas.n@gmail.com;2014-07-29 11:46:40-04:00;69bfdf7a181c9546b58529b1d7ef5ccc32ec7b9c;""
opt.py;1352;ADD;Nicolas Ballas;ballas.n@gmail.com;2014-07-29 11:46:40-04:00;69bfdf7a181c9546b58529b1d7ef5ccc32ec7b9c;""
cc.py;668;ADD;Arnaud Bergeron;abergeron@gmail.com;2014-08-13 16:32:47-04:00;d650fa30b54508777c26d9de7eeddd83f3063442;"Add c_{init,support,cleanup}_code_struct to allow inserting stuf at the struct level."
cc.py;676;ADD;Arnaud Bergeron;abergeron@gmail.com;2014-08-13 16:32:47-04:00;d650fa30b54508777c26d9de7eeddd83f3063442;""
cc.py;684;ADD;Arnaud Bergeron;abergeron@gmail.com;2014-08-13 16:32:47-04:00;d650fa30b54508777c26d9de7eeddd83f3063442;""
cc.py;668;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2014-08-29 21:49:42-04:00;a81b5cdc892393aca4099fa589680145b8d01e10;"Merge pull request #2061 from abergeron/struct_support  Struct support"
cc.py;676;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2014-08-29 21:49:42-04:00;a81b5cdc892393aca4099fa589680145b8d01e10;""
cc.py;684;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2014-08-29 21:49:42-04:00;a81b5cdc892393aca4099fa589680145b8d01e10;""
opt.py;813;ADD;Frederic Bastien;nouiz@nouiz.org;2014-08-30 00:06:34-04:00;69456ab6ff4a752d82d13a13d99ec6409999809b;"In the ShapeFeature, convert x.shape[1] to Shape_i. This will help compare shapes."
test_opt.py;1601;ADD;Frederic Bastien;nouiz@nouiz.org;2014-08-30 00:08:23-04:00;3e574bbad6bdc186bc96c6a2476f42c0e0ef2b99;"Add local_useless_inc_subtensor.  Remove the IncSubtensor when we can infer all the shapes are the same."
test_opt.py;1601;ADD;Frederic Bastien;nouiz@nouiz.org;2014-09-01 14:39:39-04:00;7700bfbce16291e2e0c2215325a9f18f0bd36647;"Make opt local_useless_subtensor convert to subsample when we reverse."
test_opt.py;1601;DELETED;Frederic Bastien;nouiz@nouiz.org;2014-09-01 14:39:39-04:00;7700bfbce16291e2e0c2215325a9f18f0bd36647;""
cc.py;668;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-04 09:48:18-04:00;48773094c7b0bfbe2de31a2770bbc12b45a18408;"Merge remote-tracking branch 'upstream/master'"
cc.py;676;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-04 09:48:18-04:00;48773094c7b0bfbe2de31a2770bbc12b45a18408;""
cc.py;684;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-04 09:48:18-04:00;48773094c7b0bfbe2de31a2770bbc12b45a18408;""
elemwise.py;159;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-04 09:48:18-04:00;48773094c7b0bfbe2de31a2770bbc12b45a18408;""
neighbours.py;11;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-04 09:48:18-04:00;48773094c7b0bfbe2de31a2770bbc12b45a18408;""
opt.py;7;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-04 09:48:18-04:00;48773094c7b0bfbe2de31a2770bbc12b45a18408;""
nnet.py;247;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-04 09:48:18-04:00;48773094c7b0bfbe2de31a2770bbc12b45a18408;""
nnet.py;551;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-04 09:48:18-04:00;48773094c7b0bfbe2de31a2770bbc12b45a18408;""
subtensor.py;430;DELETED;Dustin Webb;daemonmaker@gmail.com;2014-09-04 09:48:18-04:00;48773094c7b0bfbe2de31a2770bbc12b45a18408;""
test_basic.py;1931;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-04 14:29:43-04:00;6d7dbb8fd7a5d727266c3c29c04a160aa3e4700a;"Added check to make sure the variable is of the user specified size after removing leading broadcastable dimensions."
test_basic.py;1944;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-04 15:40:34-04:00;7cb50f8bea5fd386d5af3ea547c3c2c88613d104;"Completed TODO in tensor.py:as_tensor_variable which said to use the Apply default output mechanism. Added tests to excited the various possible failure scenarios."
test_basic.py;1952;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-04 15:40:34-04:00;7cb50f8bea5fd386d5af3ea547c3c2c88613d104;""
test_basic.py;1960;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-04 15:40:34-04:00;7cb50f8bea5fd386d5af3ea547c3c2c88613d104;""
test_basic.py;1944;DELETED;Dustin Webb;daemonmaker@gmail.com;2014-09-05 10:43:48-04:00;c8e7eea63c3382878cb7a873c354c74a6712d426;"Incorporated review comments."
test_basic.py;1952;DELETED;Dustin Webb;daemonmaker@gmail.com;2014-09-05 10:43:48-04:00;c8e7eea63c3382878cb7a873c354c74a6712d426;""
test_basic.py;1960;DELETED;Dustin Webb;daemonmaker@gmail.com;2014-09-05 10:43:48-04:00;c8e7eea63c3382878cb7a873c354c74a6712d426;""
ordered_set.py;57;ADD;Frederic Bastien;nouiz@nouiz.org;2014-09-05 14:19:50-04:00;dbe755dc3a5427197b63138f22359eb1b6f4a338;"Make OrderedSet pickable (so fix tests broken by the previous commit that use them more frequently)"
test_basic.py;1931;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2014-09-08 13:20:42-04:00;ee3e49e41c73d915cdc2e28caaa8ba7bf30b13ce;"Merge pull request #2083 from daemonmaker/todo_astensorvariable  Completed TODO in as_tensor_variable which said to strip off leading bro..."
opt.py;813;ADD;abergeron;abergeron@gmail.com;2014-09-08 16:34:26-04:00;2036661e7efea3e1175e7213a148ff8368fda5dd;"Merge pull request #2070 from nouiz/opt_inc_sub  Opt inc sub"
test_opt.py;1601;ADD;abergeron;abergeron@gmail.com;2014-09-08 16:34:26-04:00;2036661e7efea3e1175e7213a148ff8368fda5dd;""
opt.py;813;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-09 09:41:17-04:00;14c219b21c83c9229fe045af7faa56a14fe7b73f;"Merge branch 'master' of https://github.com/Theano/Theano into mastery  Conflicts: 	theano/tensor/tests/test_basic.py"
test_basic.py;1964;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-09 09:41:17-04:00;14c219b21c83c9229fe045af7faa56a14fe7b73f;""
test_opt.py;1601;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-09 09:41:17-04:00;14c219b21c83c9229fe045af7faa56a14fe7b73f;""
test_basic.py;1964;DELETED;Dustin Webb;daemonmaker@gmail.com;2014-09-09 09:48:40-04:00;6b31175f931a0c338ccd660111dab6ac49cd8a6c;"Streamlined test."
test_basic.py;1931;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2014-09-09 11:37:50-04:00;d76c66a5667d2dc6f3421e312b25f21bd5997f17;"Merge pull request #2086 from daemonmaker/todo_astensorvariable_applydefaultoutput  Completed TODO in tensor.py:as_tensor_variable which said to use the App..."
ordered_set.py;56;ADD;abergeron;abergeron@gmail.com;2014-09-09 11:55:42-04:00;ff91a5543f01fda1a554743f814cb872440bb707;"Merge pull request #2074 from nouiz/opt_order  Make optimization more deterministic"
ordered_set.py;56;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-17 11:39:24-04:00;c44ed6751c859596d4807c89fd4c5f3924fc7dcd;"Merge branch 'master' of https://github.com/Theano/Theano"
opt.py;828;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-17 11:39:24-04:00;c44ed6751c859596d4807c89fd4c5f3924fc7dcd;""
test_opt.py;1601;ADD;Dustin Webb;daemonmaker@gmail.com;2014-09-17 11:39:24-04:00;c44ed6751c859596d4807c89fd4c5f3924fc7dcd;""
scan_opt.py;872;ADD;Frederic Bastien;nouiz@nouiz.org;2014-09-23 00:27:07-04:00;b53ec149783db86d64d092de4b10a31f3e80b398;"Add code in comment that need to be more tested."
scan_opt.py;917;ADD;abergeron;abergeron@gmail.com;2014-09-24 15:43:16-04:00;a7b9a7e86c5bc1dcf30068338183fc590fa79c9a;"Merge pull request #1970 from nouiz/opt_disabled_fix  [MRG, BUG] Scan Opt fixes, enhencements"
argparse.py;635;DELETED;Frederic;nouiz@nouiz.org;2014-10-01 12:49:08-04:00;7b2189f4ef1f85dab108b12a092c5ff6f8136609;"Remove a file under Apache licence (argparse)  Argparse is in Python 2.7. This file was added for compatibility with older python.  We remove one of its user(nose_pr.py) that we don't use.  As we support python 2.6, I raise a good error message in the only file that use it. As it is available in pypi, I think it is fine we don't provide it for python 2.6, as this file isn't very important."
argparse.py;1623;DELETED;Frederic;nouiz@nouiz.org;2014-10-01 12:49:08-04:00;7b2189f4ef1f85dab108b12a092c5ff6f8136609;""
argparse.py;635;DELETED;abergeron;abergeron@gmail.com;2014-10-01 16:04:14-04:00;a4c17642339dc1fd25f81ceb8a8c94b89f7925dc;"Merge pull request #2143 from nouiz/log  Don't change the defaul log level during import. Otherwise, the user can..."
argparse.py;1623;DELETED;abergeron;abergeron@gmail.com;2014-10-01 16:04:14-04:00;a4c17642339dc1fd25f81ceb8a8c94b89f7925dc;""
test_basic_ops.py;356;ADD;Dustin Webb;daemonmaker@gmail.com;2014-10-07 10:51:35-04:00;5659f1e06b5fbbaa979d3dc43ba740b3ff672d58;"Optimized new code and improved the tests."
test_basic_ops.py;356;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2014-10-07 12:07:26-04:00;227882425a1f01c335fd5b390b6c0a09197de56d;"Merge pull request #2149 from daemonmaker/issue1477  Added code to calculate new shape when '-1' is provided as a value for a..."
basic.py;663;ADD;Frederic;nouiz@nouiz.org;2014-10-09 14:47:48-04:00;ca0203391cd0d46746d04335e27b2ff38b0b1ff2;"Make get_scalar_constant_value() infer in Subtensor(Join of vector).  This cause some advanced subtensor to infer False for broadcast instead of True.  fix in part gh-2165"
basic.py;665;ADD;Frederic;nouiz@nouiz.org;2014-10-09 14:47:48-04:00;ca0203391cd0d46746d04335e27b2ff38b0b1ff2;""
basic.py;663;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2014-10-15 17:51:45-04:00;52afebdf051ca4c427337270e1edfef4f5387c62;"Merge pull request #2159 from nouiz/permutation  Allow permutation to return just one permutation."
basic.py;665;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2014-10-15 17:51:45-04:00;52afebdf051ca4c427337270e1edfef4f5387c62;""
opt.py;1390;ADD;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2014-10-26 21:35:41+01:00;53756433e3eecdbff4f12883b779b0b09741b0bf;"modified local_subtensor_make_vector to support advanced indexing"
opt.py;1365;DELETED;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2014-10-26 21:35:41+01:00;53756433e3eecdbff4f12883b779b0b09741b0bf;""
opt.py;1374;DELETED;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2014-10-26 21:35:41+01:00;53756433e3eecdbff4f12883b779b0b09741b0bf;""
opt.py;1379;ADD;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2014-10-28 19:58:52+01:00;b125969913db4960251e53a041594a66f9b81afe;"use get_scalar_constant_value for ndim == 0 again; add error message to TypeError exception"
opt.py;1394;ADD;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2014-10-28 20:59:16+01:00;d9b990de7e7ca7d7c7d98ce083df1ec1c6c9f10b;"added support for slices with constant start/stop/step variables in local_subtensor_make_vector"
opt.py;1400;DELETED;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2014-10-29 22:04:33+01:00;348671b1f4c2cbe10f594e14bed5d7b27854b2c8;"removed redundant case in local_subtensor_make_vector optimization"
opt.py;1379;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2014-11-03 14:00:06-05:00;df1bd7623661e41b1240ccd5b645f39f52c72e96;"Merge pull request #2216 from sisp/adv_subtensor_opt  Generalize all [Inc]Subtensor optimization to advanced[inc]subtensor[1]"
opt.py;1394;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2014-11-03 14:00:06-05:00;df1bd7623661e41b1240ccd5b645f39f52c72e96;""
opt.py;1365;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2014-11-03 14:00:06-05:00;df1bd7623661e41b1240ccd5b645f39f52c72e96;""
opt.py;1374;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2014-11-03 14:00:06-05:00;df1bd7623661e41b1240ccd5b645f39f52c72e96;""
opt.py;53;ADD;Frederic;nouiz@nouiz.org;2014-11-21 14:50:51-05:00;26d6978cc1006e7b3c521111f50e4dbc5605df9d;"Fix doc gen when can not compile gpu"
opt.py;53;ADD;abergeron;abergeron@gmail.com;2014-11-21 14:53:23-05:00;aa892a7e3f1ce45d980719a901533458ddeb41ad;"Merge pull request #2279 from nouiz/import_fix  Fix crash at import"
configdefaults.py;149;ADD;Arnaud Bergeron;abergeron@gmail.com;2014-11-24 12:11:09-05:00;a7175d004b19e4ea43ec52be0024ee6c50966ddf;"Use clang++ on mac (if present)."
configdefaults.py;149;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2014-11-24 16:54:39-05:00;de11ad82754de872a2402fd868314909a1f4b450;"Merge pull request #2290 from abergeron/use_clang  Use clang++ on mac (if present)."
subtensor.py;477;ADD;Frederic;nouiz@nouiz.org;2014-11-26 16:10:53-05:00;75405be7dcabf4cbfe5a2a6808dc400fd272f580;"crash fix to the new tests that will be in the next commit.  Make subtensor.make_node infer more broadcastable. This remove crash from local_subtensor_merge that was loosing broadcastable dimensions."
subtensor.py;477;ADD;abergeron;abergeron@gmail.com;2014-11-27 16:01:29-05:00;5c9e0b31fa45f9c55563f2e97c034450594c6b56;"Merge pull request #2298 from nouiz/convdnn_broadcast  Fix broadcast pattern of dnn conv op."
configdefaults.py;149;ADD;Robert McGibbon;rmcgibbo@gmail.com;2014-12-03 04:20:03-08:00;425d4add2d0ac8ec8bdc152ea38b066185228770;"merge master"
subtensor.py;477;ADD;Robert McGibbon;rmcgibbo@gmail.com;2014-12-03 04:20:03-08:00;425d4add2d0ac8ec8bdc152ea38b066185228770;""
opt.py;1994;ADD;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-02-20 12:47:21+01:00;8c0ea6eca8a9abd77fe4bd542339ab69171c7f37;"make local_useless_subtensor optimization support AdvancedSubtensor1"
opt.py;1958;ADD;Pierre Luc Carrier;carriepl@bart2.iro.umontreal.ca;2015-02-25 13:38:43-05:00;df1176a35841cb425120ed5cd61c721d90819bcb;"Refactor local_useless_subtensor to allow earlier exiting of the function"
opt.py;1955;DELETED;Pierre Luc Carrier;carriepl@bart2.iro.umontreal.ca;2015-02-25 13:38:43-05:00;df1176a35841cb425120ed5cd61c721d90819bcb;""
opt.py;1962;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2015-03-02 10:49:31-05:00;b4e6bda3722ae9ce9531789206e263c56b2d099e;"Merge pull request #2532 from carriepl/speed_up_local_useless_subtensor  Speed up local useless subtensor"
opt.py;1958;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2015-03-02 10:49:31-05:00;b4e6bda3722ae9ce9531789206e263c56b2d099e;""
opt.py;2706;ADD;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-03-09 16:30:53+01:00;3162e02cb61db0c9ffbbc3e3d4160294270863db;"fixed subtensor broadcasting case, fixed tests to only run when shape feature is available, added bitwise or/and optimizations to remove constant output"
opt.py;2726;ADD;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-03-09 16:30:53+01:00;3162e02cb61db0c9ffbbc3e3d4160294270863db;""
test_module.py;463;DELETED;Pierre Luc Carrier;carriepl@bart2.iro.umontreal.ca;2015-03-10 14:04:53-04:00;dcbe40c85a7ccd3d2bc65e5309356ca0c052b2ab;"Remove compile.module as well as references to it and tests for it"
test_module.py;463;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-03-13 15:04:50-04:00;e39ad2e08c5ff097aa005f37986668034e1fb165;"Merge pull request #2611 from abergeron/delete_deprecated  Delete deprecated"
test_dictionary_output.py;150;ADD;AlexLamb;alex6200@gmail.com;2015-03-25 22:23:19-07:00;f19bb9fade891eaf66f4298a45d377913e6a6ee2;"Added comments.  Added test that rejects non-string keys"
test_dictionary_output.py;156;ADD;AlexLamb;alex6200@gmail.com;2015-03-25 22:23:19-07:00;f19bb9fade891eaf66f4298a45d377913e6a6ee2;""
test_dictionary_output.py;162;ADD;AlexLamb;alex6200@gmail.com;2015-03-25 22:23:19-07:00;f19bb9fade891eaf66f4298a45d377913e6a6ee2;""
cmodule.py;1562;ADD;Frederic;nouiz@nouiz.org;2015-03-26 11:16:50-04:00;47d59f979dc5475a34ae9a7ca585a369afb59a9c;"Make cudnn_available() use nvcc"
cmodule.py;1820;DELETED;Frederic;nouiz@nouiz.org;2015-03-26 11:16:50-04:00;47d59f979dc5475a34ae9a7ca585a369afb59a9c;""
cmodule.py;1562;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-03-26 14:39:53-04:00;3350f98f5abc3389ae0f149a0aa05a7bbab9d8d8;"Merge pull request #2682 from nouiz/dnn_avail  Use nvcc to test for cudnn availability."
cmodule.py;1820;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-03-26 14:39:53-04:00;3350f98f5abc3389ae0f149a0aa05a7bbab9d8d8;""
cula.py;14;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-03-20 18:14:45-04:00;a8371735ce1cd3332d89c8676f4695c7d6b2a7dd;"Fix detection of cula"
cula.py;15;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-03-26 20:37:34-04:00;e972e95645cfa0edbcd85c5c5e1c9a897b96502e;"Merge pull request #2306 from caglar/theano_solve  Theano solve GPU Cula Op"
test_dictionary_output.py;150;DELETED;AlexLamb;alex6200@gmail.com;2015-03-27 19:53:31-07:00;8d5dd46f4340b83436932abfc062d415372efd99;"Removed assertionerror test, as Python3 and Python2.7 throw different exceptions"
test_dictionary_output.py;156;DELETED;AlexLamb;alex6200@gmail.com;2015-03-27 19:53:31-07:00;8d5dd46f4340b83436932abfc062d415372efd99;""
test_dictionary_output.py;162;DELETED;AlexLamb;alex6200@gmail.com;2015-03-27 19:53:31-07:00;8d5dd46f4340b83436932abfc062d415372efd99;""
test_dictionary_output.py;148;ADD;AlexLamb;alex6200@gmail.com;2015-03-30 23:58:33-07:00;bc3626201a8f6e05aca262de8020f87accc28f15;"Moved type check on keys to ensure that python2.7 and python3.3 have the same errors."
test_dictionary_output.py;153;ADD;AlexLamb;alex6200@gmail.com;2015-03-30 23:58:33-07:00;bc3626201a8f6e05aca262de8020f87accc28f15;""
test_dictionary_output.py;158;ADD;AlexLamb;alex6200@gmail.com;2015-03-30 23:58:33-07:00;bc3626201a8f6e05aca262de8020f87accc28f15;""
test_dictionary_output.py;148;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-04-01 18:19:19-04:00;b3bf808f6f8a9f03a26a2768854dd9c328a4141c;"Merge pull request #2645 from DeathMonster666/master  Added ability to store results from theano function in a python dictiona..."
test_dictionary_output.py;153;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-04-01 18:19:19-04:00;b3bf808f6f8a9f03a26a2768854dd9c328a4141c;""
test_dictionary_output.py;158;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-04-01 18:19:19-04:00;b3bf808f6f8a9f03a26a2768854dd9c328a4141c;""
test_module.py;463;DELETED;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-04-03 13:43:36+02:00;585db1cfb113334b1e4f599bbca3f41fa6abea0e;"Merge remote-tracking branch 'central/master' into local_useless_incsubtensor_alloc  Conflicts: 	theano/tensor/nnet/tests/test_nnet.py"
cmodule.py;1561;ADD;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-04-03 13:43:36+02:00;585db1cfb113334b1e4f599bbca3f41fa6abea0e;""
cmodule.py;1788;DELETED;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-04-03 13:43:36+02:00;585db1cfb113334b1e4f599bbca3f41fa6abea0e;""
cula.py;15;ADD;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-04-03 13:43:36+02:00;585db1cfb113334b1e4f599bbca3f41fa6abea0e;""
opt.py;1999;ADD;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-04-03 13:43:36+02:00;585db1cfb113334b1e4f599bbca3f41fa6abea0e;""
opt.py;1954;DELETED;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-04-03 13:43:36+02:00;585db1cfb113334b1e4f599bbca3f41fa6abea0e;""
test_dictionary_output.py;148;ADD;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-04-03 13:43:36+02:00;585db1cfb113334b1e4f599bbca3f41fa6abea0e;""
test_dictionary_output.py;153;ADD;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-04-03 13:43:36+02:00;585db1cfb113334b1e4f599bbca3f41fa6abea0e;""
test_dictionary_output.py;158;ADD;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-04-03 13:43:36+02:00;585db1cfb113334b1e4f599bbca3f41fa6abea0e;""
opt.py;2784;DELETED;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-04-03 13:51:18+02:00;24cc74d3f8ce72968b8e28677c0f743263bf0ace;"fixed conditions when to insert an Assert op; improved the way a variable is added temporarily to the fgraph so that shape_feature can use it; removed bitwise optimizations since they have been started in another PR already"
opt.py;2804;DELETED;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-04-03 13:51:18+02:00;24cc74d3f8ce72968b8e28677c0f743263bf0ace;""
test_vm.py;7;DELETED;Frederic;nouiz@nouiz.org;2015-04-10 12:07:05-04:00;a78a9a8056ef6e10ed901bad4325de2ed9b6117e;"pep8"
test_vm.py;7;DELETED;abergeron;abergeron@gmail.com;2015-04-10 14:45:11-04:00;45a84389b1afb1e6bb1f5c3007c5f04a44bc1a58;"Merge pull request #2746 from nouiz/shared  fix gh-855."
ordered_set.py;51;ADD;Arnaud Bergeron;abergeron@gmail.com;2015-04-13 17:18:38-04:00;b4181fcb48592206a58448bb40348eb6cf3515bf;"Remove more support for python < 2.6"
ordered_set.py;53;DELETED;Arnaud Bergeron;abergeron@gmail.com;2015-04-13 17:18:38-04:00;b4181fcb48592206a58448bb40348eb6cf3515bf;""
cula.py;10;ADD;Arnaud Bergeron;abergeron@gmail.com;2015-04-17 10:42:33-04:00;5ce861c11430e5427409bbeacabe0696303b6499;"Make cuda.py importable even if cuda is not available."
ordered_set.py;51;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2015-04-20 16:15:58-04:00;2b892bc2b72b7348ae9226db59c81b58d611031f;"Merge pull request #2761 from abergeron/pep8  A bunch of pep8 work"
ordered_set.py;58;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2015-04-20 16:15:58-04:00;2b892bc2b72b7348ae9226db59c81b58d611031f;""
cula.py;10;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2015-04-20 16:15:58-04:00;2b892bc2b72b7348ae9226db59c81b58d611031f;""
basic_ops.py;3055;ADD;Iulian Vlad Serban;julianserban@gmail.com;2015-04-29 17:03:32-04:00;3ec221fedeabde51458564c192d87f365237a0ea;"Minor modifications to issue #2613."
basic_ops.py;3052;ADD;Xavier Bouthillier;xavier.bouthillier@gmail.com;2015-04-30 23:55:38-04:00;1adc5162412bfb8d74d39657c67dfff76139f3a8;"Merge pull request #2814 from julianser/Fix_2613  Implemented fix for issue #2613: Concatenation bug for negative axes on ..."
opt.py;4277;ADD;Kelvin Xu;xukelvin@eos1.iro.umontreal.ca;2015-04-06 14:13:19-04:00;eeb7e6ec02489c33193d6d40816a3ad571ded894;"sum_alloc, sum_mul_by scalar, sum_all_to_non, sum_sum"
opt.py;4291;ADD;Kelvin Xu;xukelvin@eos1.iro.umontreal.ca;2015-04-06 14:13:19-04:00;eeb7e6ec02489c33193d6d40816a3ad571ded894;""
opt.py;4240;DELETED;Kelvin Xu;xukelvin@eos7.iro.umontreal.ca;2015-05-03 16:22:54-04:00;a6aff9abf22c64e3c047c6c3743078d136d068ab;"share local alloc code"
opt.py;4254;DELETED;Kelvin Xu;xukelvin@eos7.iro.umontreal.ca;2015-05-03 16:22:54-04:00;a6aff9abf22c64e3c047c6c3743078d136d068ab;""
basic_ops.py;3052;DELETED;Xavier Bouthillier;xavier.bouthillier@umontreal.ca;2015-05-04 22:31:50-04:00;3b3a33f9c6bde3d1257d877bf54f7c590a406bda;"Add handling of negative axis for Join and GpuJoin  Negative axis were automatically handled by numpy implementation inside Join.{perform,c_code}. However, both Join.grad and GpuJoin.{perform,c_code,grad} implementations were not thought to take care of negative axis.  This commit adds checks for exceeding negative axis in Join.make_node for constants and in {Gpu}Join.{perform, c_code} for symbolic variables. Axis are converted to positive values inside GpuJoin.{perform, c_code} since current implementation does not support negative axis."
test_basic.py;3617;ADD;Xavier Bouthillier;xavier.bouthillier@umontreal.ca;2015-05-04 22:31:50-04:00;3b3a33f9c6bde3d1257d877bf54f7c590a406bda;""
test_basic.py;3653;ADD;Xavier Bouthillier;xavier.bouthillier@umontreal.ca;2015-05-04 22:31:50-04:00;3b3a33f9c6bde3d1257d877bf54f7c590a406bda;""
basic_ops.py;3069;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2015-05-06 16:04:40-04:00;195150207d25b8d69ebb89c2c2c4073e75050a3c;"Merge pull request #2871 from bouthilx/concat_symbolic_axis  (#2613, #2747) Add handling of negative axis for Join and GpuJoin"
test_basic.py;3618;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2015-05-06 16:04:40-04:00;195150207d25b8d69ebb89c2c2c4073e75050a3c;""
test_basic.py;3654;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2015-05-06 16:04:40-04:00;195150207d25b8d69ebb89c2c2c4073e75050a3c;""
test_conv_cuda_ndarray.py;421;ADD;Frederic;nouiz@nouiz.org;2015-06-08 16:01:47-04:00;47be7bd37702a1acbd2ebc7399bce7465914d70c;"Better error message"
test_conv_cuda_ndarray.py;421;DELETED;Frederic;nouiz@nouiz.org;2015-06-09 14:18:57-04:00;e067dd677b7e494aae7da0ff85fad5f27c582db2;"simpler test"
six.py;96;ADD;David Warde-Farley;wardefar@iro.umontreal.ca;2015-05-03 13:54:27-04:00;cbcc42e470ecd12cb5e115f6b67a0d57e7de3154;"Update six to 1.9.0.  Not altering it to pass flake8 since this is external code, we should just whitelist it. Better yet, we should add it as a dependency and remove the bundled version."
six.py;195;ADD;David Warde-Farley;wardefar@iro.umontreal.ca;2015-05-03 13:54:27-04:00;cbcc42e470ecd12cb5e115f6b67a0d57e7de3154;""
six.py;96;DELETED;David Warde-Farley;wardefar@iro.umontreal.ca;2015-05-04 15:38:13-04:00;37714c93e486daff6388389791bbf497e33399f1;"Remove bundled six; add dependency."
six.py;195;DELETED;David Warde-Farley;wardefar@iro.umontreal.ca;2015-05-04 15:38:13-04:00;37714c93e486daff6388389791bbf497e33399f1;""
six.py;96;ADD;Arnaud Bergeron;abergeron@gmail.com;2015-06-16 16:55:53-04:00;66b329e7a0380ff16e3f99fdbaf29c94cdebafc6;"Temporarily restore the bundled six to avoid breaking dependant libraries.  This bundled copy will go away at a later time."
six.py;195;ADD;Arnaud Bergeron;abergeron@gmail.com;2015-06-16 16:55:53-04:00;66b329e7a0380ff16e3f99fdbaf29c94cdebafc6;""
six.py;96;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2015-06-23 13:00:57-04:00;414300e78041ef55cb0c419a96add960caa42121;"Merge pull request #3037 from abergeron/python23  Python23"
six.py;195;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2015-06-23 13:00:57-04:00;414300e78041ef55cb0c419a96add960caa42121;""
main.py;121;ADD;Sina Honari;honaris@iro.umontreal.ca;2015-06-26 17:11:01-04:00;f6b0d0a426856216301b9ceeea89d4c34e20ca60;"raising exception for running theano.test() with device=gpu"
main.py;121;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-06-29 10:37:39-04:00;481739272e8f4b922c3081d9d3b81b275b27139b;"Merge pull request #3078 from SinaHonari/issue2931  raising exception for running theano.test() with device=gpu"
cmodule.py;40;ADD;Iban Harlouchet;harlouci@eos3.iro.umontreal.ca;2015-07-10 15:42:57-04:00;700d883beff83a561e2b23a5f1118a6e82d690eb;"flake8 of theano/gof/cmodule.py"
cmodule.py;21;DELETED;Iban Harlouchet;harlouci@eos3.iro.umontreal.ca;2015-07-10 15:42:57-04:00;700d883beff83a561e2b23a5f1118a6e82d690eb;""
compilelock.py;381;ADD;Frederic;nouiz@nouiz.org;2015-07-14 13:13:48-04:00;1ddcd737b374131d4d9170e0be2e6509a2c8284f;"Do not remove the lock if taken by another process. Remove __del__ as it is not useful, it is registered atexit"
cmodule.py;40;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2015-07-15 10:51:32-04:00;cba9c812ad3bc746a2c86746f4786efeee5693cb;"Merge pull request #3130 from harlouci/flake8_gof  Flake8 gof"
cmodule.py;21;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2015-07-15 10:51:32-04:00;cba9c812ad3bc746a2c86746f4786efeee5693cb;""
compilelock.py;379;ADD;abergeron;abergeron@gmail.com;2015-07-17 14:07:01-04:00;09446af5fe93d9fab061edab9ca1c91af367c7ed;"Merge pull request #3135 from nouiz/lock  Don't remove compilelock we don't own"
printing.py;34;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-08-06 17:51:39-04:00;8bcd3264f55fbbc0e4a8f3a02a22a293a5f6631a;"Make pydotprint work with pydot_ng  This is necessary to work on Windows, and for Python 3"
printing.py;42;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2015-08-07 14:11:24-04:00;72b8b163086cca050b406d7a2701251439c44423;"Merge pull request #3264 from Theano/pydot_ng  Make pydotprint work with pydot_ng"
six.py;96;ADD;Christof Angermueller;cangermueller@gmail.com;2015-08-24 22:09:24+02:00;9771d7b60d33a7437ee85685905dd0e0c0090188;"Merge branch 'master' of https://github.com/Theano/Theano"
six.py;195;ADD;Christof Angermueller;cangermueller@gmail.com;2015-08-24 22:09:24+02:00;9771d7b60d33a7437ee85685905dd0e0c0090188;""
cmodule.py;41;ADD;Christof Angermueller;cangermueller@gmail.com;2015-08-24 22:09:24+02:00;9771d7b60d33a7437ee85685905dd0e0c0090188;""
cmodule.py;21;DELETED;Christof Angermueller;cangermueller@gmail.com;2015-08-24 22:09:24+02:00;9771d7b60d33a7437ee85685905dd0e0c0090188;""
compilelock.py;396;ADD;Christof Angermueller;cangermueller@gmail.com;2015-08-24 22:09:24+02:00;9771d7b60d33a7437ee85685905dd0e0c0090188;""
printing.py;42;ADD;Christof Angermueller;cangermueller@gmail.com;2015-08-24 22:09:24+02:00;9771d7b60d33a7437ee85685905dd0e0c0090188;""
main.py;121;ADD;Christof Angermueller;cangermueller@gmail.com;2015-08-24 22:09:24+02:00;9771d7b60d33a7437ee85685905dd0e0c0090188;""
kernel_codegen.py;9;ADD;Sean Lee;selee@nvidia.com;2015-01-21 15:38:48-08:00;89f584bc14bbc7df625fb571173e41d0baa0d460;"Use the CUDA driver API for CUDA gpuarray operations.  Instead of mixing the CUDA driver API and the runtime API in the generated code, use only the CUDA driver API. GPU programs for CUDA gpuarray operations (except conv operations) are now generated as a string that is passed to the python interface of libgpuarray. libgpuarray then generates a cubin bytearray, which is embedded in the generated code.  The generated code then uses the CUDA driver API via the C++ interface of libgpuarray to load and launch the GPU program.  This has at least two benefits:  (1) This approach does not use the nvcc offline compiler to compile the     generated code into the shared library.  It uses the host compiler     directly, which is likely to be faster.  Note that, for cubin generation,     libgpuarray still uses the nvcc offline compiler, but an improvement is     being made to use NVRTC and ptxas instead of nvcc, which should be, again,     faster. (2) Mixing the CUDA driver API and the runtime API is typically discouraged."
conv.py;10;ADD;Sean Lee;selee@nvidia.com;2015-03-06 18:32:40-08:00;41daf4a88a108c387662e1b0f49ad3c15ea28cab;"Use the CUDA Driver API for conv operations"
test_tutorial.py;711;DELETED;Arnaud Bergeron;abergeron@gmail.com;2015-08-13 19:10:13-04:00;b1f7979f579d44c86a5f523a9fb3e5e38043fdea;"Fixup extending/* and delete associated tests."
test_tutorial.py;1117;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2015-09-09 01:13:22-04:00;752f1f73363554351e39d070914a2dbc354ba4eb;"Merge pull request #3284 from abergeron/doctest  Use the testcode facility to test code examples directly"
conv.py;10;ADD;abergeron;abergeron@gmail.com;2015-09-09 20:03:51-04:00;5ecbbde28e5ed46821c91e966395afd06d243129;"Merge pull request #3364 from seanprime7/drvapi  Use the libgpuarray APIs to manage GPU code compilation, execution, etc."
kernel_codegen.py;9;ADD;abergeron;abergeron@gmail.com;2015-09-09 20:03:51-04:00;5ecbbde28e5ed46821c91e966395afd06d243129;""
opt.py;3282;ADD;Frederic;nouiz@nouiz.org;2014-10-08 10:09:59-04:00;aa49be05e5f4ff528c12516f7dc9e6c13b7f3608;"remove many useless elemwise.  They where discovered in the outer graph of scan."
opt.py;3329;DELETED;Amjad Almahairi;amjadmahayri@gmail.com;2015-07-22 17:50:20-04:00;396e2f1ee7d0be51917289bf0e8fe6e84187f4ef;"minor modifs"
__init__.py;8;ADD;carriepl;carriepl@users.noreply.github.com;2015-09-14 10:26:19-04:00;aae36ad4e5f0cc65c3ea8467919c19d65a47eaf9;"Merge pull request #3322 from cangermueller/master  d3viz: Interactive visualization of Theano compute graphs"
formatting.py;22;ADD;carriepl;carriepl@users.noreply.github.com;2015-09-14 10:26:19-04:00;aae36ad4e5f0cc65c3ea8467919c19d65a47eaf9;""
test_function.py;51;ADD;carriepl;carrier.pierreluc@gmail.com;2015-09-22 14:43:57-04:00;388d68c16510556eb82006541e059cea9a13240a;"Add tests for using In() instances as inputs in theano.function()"
test_function.py;51;ADD;carriepl;carrier.pierreluc@gmail.com;2015-09-23 08:31:52-04:00;7b8c07abc2c7e50d87bea4b49da8aa2de6334d0f;"Add new tests for In wrapped"
test_function.py;51;DELETED;carriepl;carrier.pierreluc@gmail.com;2015-09-23 08:31:52-04:00;7b8c07abc2c7e50d87bea4b49da8aa2de6334d0f;""
test_function.py;51;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2015-09-25 08:33:19-04:00;da3c8070dc48583d1fdb3ffcfc15cb341948a0d1;"Merge pull request #3367 from carriepl/scan_mitmot_prealloc  Scan mitmot prealloc"
test_basic_ops.py;32;ADD;Arnaud Bergeron;abergeron@gmail.com;2015-09-30 13:12:35-04:00;1e9d157c3fb0e4a6567390a27ae40018693a6801;"Flake8 for tests/test_basic_ops.py"
test_conv_cuda_ndarray.py;28;ADD;Arnaud Bergeron;abergeron@gmail.com;2015-09-30 14:22:33-04:00;5ed22311bee94976fbb87b4b2f4336c03afb3be8;"Some flake8 fixes."
test_conv_cuda_ndarray.py;18;DELETED;Arnaud Bergeron;abergeron@gmail.com;2015-09-30 14:22:33-04:00;5ed22311bee94976fbb87b4b2f4336c03afb3be8;""
compiledir.py;376;DELETED;Piotr Frankowski;frankowski.piotrek@gmail.com;2015-10-01 21:18:45+02:00;abc28761496bcfdae596d7349e3fa819a7bac96c;"#3429 - python 'with' statement in reset modules"
test_basic_ops.py;31;DELETED;Arnaud Bergeron;abergeron@gmail.com;2015-09-09 14:31:50-04:00;5b6448e2cba1d33ced40c1163290cb575fe5a17c;"Type context for test_basic_ops.py"
opt.py;8;DELETED;Arnaud Bergeron;abergeron@gmail.com;2015-09-16 14:35:06-04:00;c887bc14245eb171b265b5deb002d39f36c9a1a3;"Fix most of opt.py for type context.  Only scan is left."
test_basic_ops.py;32;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-10-02 09:26:42-04:00;645557f9ddce7f7aed3675cb925b5e2356fcab9a;"Merge pull request #3476 from abergeron/move_config  Multiple fixes preparing for multi-gpu"
test_conv_cuda_ndarray.py;28;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-10-02 09:26:42-04:00;645557f9ddce7f7aed3675cb925b5e2356fcab9a;""
test_conv_cuda_ndarray.py;18;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-10-02 09:26:42-04:00;645557f9ddce7f7aed3675cb925b5e2356fcab9a;""
opt.py;8;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-10-10 02:20:28+00:00;4814cd9973df83eb3b6ea3fbbd5744a0d1598dfb;"Merge pull request #3482 from abergeron/multi_gpu_new2  Multi-gpu support"
test_basic_ops.py;32;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-10-10 02:20:28+00:00;4814cd9973df83eb3b6ea3fbbd5744a0d1598dfb;""
__init__.py;35;ADD;Arnaud Bergeron;abergeron@gmail.com;2015-10-13 14:49:20-04:00;5bc35bc2cf844d5cc72029182ef1f13d1844f15b;"Add a transfer() method to explicit data transfers in the graph easy."
conv2d.py;28;ADD;Nicolas Ballas;ballas.n@gmail.com;2015-03-12 16:57:56-04:00;2451318a3e20ed50061daa2aae6f6c7dd3c6e556;"new interface, work in progress"
abstract_conv2d.py;38;DELETED;Nicolas Ballas;ballas.n@gmail.com;2015-04-24 13:40:18-04:00;dc6c058c5bf016542c5e43231cf738ea25242058;"update optim"
opt.py;8;DELETED;Julien Rebetez;julien.rebetez@heig-vd.ch;2015-10-16 13:45:58+02:00;0c12e4e5e06c3c31b2c48cc1b2b40c9bb8142f80;"Merge branch 'master' into optdb_contains"
test_basic_ops.py;32;DELETED;Julien Rebetez;julien.rebetez@heig-vd.ch;2015-10-16 13:45:58+02:00;0c12e4e5e06c3c31b2c48cc1b2b40c9bb8142f80;""
scan_opt.py;1099;ADD;carriepl;carrier.pierreluc@gmail.com;2015-10-19 13:01:16-04:00;87d5547651c1e10f3b58abdc783f7403eef60c4c;"Make ScanInplaceOptimizer handle GpuAlloc and GpuAllocEmpty from both backends"
scan_opt.py;1099;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2015-10-21 09:54:00-04:00;c8dc3dbef8e56c912aa010d734f3116d2b0a72fd;"Merge pull request #3524 from carriepl/scan_inplace_opt  Scan inplace opt"
__init__.py;35;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2015-10-27 12:06:38-04:00;3a190f98bb7371389cf2609a9bcfdedcd0fe71e0;"Merge pull request #3533 from abergeron/multi_gpu_followup  Multi gpu followup"
compiledir.py;374;ADD;Piotr Frankowski;frankowski.piotrek@gmail.com;2015-11-04 18:56:05+01:00;3b9975ebaa9424b195a67de872e86fffb3686127;"fix according to comments"
cc.py;621;ADD;Frederic;nouiz@nouiz.org;2015-11-26 10:05:06-05:00;20ae6a78409b745e6fda7bd741be00b5f768e9df;"Fix Theano cache/compilation interaction with c literal. We need to always consider them, not just when we generate the c code.  fix gh-3693"
cc.py;685;DELETED;Frederic;nouiz@nouiz.org;2015-11-26 10:05:06-05:00;20ae6a78409b745e6fda7bd741be00b5f768e9df;""
cc.py;1167;DELETED;Frederic;nouiz@nouiz.org;2015-11-26 10:05:06-05:00;20ae6a78409b745e6fda7bd741be00b5f768e9df;""
cc.py;621;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-11-30 21:02:03-05:00;5429c30a5c74877bf06ad6654aa40c21971bf3f7;"Merge pull request #3694 from nouiz/crash_cache_c_scalar  Crash cache c scalar"
cc.py;685;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-11-30 21:02:03-05:00;5429c30a5c74877bf06ad6654aa40c21971bf3f7;""
cc.py;1167;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2015-11-30 21:02:03-05:00;5429c30a5c74877bf06ad6654aa40c21971bf3f7;""
graph.py;429;ADD;Francesco Visin;fvisin@gmail.com;2015-11-05 19:09:16-05:00;968de8cd7125bfa6a6e6a2dfca20a2b74abe0a27;"Avoid __repr__ recursion"
nnet.py;664;ADD;fvisin;fvisin@gmail.com;2015-09-30 18:38:14-04:00;8b4470028afc03ed304bac499b6d57e3066a9728;"Add optimization for grad"
nnet.py;690;ADD;fvisin;fvisin@gmail.com;2015-09-30 18:38:14-04:00;8b4470028afc03ed304bac499b6d57e3066a9728;""
graph.py;429;ADD;abergeron;abergeron@gmail.com;2015-12-03 12:52:23-05:00;cca20bafbb270679d9d06b808682ac99bae3ed9f;"Merge pull request #3605 from fvisin/tag.test_value  Add print_test_value_by_default option"
conv.py;8;DELETED;Arnaud Bergeron;abergeron@gmail.com;2015-11-26 16:11:59-05:00;01219a35a76ad25f5097ddee6f10645847e1f7d3;"Remove GpuConv and everything that depends on it."
test_conv_cuda_ndarray.py;28;DELETED;Arnaud Bergeron;abergeron@gmail.com;2015-11-26 16:11:59-05:00;01219a35a76ad25f5097ddee6f10645847e1f7d3;""
test_op.py;257;ADD;Ramana.S;vxrram95@gmail.com;2015-12-09 23:21:17+05:18;4936e630c9d66f3fe25a4f093bda9baa4674de7e;"Test added, code made complaint with pep8 standards"
printing.py;42;DELETED;gw0 [http://gw.tnode.com/];gw.2015@tnode.com;2015-12-12 10:49:09+01:00;63d6fe679ee45d6da5f477f6dec5ba3df23a0e23;"Import pydot-ng with pydot as fallback."
__init__.py;8;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2015-12-15 09:08:48-05:00;458e1594c9407ac1fd2a7b6751c6ee2385c5d33f;"Merge pull request #3772 from gw0/feat-pydot-fallback  Import pydot-ng with pydot as fallback."
printing.py;42;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2015-12-15 09:08:48-05:00;458e1594c9407ac1fd2a7b6751c6ee2385c5d33f;""
conv.py;8;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2015-12-15 17:40:14-05:00;6d4633be6e5241a6744d6abbcdc600f35ab7ddc7;"Merge pull request #3737 from lamblin/gpuarray_abstractconv  Gpuarray abstractconv"
test_conv_cuda_ndarray.py;28;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2015-12-15 17:40:14-05:00;6d4633be6e5241a6744d6abbcdc600f35ab7ddc7;""
test_op.py;256;DELETED;Ramana.S;vxrram95@gmail.com;2015-12-17 10:07:11+05:18;07b2896eb502a920b3dfbb406f67608b533b8e28;"Compile theano function and assert"
nnet.py;756;DELETED;Arnaud Bergeron;abergeron@gmail.com;2016-01-18 11:20:33-05:00;0041ce67ff57dac12d82c049a9f6103e6b9fefae;"Remove the try .. except construct since it masked some errors in the opt."
nnet.py;788;DELETED;Arnaud Bergeron;abergeron@gmail.com;2016-01-18 11:20:33-05:00;0041ce67ff57dac12d82c049a9f6103e6b9fefae;""
nnet.py;756;DELETED;Francesco;fvisin@users.noreply.github.com;2016-01-18 11:30:19-05:00;9ad1ea03dbccc4cbe4fb7f545844349f02003c16;"Merge pull request #2 from abergeron/logsoftmax  More complete fix for the travis failures"
nnet.py;788;DELETED;Francesco;fvisin@users.noreply.github.com;2016-01-18 11:30:19-05:00;9ad1ea03dbccc4cbe4fb7f545844349f02003c16;""
__init__.py;599;ADD;Frederic Bastien;nouiz@nouiz.org;2016-02-05 11:51:24-05:00;adb02ace571898b7faef8b61d9792547af8e0dda;"Print cudnn version at the same time as cnmem usage"
__init__.py;70;ADD;Frederic Bastien;nouiz@nouiz.org;2016-02-05 11:55:20-05:00;9f691454d5edff903ac6241d833d515854d63ff2;"Print cudnn version when staring gpuarray back-end"
__init__.py;612;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2016-02-11 08:45:16-05:00;e9425be87bce525df5b69187839c31d6043ef70d;"Merge pull request #4000 from nouiz/cudnn_version  Cudnn version, print it, warn when too new, make mandatory in the new back-end."
__init__.py;80;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2016-02-11 08:45:16-05:00;e9425be87bce525df5b69187839c31d6043ef70d;""
configdefaults.py;1255;ADD;Arnaud Bergeron;abergeron@gmail.com;2016-02-19 14:02:18-05:00;3098ee055aa7907f2941231dfe3cb78107a2de03;"Move leftover flags that seemed forgotten."
blas.py;330;DELETED;Arnaud Bergeron;abergeron@gmail.com;2016-02-19 14:02:18-05:00;3098ee055aa7907f2941231dfe3cb78107a2de03;""
configdefaults.py;1259;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2016-02-22 11:38:19-05:00;6429c27f1859277ba4efb07772aee85417076276;"Merge pull request #4095 from abergeron/move_flags2  Move leftover flags"
blas.py;330;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2016-02-22 11:38:19-05:00;6429c27f1859277ba4efb07772aee85417076276;""
configdefaults.py;1259;ADD;Chinnadhurai Sankar;sankarch@kepler2.iro.umontreal.ca;2016-03-03 02:06:00-05:00;95de65ef2b8437bfdc798f3e0fe4abab9d468cbe;"Merge branch 'master' of git://github.com/Theano/Theano"
blas.py;322;DELETED;Chinnadhurai Sankar;sankarch@kepler2.iro.umontreal.ca;2016-03-03 02:06:00-05:00;95de65ef2b8437bfdc798f3e0fe4abab9d468cbe;""
test_opt.py;41;ADD;Frederic Bastien;nouiz@nouiz.org;2016-03-15 16:37:10-04:00;5a8f6d5db883a8f281741049b09bf7c83d6598a7;"Skip part of a test when scipy isn't there."
test_opt.py;41;ADD;abergeron;abergeron@gmail.com;2016-03-16 10:18:57-04:00;e1b37ea4044a9e06889ce9e0eb2651fcce877ff1;"Merge pull request #4240 from nouiz/test_wo_scipy  Fix test for release when scipy isn't there."
test_basic.py;3890;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-03-18 11:56:40-04:00;32645f1579d2aff1a4e0904cae6a0add9fc06218;"Fixes for gpuarray in DebugMode"
test_basic.py;3926;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-03-18 11:56:40-04:00;32645f1579d2aff1a4e0904cae6a0add9fc06218;""
test_basic.py;3890;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2016-03-18 14:44:45-04:00;260fc9a7af181dde0cd9c8f411bbdf3e4894f4c6;"Merge pull request #4258 from lamblin/fix_debugmode_dnn  Fixes for debugmode in dnn and gpuarray"
test_basic.py;3926;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2016-03-18 14:44:45-04:00;260fc9a7af181dde0cd9c8f411bbdf3e4894f4c6;""
test_opt.py;41;ADD;Chinnadhurai Sankar;sankarch@leto50.iro.umontreal.ca;2016-03-30 13:14:09-04:00;965e58d75e19c2ec77a79c783a38f94b82f3f436;"Merge branch 'master' of git://github.com/Theano/Theano"
test_basic.py;3890;DELETED;Chinnadhurai Sankar;sankarch@leto50.iro.umontreal.ca;2016-03-30 13:14:09-04:00;965e58d75e19c2ec77a79c783a38f94b82f3f436;""
test_basic.py;3926;DELETED;Chinnadhurai Sankar;sankarch@leto50.iro.umontreal.ca;2016-03-30 13:14:09-04:00;965e58d75e19c2ec77a79c783a38f94b82f3f436;""
blocksparse.py;17;ADD;Arnaud Bergeron;abergeron@gmail.com;2016-04-08 17:15:43-04:00;7479d0458f35e315cf2f1006e2b580e3ddd553bf;"First shot code for blocksparse on new backend."
blocksparse.py;17;DELETED;Arnaud Bergeron;abergeron@gmail.com;2016-04-12 16:27:53-04:00;eb4d52aa9b1a1ac58c5ff7ae20308c8561ea14f0;"Fix most of the problems in blocksparse."
extra_ops.py;10;ADD;kelvinxu;iamkelvinxu@gmail.com;2016-04-15 02:30:07-04:00;ce7d9c1ad30796fbf291624ee4b2507937e1d8f2;"first two kernels"
extra_ops.py;8;ADD;abergeron;abergeron@gmail.com;2016-04-21 13:58:53-04:00;72c972df02f4b53110ffe3777854622ec6f2bade;"Merge pull request #4410 from kelvinxu/convert_gpucumsum  Convert gpucumsum"
multinomial.py;7;ADD;Frederic Bastien;nouiz@nouiz.org;2016-04-21 16:16:47-04:00;3d62cf6ae48991e2eb59d45c3cd38c33a63b99b4;"Fix crash on computer without pygpu installed"
multinomial.py;7;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2016-04-27 15:38:49-04:00;5e5e5cc5581a88ab425b9bd73b7719efbd10f6d3;"Merge pull request #4413 from nouiz/harmdevries89-multinomial_newbackend  multinomial newbackend"
extra_ops.py;8;ADD;Chinnadhurai Sankar;sankarch@kepler3.iro.umontreal.ca;2016-04-30 16:08:39-04:00;5c9dcaf6d13fa205250213cc79ab71426b7b8b6c;"Merge branch 'master' of git://github.com/Theano/Theano"
multinomial.py;7;ADD;Chinnadhurai Sankar;sankarch@kepler3.iro.umontreal.ca;2016-04-30 16:08:39-04:00;5c9dcaf6d13fa205250213cc79ab71426b7b8b6c;""
test_opt.py;41;DELETED;Chiheb Trabelsi;chiheb.tr@gmail.com;2016-03-15 23:16:13-04:00;aa6c6a9194aaeef8386ff34658a09cd2255d0924;"test_opt.py has been modified in order to respect the flake8 style."
test_opt.py;41;DELETED;Xavier Bouthillier;xavier.bouthillier@gmail.com;2016-05-05 11:40:05-04:00;b69ad54d4407ab0b736452fe0817fbba8a2c56a7;"Merge pull request #4244 from ChihebTrabelsi/ccw2.0  flake8 sandbox/cuda/*.py"
__init__.py;37;ADD;abergeron;abergeron@gmail.com;2016-05-10 14:17:25-04:00;69338f338087d36ad4464900e387a199c183d580;"Merge pull request #4454 from slefrancois/gpu_out_sandbox  Move new GPU backend out of sandbox"
__init__.py;37;DELETED;abergeron;abergeron@gmail.com;2016-05-10 14:17:25-04:00;69338f338087d36ad4464900e387a199c183d580;""
__init__.py;89;ADD;Arnaud Bergeron;abergeron@gmail.com;2016-05-10 15:01:35-04:00;605da818850dccf71af02f3dbd271823843f7460;"Change the way the cudnn version is printed and also show how much memory is preallocated."
opt.py;4853;ADD;Frederic Bastien;nouiz@nouiz.org;2016-05-03 14:45:51-04:00;70e866cd39c0801b2150f8b14f260333f9ca755a;"Add opt Elemwise[EQ](Subtensor(Shape(x)), -N) -> Elemwise[zeros](X) that work around this comment by removing the re-inserted scan: https://github.com/Theano/Theano/pull/4356/files#r61901454"
__init__.py;89;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2016-05-10 23:07:38-04:00;f512a56007b465a8273ef9dba7041ad2635d7b25;"Merge pull request #4488 from abergeron/disable_preallocate  Make negative values for gpuarray.preallocate disable the allocation cache completely."
opt.py;4874;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2016-05-10 23:08:05-04:00;8c58dfb88ba58e22c3c6d75037c72dfab3475d4e;"Merge pull request #4463 from nouiz/scan_reintroduced_benchmark  Scan reintroduced benchmark"
__init__.py;37;ADD;Chinnadhurai Sankar;sankarch@kepler3.iro.umontreal.ca;2016-05-20 15:38:32-04:00;1a53098a18d96e9ef463e7c7a6be8c0ca1044768;"Merge branch 'master' of git://github.com/Theano/Theano"
__init__.py;90;ADD;Chinnadhurai Sankar;sankarch@kepler3.iro.umontreal.ca;2016-05-20 15:38:32-04:00;1a53098a18d96e9ef463e7c7a6be8c0ca1044768;""
test_opt.py;41;DELETED;Chinnadhurai Sankar;sankarch@kepler3.iro.umontreal.ca;2016-05-20 15:38:32-04:00;1a53098a18d96e9ef463e7c7a6be8c0ca1044768;""
__init__.py;37;DELETED;Chinnadhurai Sankar;sankarch@kepler3.iro.umontreal.ca;2016-05-20 15:38:32-04:00;1a53098a18d96e9ef463e7c7a6be8c0ca1044768;""
opt.py;4895;ADD;Chinnadhurai Sankar;sankarch@kepler3.iro.umontreal.ca;2016-05-20 15:38:32-04:00;1a53098a18d96e9ef463e7c7a6be8c0ca1044768;""
basic_ops.py;328;ADD;Arnaud Bergeron;abergeron@gmail.com;2016-06-02 18:33:31-04:00;feb5d37206d2d2d94581d9b393105d939c601edd;"Add CGpuKernelBase which merges the functionality of COp and GpuKernelBase."
opt.py;3211;DELETED;Frederic Bastien;nouiz@nouiz.org;2016-03-07 16:20:25-05:00;22105f7800153532a49fb1369215b827f741a237;"Repair some opt that need some digging for constant"
io.py;155;DELETED;Nan Rosemary Ke;rosemary.ke@west.cmu.edu;2016-06-12 23:34:09-04:00;15902fa6affb01ddeaac9d48fc3b0bdea2b435cd;"ccw3398"
io.py;155;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2016-06-14 08:43:43-04:00;9a61e1702aa552e1e6f96860b682c53629ea92ab;"Merge pull request #4619 from nke001/ccw3398_cpy  ccw3398"
io.py;155;DELETED;Chinnadhurai Sankar;sankarch@kepler3.iro.umontreal.ca;2016-06-14 15:48:10-04:00;958efe87826c20f25affba0976362b44db61d30b;"merged file"
equilibrium.py;91;DELETED;Chinnadhurai Sankar;sankarch@kepler3.iro.umontreal.ca;2016-06-10 19:22:26-04:00;70d8b3aa97b16a07716362ac879ae671559cfaa3;"fix bugs in doc strings/remove final set of flake8 errors"
equilibrium.py;91;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2016-06-20 09:42:25-04:00;c0b294ec4fd63ff34d13ab36ac2201dbae3a7897;"Merge pull request #4629 from chinnadhurai/ccw_4483_indent_fix  Ccw 4483 indent fix"
basic_ops.py;386;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-06-23 19:20:15-04:00;1b8b914918a35cc9c7800b972218a5bd4c9a5779;"Merge pull request #4584 from abergeron/gpua_doc  Add some documentation on how to write gpu ops."
opt.py;285;ADD;sentient07;vxrram95@gmail.com;2016-05-27 17:09:58+05:18;846cfabdc94c048f38c075c110c4339867c189d1;"Checking tensortype before creating new graph"
opt.py;285;DELETED;sentient07;vxrram95@gmail.com;2016-05-27 22:48:56+05:18;62696871fd23fbec99b97ab0cbe5d19df41f0953;"Fixed silly error"
var.py;479;ADD;Sina Honari;honaris@iro.umontreal.ca;2016-07-17 01:46:09-04:00;c098762027cffe8941631e85faff39ea57a69499;"Raising error for Indexing subtensor with a Boolean mask"
conf.py;54;ADD;Frederic Bastien;nouiz@nouiz.org;2016-09-01 14:43:33-04:00;bdb95adce27b0afd5428bab176ac1acc167bb03b;"Support new sphinx version without warning. Needed for our CI."
var.py;481;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-09-06 11:50:35-04:00;bef883ebeef268523b43d2ff7e9d8e404a4c8960;"Merge pull request #4750 from SinaHonari/issue4595  Raising error for Indexing subtensor with a Boolean mask"
formatting.py;20;ADD;Frederic Bastien;nouiz@nouiz.org;2016-09-08 13:01:04-04:00;e2f18cc2a9eaaa943de65d48ef295e3c6d549218;"Don't crash when pydot isn't there."
formatting.py;20;ADD;abergeron;abergeron@gmail.com;2016-09-09 15:17:12-04:00;78fe13548c509ebdbdfd0bd99debae3b7e6bdb03;"Merge pull request #4949 from nouiz/pydot  Don't crash when pydot isn't there."
conf.py;54;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2016-09-15 09:04:41-04:00;bd7bfba93ac6c9cf20c544732567cb94ba0aad27;"Merge pull request #4924 from nouiz/drop_old_version  Drop old version"
opt.py;404;ADD;sentient07;vxrram95@gmail.com;2016-08-27 02:17:24+02:00;c260ecf4d0ee83ecc45262def444b06262dd904b;"Cleanup #2"
opt.py;416;ADD;sentient07;vxrram95@gmail.com;2016-08-27 02:17:24+02:00;c260ecf4d0ee83ecc45262def444b06262dd904b;""
opt.py;404;DELETED;Frederic Bastien;nouiz@nouiz.org;2016-09-20 10:43:15-04:00;b44d2bf61fc17282a32f0d29ba8502f335cc914d;"Fix and revert stuff in this PR."
opt.py;416;DELETED;Frederic Bastien;nouiz@nouiz.org;2016-09-20 10:43:15-04:00;b44d2bf61fc17282a32f0d29ba8502f335cc914d;""
subtensor.py;530;ADD;Arnaud Bergeron;abergeron@gmail.com;2016-10-03 19:31:50-04:00;dcd7ee0d43f5b3eded3e1206b1fea9ab4492598b;"Fix case when indexing with a single array and some dimensions before the array are removed by indexes."
subtensor.py;538;ADD;Arnaud Bergeron;abergeron@gmail.com;2016-10-04 17:34:17-04:00;ff91f22e2d6271f1120819dcdc92f5e8ad6fd482;"Add some tests for silly numpy behaviour and make them pass."
subtensor.py;530;DELETED;Arnaud Bergeron;abergeron@gmail.com;2016-10-04 17:34:17-04:00;ff91f22e2d6271f1120819dcdc92f5e8ad6fd482;""
subtensor.py;537;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-10-05 21:59:06-04:00;2f0ab7918650e485695533e6c252900b22ac4927;"Merge pull request #4763 from abergeron/gpuadvsub  Gpuadvsub"
__init__.py;108;ADD;Arnaud Bergeron;abergeron@gmail.com;2016-08-30 18:00:06-04:00;4b94a81101dcf6a225713fada4b606ff21d08be6;"Create the cudnn handle on context initialization and pass it around."
__init__.py;103;DELETED;Arnaud Bergeron;abergeron@gmail.com;2016-08-30 18:00:06-04:00;4b94a81101dcf6a225713fada4b606ff21d08be6;""
dnn.py;48;ADD;Arnaud Bergeron;abergeron@gmail.com;2016-08-30 18:00:06-04:00;4b94a81101dcf6a225713fada4b606ff21d08be6;""
dnn.py;210;ADD;Arnaud Bergeron;abergeron@gmail.com;2016-08-30 18:00:06-04:00;4b94a81101dcf6a225713fada4b606ff21d08be6;""
__init__.py;108;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-10-17 20:50:58-04:00;3007bf7949d7cd67af0cc9402e344d7fea9effc6;"Merge pull request #4915 from abergeron/dnn_rnn2  Cudnn RNN bindings."
__init__.py;103;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-10-17 20:50:58-04:00;3007bf7949d7cd67af0cc9402e344d7fea9effc6;""
dnn.py;50;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-10-17 20:50:58-04:00;3007bf7949d7cd67af0cc9402e344d7fea9effc6;""
dnn.py;213;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-10-17 20:50:58-04:00;3007bf7949d7cd67af0cc9402e344d7fea9effc6;""
GpuMaxAndArgmax.py;14;ADD;notoraptor;stevenbocco@gmail.com;2016-11-01 11:38:19-04:00;218d006cfdf4cf0cd099c13938043aa89be7f9c3;"This is my proposal for GpuMaxAndArgmax (issue #1399).  GpuMaxAndArgmax op is implemented in a separate file in theano/gpuarray.  A test script has also been written.  To integrate this op in Theano, an optimization has been added to ttheano/gpuarray/opt.py."
reduction.py;12;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-11-14 16:03:23-05:00;3347480aaba47cbd99f4753e99476c24bd305fd3;"Merge pull request #5168 from notoraptor/master  This is my proposal for GpuMaxAndArgmax (issue #1399)."
cusolver.py;12;ADD;Yaroslav Ganin;ganin@skolkovotech.ru;2016-05-03 11:56:17-04:00;25fd044fbdb2723533e95bacba0dcf8e28b6ccf7;"GpuSolve is now based on CUSOLVER instead of CULA"
cusolver.py;20;ADD;Yaroslav Ganin;ganin@skolkovotech.ru;2016-05-03 11:56:17-04:00;25fd044fbdb2723533e95bacba0dcf8e28b6ccf7;""
solve.py;16;DELETED;Thomas George;georgeth@helios1.helios;2016-11-18 14:33:16-05:00;b8f3b638e086522aecbf0e47f9c227b7909a1e30;"implementation of cusolver solve for the non transpose case"
__init__.py;133;ADD;Ray Donnelly;mingw.android@gmail.com;2016-10-14 12:44:51+01:00;ab94990c14965216ccf384780d290539ac871bac;"Conda: Enable use of mingw-w64 g++ and mkl when not on PATH  Many Windows users avoid the command-line and are unfamiliar with env. vars. They can elect to use Anaconda/Miniconda Python as their system Python and in that case would not be able to take advantage of g++ or mkl.  This commit works around these issues by adding the appropriate values to os.environ['PATH'] if they are not already on PATH."
__init__.py;133;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2016-11-30 17:49:23-05:00;08b6405cb5abee64100226146102812104c4254a;"Merge pull request #5290 from mingwandroid/conda-fixes  Conda fixes"
test_basic.py;6807;DELETED;Benjamin Scellier;scellier@iro.umontreal.ca;2016-12-02 17:00:35-05:00;55596d1b72f2779ff1675b594c767af7832a095b;"various changes"
test_basic.py;6816;DELETED;Benjamin Scellier;scellier@iro.umontreal.ca;2016-12-02 17:00:35-05:00;55596d1b72f2779ff1675b594c767af7832a095b;""
test_basic.py;6824;DELETED;Benjamin Scellier;scellier@iro.umontreal.ca;2016-12-02 17:00:35-05:00;55596d1b72f2779ff1675b594c767af7832a095b;""
subtensor.py;31;DELETED;Benjamin Scellier;scellier@iro.umontreal.ca;2016-12-02 17:51:26-05:00;b18616bd0c62638415517dd9a1a9db6599682135;"remove legacy conditions of advanced_inc_subtensor"
subtensor.py;31;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-12-13 00:33:17+01:00;1f0f9126c4f1c01630c16c64c48ea9379df1bde0;"Merge pull request #5301 from bscellier/cleanup_numpy_min_version  Cleanup numpy min version"
test_basic.py;6807;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-12-13 00:33:17+01:00;1f0f9126c4f1c01630c16c64c48ea9379df1bde0;""
test_basic.py;6816;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-12-13 00:33:17+01:00;1f0f9126c4f1c01630c16c64c48ea9379df1bde0;""
test_basic.py;6824;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-12-13 00:33:17+01:00;1f0f9126c4f1c01630c16c64c48ea9379df1bde0;""
linalg.py;11;ADD;Thomas George;tfjgeorge@gmail.com;2016-12-21 05:04:08-05:00;d825302f8cd394419c9e6e17b26081b7d799b38e;"fixed pygpu autodoc"
linalg.py;11;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2016-12-22 09:58:32-05:00;276b9e51e342ef5cfe02b3b528fd7312bfba6a65;"Merge pull request #5320 from tfjgeorge/cusolver-ccw  Gpu op for solve using cusolver (CCW #5191)"
linalg.py;18;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2016-12-22 09:58:32-05:00;276b9e51e342ef5cfe02b3b528fd7312bfba6a65;""
__init__.py;65;ADD;Arnaud Bergeron;abergeron@gmail.com;2016-11-30 20:14:22-05:00;ff120e152a4c9a9664501015d343e6d565bd0b12;"Now that we have dicts on GpuContext get rid of the horrible prop hack."
__init__.py;94;DELETED;Arnaud Bergeron;abergeron@gmail.com;2016-11-30 20:14:22-05:00;ff120e152a4c9a9664501015d343e6d565bd0b12;""
dnn.py;214;DELETED;Arnaud Bergeron;abergeron@gmail.com;2016-11-30 20:14:22-05:00;ff120e152a4c9a9664501015d343e6d565bd0b12;""
__init__.py;61;DELETED;Frederic Bastien;nouiz@nouiz.org;2016-12-21 14:52:43-05:00;e3af576a8a0ebf9255add0cd4c24b5e90b1f0583;"Fix cudnn init in the new back-end. Remove duplicate place where we store cudnn version at the same time."
__init__.py;104;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-12-23 19:23:04-05:00;c6ffa460d43b6650aefbe7939f332084caafeaa4;"Merge pull request #5357 from nouiz/abergeron-dnn_mem  Select the dnn convolution algorithm using actually available memory"
dnn.py;214;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2016-12-23 19:23:04-05:00;c6ffa460d43b6650aefbe7939f332084caafeaa4;""
theano_nose.py;52;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-01-18 09:08:34-05:00;598991d76d2764ab7411c5dc5a2dcc59e3ef55ea;"Merge pull request #5412 from notoraptor/fix-theano-scripts-on-windows  Fix theano scripts on windows"
opt.py;2437;DELETED;Reyhane Askari;r.askari.hemmat@gmail.com;2017-01-18 13:14:14-05:00;d1f655c4a7358bead50d15eb37909d40f709677d;"removed pruner function of EquilibriumOptimizer class"
opt.py;2437;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-01-19 13:46:28-05:00;6086dc1c49318dfce9240cf7a6fbe8d1f147480b;"Merge pull request #5428 from ReyhaneAskari/5125  removed pruner function of EquilibriumOptimizer class"
cc.py;1418;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-02-09 18:38:22-05:00;56a71e79df211a6bb71bbe3a5e38a9773c342ad6;"Fix cache version for CAReduce  Fix CAReduce.c_code_cache_version_apply Calling `append` on a tuple raised AttributeError, which was mistaken for a missing `c_code...` function altogether, and the version was ignored."
cc.py;1418;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-02-13 00:13:46-05:00;e829ba4fb27b5ab55334d5e0d7bbbc79f3d86924;"Merge pull request #5527 from lamblin/ccw_numpy_travis  validate numpy1.12 compatibility changes"
aa.py;215;DELETED;Frederic Bastien;nouiz@nouiz.org;2017-02-23 08:04:15-05:00;a9784765f5748ef9219d02bab2d6b5368efa2179;"Remove the old benchmark directory. They use the module system that was removed years ago. Now the benchmark are outside Theano."
gen_graph.py;10;DELETED;Frederic Bastien;nouiz@nouiz.org;2017-02-23 08:04:15-05:00;a9784765f5748ef9219d02bab2d6b5368efa2179;""
aa.py;215;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-02-23 11:23:13-05:00;fba3e8886c05e5abcd4f38d59e66c9c10b6c4e52;"Merge pull request #5609 from nouiz/cleanup  Remove the old benchmark directory."
gen_graph.py;10;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-02-23 11:23:13-05:00;fba3e8886c05e5abcd4f38d59e66c9c10b6c4e52;""
opt.py;2082;DELETED;Frederic Bastien;nouiz@nouiz.org;2017-03-17 12:05:42-04:00;29a3778d93f5ea577edfa423ac8bee0ce2e5b071;"Convert an hidden linear operation into a constant time operation as was done in EquilibriumOptimizer"
opt.py;2210;DELETED;Frederic Bastien;nouiz@nouiz.org;2017-03-17 12:05:42-04:00;29a3778d93f5ea577edfa423ac8bee0ce2e5b071;""
test_basic.py;5637;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-03-10 01:34:05-05:00;bcc994ca33198b3a6a26962c10782d0b620f0693;"Flake8 on test_basic.py (finally)"
test_basic.py;5642;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-03-10 01:34:05-05:00;bcc994ca33198b3a6a26962c10782d0b620f0693;""
test_basic.py;7095;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-03-10 01:34:05-05:00;bcc994ca33198b3a6a26962c10782d0b620f0693;""
test_basic.py;5637;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-03-20 08:54:34-04:00;898d146d1ce10d4851ff1aa93a791e9f6f4a4759;"Merge pull request #5698 from lamblin/fix_pep8  Fix pep8"
test_basic.py;5642;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-03-20 08:54:34-04:00;898d146d1ce10d4851ff1aa93a791e9f6f4a4759;""
test_basic.py;7095;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-03-20 08:54:34-04:00;898d146d1ce10d4851ff1aa93a791e9f6f4a4759;""
opt.py;2096;DELETED;abergeron;abergeron@gmail.com;2017-03-23 13:15:05-04:00;240635e086535160c7ef0e7096f14430045de86e;"Merge pull request #5739 from nouiz/scan  Optimization speed up"
opt.py;2224;DELETED;abergeron;abergeron@gmail.com;2017-03-23 13:15:05-04:00;240635e086535160c7ef0e7096f14430045de86e;""
opt.py;2096;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-03-28 09:28:10-04:00;839fa93ba4794b67b21116e9aec18d1774ee2fb0;"Merge branch 'master' into ipT_grad"
opt.py;2224;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-03-28 09:28:10-04:00;839fa93ba4794b67b21116e9aec18d1774ee2fb0;""
wrapper.py;190;ADD;notoraptor;stevenbocco@gmail.com;2017-02-23 15:59:43-05:00;8160671abbddd497219ea4eccb8d8632154a4d50;"Implement a struct generator for wrapping ops params."
wrapper.py;202;ADD;notoraptor;stevenbocco@gmail.com;2017-02-23 15:59:43-05:00;8160671abbddd497219ea4eccb8d8632154a4d50;""
wrapper.py;214;ADD;notoraptor;stevenbocco@gmail.com;2017-02-23 15:59:43-05:00;8160671abbddd497219ea4eccb8d8632154a4d50;""
wrapper.py;226;ADD;notoraptor;stevenbocco@gmail.com;2017-02-23 15:59:43-05:00;8160671abbddd497219ea4eccb8d8632154a4d50;""
wrapper.py;235;ADD;notoraptor;stevenbocco@gmail.com;2017-02-23 15:59:43-05:00;8160671abbddd497219ea4eccb8d8632154a4d50;""
wrapper.py;244;ADD;notoraptor;stevenbocco@gmail.com;2017-02-23 15:59:43-05:00;8160671abbddd497219ea4eccb8d8632154a4d50;""
wrapper.py;253;ADD;notoraptor;stevenbocco@gmail.com;2017-02-23 15:59:43-05:00;8160671abbddd497219ea4eccb8d8632154a4d50;""
op.py;1411;ADD;notoraptor;stevenbocco@gmail.com;2017-03-28 09:50:11-04:00;0ad8d9fd92185151043d82a83467edd4e2bf6673;"c_element_type now raises MethodNotDefined. Update default get_op_params() to take account of it."
basic_ops.py;26;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;"Delete sandbox.cuda."
cula.py;12;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
cula.py;20;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
elemwise.py;80;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
nvcc_compiler.py;399;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
opt.py;102;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
test_basic_ops.py;377;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
test_basic_ops.py;455;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
test_conv_cuda_ndarray.py;21;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
test_cuda_ndarray.py;51;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
test_cuda_ndarray.py;552;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
test_cuda_ndarray.py;563;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
test_cuda_ndarray.py;921;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
test_cuda_ndarray.py;954;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
test_cuda_ndarray.py;960;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
test_cuda_ndarray.py;1000;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
test_cuda_ndarray.py;1006;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
test_tensor_op.py;110;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
test_tensor_op.py;115;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
walltime.py;22;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
var.py;17;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 17:28:14-04:00;9dcf3f4c1c40031fb6aa35a0213a72e4f037e434;""
debugmode.py;1204;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-03-28 18:49:03-04:00;cf7d068809973837810852a24c773106acfb497f;"Remove tentacles in compile."
pycuda_init.py;48;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-29 15:26:08-04:00;9cde027af9e8d8ea11751e960e670b2406a36018;"Remove tentacles in misc."
test_pycuda_utils.py;54;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-29 15:26:08-04:00;9cde027af9e8d8ea11751e960e670b2406a36018;""
test_pycuda_utils.py;72;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-29 15:26:08-04:00;9cde027af9e8d8ea11751e960e670b2406a36018;""
test_pycuda_utils.py;78;DELETED;Arnaud Bergeron;abergeron@gmail.com;2017-03-29 15:26:08-04:00;9cde027af9e8d8ea11751e960e670b2406a36018;""
op.py;1412;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-05 16:08:24-04:00;8e29249361c2177969d4101163b3dca4f1a7bec1;"Merge pull request #5612 from notoraptor/make-structs  Implement a struct generator for wrapping op params in Python and C codes."
params_type.py;241;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-05 16:08:24-04:00;8e29249361c2177969d4101163b3dca4f1a7bec1;""
params_type.py;253;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-05 16:08:24-04:00;8e29249361c2177969d4101163b3dca4f1a7bec1;""
params_type.py;265;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-05 16:08:24-04:00;8e29249361c2177969d4101163b3dca4f1a7bec1;""
params_type.py;277;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-05 16:08:24-04:00;8e29249361c2177969d4101163b3dca4f1a7bec1;""
params_type.py;286;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-05 16:08:24-04:00;8e29249361c2177969d4101163b3dca4f1a7bec1;""
params_type.py;295;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-05 16:08:24-04:00;8e29249361c2177969d4101163b3dca4f1a7bec1;""
params_type.py;304;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-05 16:08:24-04:00;8e29249361c2177969d4101163b3dca4f1a7bec1;""
test_types.py;150;ADD;notoraptor;stevenbocco@gmail.com;2017-03-14 11:20:42-04:00;723addd1c9b5551bbd42b3c796cbea8ed8e52360;"Add new abstract attribute `enum` in COp that will be used by get_op_params() to auto-generate macros for the op.  Add two methods to help create enums quickly.  Add a test for this new feature.  Simplify code.  Add new op param types `EnumType` and `EnumList`.  This replaces the previous implementation.  C macros are created into `EnumType.c_support_code()`.  Examples added in gof/tests/test_types.  Flake8."
test_types.py;157;ADD;notoraptor;stevenbocco@gmail.com;2017-03-14 11:20:42-04:00;723addd1c9b5551bbd42b3c796cbea8ed8e52360;""
test_types.py;165;ADD;notoraptor;stevenbocco@gmail.com;2017-03-14 11:20:42-04:00;723addd1c9b5551bbd42b3c796cbea8ed8e52360;""
test_types.py;192;ADD;notoraptor;stevenbocco@gmail.com;2017-03-28 10:54:24-04:00;0f2d75bec8551935854150537142f38f5c9a411d;"Fix typos and move tests into a class."
test_types.py;199;ADD;notoraptor;stevenbocco@gmail.com;2017-03-28 10:54:24-04:00;0f2d75bec8551935854150537142f38f5c9a411d;""
test_types.py;194;DELETED;notoraptor;stevenbocco@gmail.com;2017-03-28 10:54:24-04:00;0f2d75bec8551935854150537142f38f5c9a411d;""
test_types.py;209;DELETED;notoraptor;stevenbocco@gmail.com;2017-03-28 10:54:24-04:00;0f2d75bec8551935854150537142f38f5c9a411d;""
debugmode.py;1204;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;"Merge pull request #5814 from abergeron/rm_-r  Remove the old backend and all of its tentacles"
pycuda_init.py;48;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_pycuda_utils.py;54;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_pycuda_utils.py;72;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_pycuda_utils.py;78;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
basic_ops.py;26;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
cula.py;12;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
cula.py;20;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
elemwise.py;80;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
nvcc_compiler.py;399;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
opt.py;102;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_basic_ops.py;377;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_basic_ops.py;455;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_conv_cuda_ndarray.py;21;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_cuda_ndarray.py;51;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_cuda_ndarray.py;552;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_cuda_ndarray.py;563;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_cuda_ndarray.py;921;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_cuda_ndarray.py;954;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_cuda_ndarray.py;960;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_cuda_ndarray.py;1000;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_cuda_ndarray.py;1006;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_tensor_op.py;110;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_tensor_op.py;115;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
walltime.py;22;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
var.py;17;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 08:44:47-04:00;72d2cbdc82c6a4afec690fcc744c535b81e5e250;""
test_types.py;192;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 15:56:49-04:00;00935985d02f32c4bc6b8e140b0a6d03a8c4972c;"Merge pull request #5710 from notoraptor/create-c-constants-in-cops  Implement new op param type `EnumType`"
test_types.py;199;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 15:56:49-04:00;00935985d02f32c4bc6b8e140b0a6d03a8c4972c;""
test_types.py;207;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-12 15:56:49-04:00;00935985d02f32c4bc6b8e140b0a6d03a8c4972c;""
params_type.py;413;ADD;notoraptor;stevenbocco@gmail.com;2017-04-07 16:03:30-04:00;42e7ed18f4b51e4e843866807ecc50b2234b46ea;"Extend ParamsType: handle enumerations types.  Add public:  * has_type()  * get_field()  * get_enum()  * enum_from_alias()  * get_params()  Update documentation for ParamsType."
test_params_type.py;220;ADD;notoraptor;stevenbocco@gmail.com;2017-04-07 16:04:33-04:00;1b65de9a31add32f9cc4d3c541cd70317f928631;"Update tests for ParamsType. Update ParamsType usage in `theano/gof/op.py`."
params_type.py;534;ADD;notoraptor;stevenbocco@gmail.com;2017-04-07 16:59:19-04:00;3654195c4c214690e8201fa307342d871bb74a95;"**Take into account c_support_code() for types in a ParamsType**  Important update, necessary to make enums inside ParamsType work correctly with Python 3 (as we need enums C support code for PyInt_AsLong/PyLong_AsLong support)."
debugmode.py;245;DELETED;Frederic Bastien;nouiz@nouiz.org;2017-03-16 09:54:51-04:00;e4a5bf7d5d692b68dcbb1bae1415c814cf7e89d3;"Move BadOptimization error to allow to reuse"
debugmode.py;263;DELETED;Frederic Bastien;nouiz@nouiz.org;2017-03-16 09:54:51-04:00;e4a5bf7d5d692b68dcbb1bae1415c814cf7e89d3;""
debugmode.py;301;DELETED;Frederic Bastien;nouiz@nouiz.org;2017-03-16 09:54:51-04:00;e4a5bf7d5d692b68dcbb1bae1415c814cf7e89d3;""
toolbox.py;128;ADD;Frederic Bastien;nouiz@nouiz.org;2017-03-16 09:54:51-04:00;e4a5bf7d5d692b68dcbb1bae1415c814cf7e89d3;""
toolbox.py;146;ADD;Frederic Bastien;nouiz@nouiz.org;2017-03-16 09:54:51-04:00;e4a5bf7d5d692b68dcbb1bae1415c814cf7e89d3;""
toolbox.py;184;ADD;Frederic Bastien;nouiz@nouiz.org;2017-03-16 09:54:51-04:00;e4a5bf7d5d692b68dcbb1bae1415c814cf7e89d3;""
test_debugmode.py;303;ADD;Frederic Bastien;nouiz@nouiz.org;2017-04-13 13:27:38-04:00;f08a0528a947e99370b68ef981f9c9fb49b96e20;"Add test that we can reraise and extend the error msg of BadOptimization"
debugmode.py;245;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-04-17 14:13:50-04:00;388805f946685e86225cdf602eb8a4f0059f9667;"Merge pull request #5716 from nouiz/err  Better error message when an opt make an invalide replace."
debugmode.py;263;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-04-17 14:13:50-04:00;388805f946685e86225cdf602eb8a4f0059f9667;""
debugmode.py;301;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-04-17 14:13:50-04:00;388805f946685e86225cdf602eb8a4f0059f9667;""
test_debugmode.py;302;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-04-17 14:13:50-04:00;388805f946685e86225cdf602eb8a4f0059f9667;""
toolbox.py;142;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-04-17 14:13:50-04:00;388805f946685e86225cdf602eb8a4f0059f9667;""
toolbox.py;160;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-04-17 14:13:50-04:00;388805f946685e86225cdf602eb8a4f0059f9667;""
toolbox.py;198;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-04-17 14:13:50-04:00;388805f946685e86225cdf602eb8a4f0059f9667;""
params_type.py;418;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-18 10:37:55-04:00;4025a2dcf35a17c3b4f1acaf65b16f25d79a2f28;"Merge pull request #5755 from notoraptor/op-param-gpudnnsoftmax  Use Op params for GpuDnnSoftmax"
params_type.py;535;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-18 10:37:55-04:00;4025a2dcf35a17c3b4f1acaf65b16f25d79a2f28;""
test_params_type.py;220;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-04-18 10:37:55-04:00;4025a2dcf35a17c3b4f1acaf65b16f25d79a2f28;""
test_type.py;67;ADD;Frederic Bastien;nouiz@nouiz.org;2017-04-18 16:34:13-04:00;49e0964c32d1b4ebcac123979b8e73ee91c649ad;"By default, do not put scalar shared variable on the GPU to do like what the optimizer do."
test_type.py;67;DELETED;Frederic Bastien;nouiz@nouiz.org;2017-04-19 10:31:40-04:00;21ad078278f5cc3f8df6806a84eeb87d58737743;"Do code review"
six.py;97;DELETED;morrme;morrme@users.noreply.github.com;2017-05-15 09:44:37-05:00;a21517db083a4ebfeca12eb69ecd81a7fe79114d;"remove theano/compat/six.py   Closes: #5761"
six.py;196;DELETED;morrme;morrme@users.noreply.github.com;2017-05-15 09:44:37-05:00;a21517db083a4ebfeca12eb69ecd81a7fe79114d;""
six.py;97;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-05-15 17:13:57-04:00;2b3de3e408754fde05a8c63a7234abc979d47476;"Merge pull request #5944 from morrme/remove-six  remove theano/compat/six.py"
six.py;196;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-05-15 17:13:57-04:00;2b3de3e408754fde05a8c63a7234abc979d47476;""
opt.py;5753;ADD;Frederic Bastien;nouiz@nouiz.org;2017-05-15 16:37:00-04:00;79ccac56f8b65f581e568e689f9f0b1c31eeeedc;"Small code refactor to remove duplicate code. This make sure the new cast is also done in both branch."
opt.py;5740;DELETED;Frederic Bastien;nouiz@nouiz.org;2017-05-15 16:37:00-04:00;79ccac56f8b65f581e568e689f9f0b1c31eeeedc;""
opt.py;5760;DELETED;Frederic Bastien;nouiz@nouiz.org;2017-05-15 16:37:00-04:00;79ccac56f8b65f581e568e689f9f0b1c31eeeedc;""
opt.py;5755;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-05-25 08:29:27-04:00;177cc884464310a848a9719342480f5af70ff766;"Merge pull request #5908 from nouiz/compute_test_value  crash fix and opt warning fix(make opt apply)"
opt.py;5727;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-05-25 08:29:27-04:00;177cc884464310a848a9719342480f5af70ff766;""
opt.py;5746;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-05-25 08:29:27-04:00;177cc884464310a848a9719342480f5af70ff766;""
opt.py;5755;ADD;xiaoqie;xiaoqie108@gmail.com;2017-06-01 10:55:12+08:00;5d3433c73c7f24278b44825c87a9da6b128a604c;"Merge branch 'master' of https://github.com/Theano/Theano into gpureduce-fix"
opt.py;5727;DELETED;xiaoqie;xiaoqie108@gmail.com;2017-06-01 10:55:12+08:00;5d3433c73c7f24278b44825c87a9da6b128a604c;""
opt.py;5746;DELETED;xiaoqie;xiaoqie108@gmail.com;2017-06-01 10:55:12+08:00;5d3433c73c7f24278b44825c87a9da6b128a604c;""
subtensor.py;658;ADD;Shawn Tan;shawn@wtf.sg;2017-04-22 13:40:51-04:00;d2cd02d0fba527c33ad3d8786b439568f2d3aa95;"Initial additions for `GpuAdvancedIncSubtensor` - `theano/gpuarray/opt.py` added optimisation to include new op - `theano/gpuarray/subtensor.py` added op - `theano/gpuarray/tests/test_subtensor.py` added simple test case"
subtensor.py;650;DELETED;Shawn Tan;shawn@wtf.sg;2017-05-29 20:59:32-04:00;80a1017d13bdbae79b619bbb4ae6eb7da9c53e60;"Modifications according to review comments"
test_dnn.py;31;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-07-10 15:25:03-04:00;919b5b0ea9c456c38962cd0dbc04cd86dc08d862;"Add test for noncontiguous strides."
test_dnn.py;31;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-07-14 18:47:29-04:00;ebf8f12a0038b10bf7784f30afa4976bb9405d61;"Merge pull request #6116 from abergeron/dnn_redux2  Use GpuDnnReduction to replace GpuMaxAndArgmax when possible."
config.py;14;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-07-19 12:38:11-04:00;331943ad6d15408fad130967fe0c3002c585f8ca;"Skip the gpu tests if the gpu can't be initialized."
subtensor.py;546;DELETED;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-07-19 14:21:42-04:00;2fbbe1380c3cbab8396e4aaa3f06087b370a2a85;"Fix the logic for where to put axes back"
subtensor.py;546;DELETED;abergeron;bergearn@iro.umontreal.ca;2017-07-20 11:30:36-04:00;810a4165e1794b4629b1a9da01fabdae9c6e9f24;"Merge pull request #6171 from lamblin/fix_gpuadvidx  Fix for GpuAdvancedIndexing"
config.py;14;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2017-07-20 12:30:18-04:00;0e99b3ad438f2ef6273a9266640b13d965de86f0;"Merge pull request #6170 from abergeron/skip_gpu  Fix some problems with the GPU"
linalg.py;39;ADD;Juan Camilo Gamboa Higuera;juancamilog@gmail.com;2017-07-20 22:24:56-04:00;6b8db8e8973cb79ed40832732aaaee16ba15ddc0;"Added GpuCublasTriangularSolve and the associated lifter optimizations"
linalg.py;39;ADD;abergeron;bergearn@iro.umontreal.ca;2017-08-01 12:39:07-04:00;76e434ad6aa05ee8db34245072f7bc4dd2f91fcb;"Merge pull request #6182 from juancamilog/cublas_triangular_solve  Added GpuCublasTriangularSolve and the associated lifter optimizations"
destroyhandler.py;403;ADD;Frederic Bastien;nouiz@nouiz.org;2017-08-07 21:06:05-04:00;5e0cc2b7c89da35da27beb3302034d6befa9135d;"Use the big structure when it is there to prevent investigating the graph."
var.py;471;DELETED;Gijs van Tulder;gvtulder@gmail.com;2017-07-28 09:45:17+02:00;a01940c5376cff8229adbed6a859342f70e40405;"Add support for boolean indexing."
subtensor.py;2150;ADD;Gijs van Tulder;gvtulder@gmail.com;2017-08-08 12:26:35+02:00;a9a0d5aaca6bb902505b32652f7cd28b7da670ef;"New op AdvancedBooleanSubtensor."
destroyhandler.py;404;ADD;abergeron;bergearn@iro.umontreal.ca;2017-08-14 15:36:14-04:00;e08217601053a3248e60527a6583bced13373da6;"Merge pull request #6000 from ReyhaneAskari/new_destroy_handler  New destroy handler"
subtensor.py;2146;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-08-15 11:43:45-04:00;5c92b461399bd8d3896b5e40b21cdb619490e5a9;"Merge pull request #6207 from gvtulder/f-bool-indexing  Add support for boolean indexing"
var.py;471;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-08-15 11:43:45-04:00;5c92b461399bd8d3896b5e40b21cdb619490e5a9;""
config.py;14;DELETED;Frederic Bastien;nouiz@nouiz.org;2017-09-12 15:30:21-04:00;79582f253a0e4478f804c9e8e182b756bd144ac8;"Give more information why we skipped a test."
config.py;14;DELETED;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-14 09:38:47-04:00;6c6b8c4315e5a471954d3a66dc2871f781fb14e3;"Merge pull request #6405 from yikangshen/test_MRG_random_stream_target  test MRG random stream with device=cuda and target=cpu"
_version.py;156;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;"Use versioneer."
_version.py;490;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;""
_version.py;509;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;""
_version.py;515;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;""
versioneer.py;330;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;""
versioneer.py;576;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;""
versioneer.py;910;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;""
versioneer.py;929;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;""
versioneer.py;935;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;""
versioneer.py;968;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;""
versioneer.py;1148;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;""
versioneer.py;1439;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;""
versioneer.py;1447;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;""
versioneer.py;1458;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;""
versioneer.py;1467;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;""
versioneer.py;1752;ADD;Arnaud Bergeron;abergeron@gmail.com;2017-09-14 14:03:36-04:00;2da42cdfd3300c3e2dd30fbbb0515dc1a653255c;""
_version.py;156;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;"Merge pull request #6415 from abergeron/conda_pkgs  Add the setup to build conda packages"
_version.py;490;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;""
_version.py;509;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;""
_version.py;515;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;""
versioneer.py;330;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;""
versioneer.py;576;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;""
versioneer.py;910;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;""
versioneer.py;929;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;""
versioneer.py;935;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;""
versioneer.py;968;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;""
versioneer.py;1148;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;""
versioneer.py;1439;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;""
versioneer.py;1447;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;""
versioneer.py;1458;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;""
versioneer.py;1467;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;""
versioneer.py;1752;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-09-15 17:18:43-04:00;6e1aaa8ae4b67a7ed6b0e86447e7a15c4dfea33f;""
_version.py;156;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;"Merge branch 'master' of github.com:Theano/Theano into upsamp2"
_version.py;490;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
_version.py;509;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
_version.py;515;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
config.py;14;DELETED;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
versioneer.py;330;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
versioneer.py;576;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
versioneer.py;910;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
versioneer.py;929;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
versioneer.py;935;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
versioneer.py;968;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
versioneer.py;1148;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
versioneer.py;1439;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
versioneer.py;1447;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
versioneer.py;1458;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
versioneer.py;1467;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
versioneer.py;1752;ADD;erakra;erraqabi@gmail.com;2017-09-19 15:30:54-04:00;c06821147ecdd9ef837369b61d75c7e5cbb9da9d;""
test_elemwise.py;10;ADD;Frederic Bastien;nouiz@nouiz.org;2017-09-26 18:00:11-04:00;6c24e0ecf35a44526d6724f4c80dcfff874c24bf;"Fix import crash when no scipy and skip test"
test_elemwise.py;28;ADD;Frederic Bastien;nouiz@nouiz.org;2017-09-27 09:18:19-04:00;6114635c1166d16d688d62f0d73d438280d34f93;"flake8"
test_elemwise.py;10;DELETED;Frederic Bastien;nouiz@nouiz.org;2017-09-27 09:18:19-04:00;6114635c1166d16d688d62f0d73d438280d34f93;""
test_elemwise.py;28;ADD;notoraptor;notoraptor@users.noreply.github.com;2017-09-27 13:24:36-04:00;b56a541cf132b5959e2ab10f96733374b3a1c693;"Merge pull request #6446 from nouiz/no_scipy_tests  Fix opt crash and crash/tests when SciPy is not there."
_version.py;156;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;"changes from lamblinp"
_version.py;490;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
_version.py;509;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
_version.py;515;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
config.py;14;DELETED;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
test_elemwise.py;28;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
versioneer.py;330;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
versioneer.py;576;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
versioneer.py;910;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
versioneer.py;929;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
versioneer.py;935;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
versioneer.py;968;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
versioneer.py;1148;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
versioneer.py;1439;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
versioneer.py;1447;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
versioneer.py;1458;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
versioneer.py;1467;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
versioneer.py;1752;ADD;Faruk-Ahmed;faruk.ahmed.91@gmail.com;2017-09-28 13:22:56-04:00;a8e4f8dc27f48a1f95b31ad1ebc7ff1234f5f311;""
check_dnn.py;539;ADD;notoraptor;stevenbocco@gmail.com;2017-06-20 15:25:44-04:00;c1cabda5ef72d889ca15183bcba5b2ba3e214394;"Add support for special test cases. Add a first special test case for conv 2d fwd."
check_dnn_conv.py;773;ADD;Frédéric Bastien;frederic.bastien@gmail.com;2017-10-18 11:13:21-04:00;5561f5d60ea872a61c7d2fca4833a240314f5f96;"Merge pull request #5932 from notoraptor/tests-for-cudnn  Add a Python script to help run more exhaustive cuDNN algorithms tests"
configdefaults.py;1252;ADD;Arnaud Bergeron;abergeron@gmail.com;2018-03-29 13:53:53-04:00;dc3c52f0b237c1808978831ea348fe0a86785f05;"Don't ask for MKL_THREADING_LAYER if numpy is fixed."
configdefaults.py;1252;ADD;Pascal Lamblin;lamblinp@iro.umontreal.ca;2018-04-10 14:30:33-04:00;684ccca03c7f0c30b6ae5da9cd5d5c332809fc4b;"Merge pull request #6589 from abergeron/mkl_fixed  Don't ask for MKL_THREADING_LAYER=GNU if NumPy is fixed"
