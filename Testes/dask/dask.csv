Filename;Linha;Tipo;Autor;Email;Data;Hash;Commit
obj.py;53;ADD;Matthew Rocklin;mrocklin@gmail.com;2014-12-23 18:41:27-08:00;8b24591010b026b3b21c017973937d7c2cac6d72;"add Array object"
obj.py;58;ADD;Matthew Rocklin;mrocklin@gmail.com;2014-12-23 18:41:27-08:00;8b24591010b026b3b21c017973937d7c2cac6d72;""
obj.py;215;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-01-20 18:52:57-08:00;6c0e9cf89bd5ccb3439fa591004c969841743545;"dask: handle broadcasts and numba separately  This resolves a core dump"
obj.py;215;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-01-28 13:04:26-08:00;755f3a4253818d79aaedb231029e0427e57da20e;"Merge pull request #11 from mrocklin/slicing  Slicing"
blaze.py;53;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-01-28 15:35:37-08:00;c31f872d57ef6e8919ae02716d6c791cbd7ac192;"refactor array stuff into array module"
into.py;26;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-01-28 15:35:37-08:00;c31f872d57ef6e8919ae02716d6c791cbd7ac192;""
into.py;31;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-01-28 15:35:37-08:00;c31f872d57ef6e8919ae02716d6c791cbd7ac192;""
obj.py;85;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-01-28 15:35:37-08:00;c31f872d57ef6e8919ae02716d6c791cbd7ac192;""
obj.py;90;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-01-28 15:35:37-08:00;c31f872d57ef6e8919ae02716d6c791cbd7ac192;""
obj.py;215;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-01-28 15:35:37-08:00;c31f872d57ef6e8919ae02716d6c791cbd7ac192;""
test_dot.py;31;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-01-28 16:14:42-08:00;b825cc601c04ea3c55be90b832cd0671c05a98de;"don't fail if pydot isn't present"
blaze.py;53;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-01-28 16:37:28-08:00;aab922d60dea883c6642d7d336edc65b06803c98;"Merge pull request #14 from mrocklin/refactor  Refactor"
into.py;26;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-01-28 16:37:28-08:00;aab922d60dea883c6642d7d336edc65b06803c98;""
into.py;31;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-01-28 16:37:28-08:00;aab922d60dea883c6642d7d336edc65b06803c98;""
obj.py;85;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-01-28 16:37:28-08:00;aab922d60dea883c6642d7d336edc65b06803c98;""
obj.py;90;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-01-28 16:37:28-08:00;aab922d60dea883c6642d7d336edc65b06803c98;""
obj.py;215;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-01-28 16:37:28-08:00;aab922d60dea883c6642d7d336edc65b06803c98;""
test_dot.py;31;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-01-28 16:37:28-08:00;aab922d60dea883c6642d7d336edc65b06803c98;""
blaze.py;53;ADD;Erik Welch;erik.n.welch@gmail.com;2015-01-29 22:38:58-06:00;5dfd2c0e1c5aa24826499759f9ffeb88850d14d9;"Merge branch 'master' into isdag_nonrecursive_get  Conflicts: 	dask/tests/test_core.py"
into.py;26;ADD;Erik Welch;erik.n.welch@gmail.com;2015-01-29 22:38:58-06:00;5dfd2c0e1c5aa24826499759f9ffeb88850d14d9;""
into.py;31;ADD;Erik Welch;erik.n.welch@gmail.com;2015-01-29 22:38:58-06:00;5dfd2c0e1c5aa24826499759f9ffeb88850d14d9;""
obj.py;83;DELETED;Erik Welch;erik.n.welch@gmail.com;2015-01-29 22:38:58-06:00;5dfd2c0e1c5aa24826499759f9ffeb88850d14d9;""
obj.py;88;DELETED;Erik Welch;erik.n.welch@gmail.com;2015-01-29 22:38:58-06:00;5dfd2c0e1c5aa24826499759f9ffeb88850d14d9;""
test_dot.py;31;ADD;Erik Welch;erik.n.welch@gmail.com;2015-01-29 22:38:58-06:00;5dfd2c0e1c5aa24826499759f9ffeb88850d14d9;""
core.py;144;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-01-30 19:26:30-08:00;093f8b01cac0ae1758219871d3c37d0c6c9fb4ff;"get_dependencies works down nested tasks"
core.py;10;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-01-31 12:17:52-08:00;30732c1f2f301dfffe23d07374fbc0385cd49a4e;"bag: import cytoolz versions if available"
core.py;12;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-02-01 08:48:18-08:00;f59edc8035431e0bbc0926119d13f9fccfc7aeb2;"Merge pull request #17 from mrocklin/bag  Bag"
core.py;12;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-02-01 08:50:21-08:00;5fbe5b532808f7a1f6e478c42d0bd99fbed5bbe8;"Merge branch 'master' into random  Conflicts: 	dask/array/core.py"
core.py;147;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-02-01 08:50:21-08:00;5fbe5b532808f7a1f6e478c42d0bd99fbed5bbe8;""
core.py;197;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-02-17 11:19:04-08:00;c795526bce1a07f8dafb8876113f255e49ef9b24;"coverage"
utils.py;35;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-02-21 18:59:08-08:00;ad8bda04282f365abe5d489315f7280b2f180c9c;"add ignoring context manager"
utils.py;35;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-02-22 08:03:36-08:00;d1c819a8b0a5dce595a96cb884758ca981bf28ce;"Merge pull request #42 from mrocklin/nan-reductions  Add NaN-aware reductions"
utils.py;66;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-02 10:12:09-08:00;eee739157eb7b7462a4a4da8bfb8a2d31762dd84;"add tmpfile and filetext to utils"
utils.py;66;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-19 12:32:54-07:00;793acce250bf89a92c28071ade87e13ea76a0c00;"Merge pull request #59 from mrocklin/frame-docs  Frame docs"
utils.py;15;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-21 14:28:48-07:00;2a23e9b631b612a39a5f36e0b3b6bdfbeddd10f0;"cframe __del__ doesn't depend on os module"
test_frame.py;310;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-22 15:02:01-07:00;30ad29d6b8d419214179ea8b8aebdbe072aba5bd;"add from_bcolz function"
cframe.py;68;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-23 08:05:22-07:00;3044d4775c8005b2acacd6bf92c437b6ece0fe97;"pass through chunklen"
core.py;154;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-23 08:05:22-07:00;3044d4775c8005b2acacd6bf92c437b6ece0fe97;""
test_array_core.py;86;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-25 09:26:09-07:00;4c2e3ffd329ca6c3a97c2f6f1bb976a5445fa052;"test reductions"
test_array_core.py;86;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-25 12:23:41-07:00;b471143b86627f9c3593dbd77b749d4c198e14ba;"Merge pull request #91 from mrocklin/more-dtypes  More dtype tracking"
test_array_core.py;86;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-25 13:25:34-07:00;834f78e297e28c98b3484b91ca5e1425310e9484;"Merge branch 'master' of github.com:ContinuumIO/dask"
test_array_core.py;86;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-25 16:51:33-07:00;b7a9efd9fdc988f8ddbadd979e318e6c7a3f5b15;"Merge branch 'master' into pframe  Conflicts: 	dask/array/core.py 	dask/array/tests/test_array_core.py"
rewrite.py;341;ADD;Jim Crist;crist042@umn.edu;2015-03-26 16:33:43-05:00;9c8f1026b349d92f99e9c859bae8c0f4b79597f6;"Modifications to rewrite algorithm, added tests  Changed aspects of the rewriting algorithm:  - Now matches most specific pattern first. This means that it will first   match `(add, 2, 1)` to `(add, x, 1)` before `(add, x, y)`. - Now allows for matching of non-hashable terms. Note that non-hashable   patterns are not supported.  Also added tests and improved docstrings for methods."
test_frame.py;332;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-26 16:09:30-07:00;bf895f10de038c8aec36f64c539d99057211d62d;"Merge pull request #80 from mrocklin/pframe  Partitioned Frame data structure"
cframe.py;86;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-26 16:09:30-07:00;bf895f10de038c8aec36f64c539d99057211d62d;""
core.py;162;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-26 16:09:30-07:00;bf895f10de038c8aec36f64c539d99057211d62d;""
utils.py;15;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-26 16:09:30-07:00;bf895f10de038c8aec36f64c539d99057211d62d;""
rewrite.py;341;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-27 12:00:39-07:00;3ed828df85976ded84d652eee32a25331889f03a;"Merge pull request #82 from jcrist/rewrite  Add syntactic rewriting"
test_array_core.py;86;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-30 09:09:27-07:00;b0bc4ccf91c95261f65b5174b75f7c058e0c4fba;"Merge branch 'master' into reblocking3  Conflicts: 	dask/array/__init__.py 	dask/array/core.py"
test_dataframe.py;342;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-30 09:09:27-07:00;b0bc4ccf91c95261f65b5174b75f7c058e0c4fba;""
rewrite.py;366;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-30 09:09:27-07:00;b0bc4ccf91c95261f65b5174b75f7c058e0c4fba;""
utils.py;66;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-30 09:09:27-07:00;b0bc4ccf91c95261f65b5174b75f7c058e0c4fba;""
cframe.py;86;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-30 09:09:27-07:00;b0bc4ccf91c95261f65b5174b75f7c058e0c4fba;""
core.py;162;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-30 09:09:27-07:00;b0bc4ccf91c95261f65b5174b75f7c058e0c4fba;""
utils.py;15;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-03-30 09:09:27-07:00;b0bc4ccf91c95261f65b5174b75f7c058e0c4fba;""
into.py;35;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-04-17 18:03:04-07:00;6453ba8fa0f30e0037331b1a147e0a508f1c06a5;"remove dask.array.into  This has moved to odo"
into.py;44;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-04-17 18:03:04-07:00;6453ba8fa0f30e0037331b1a147e0a508f1c06a5;""
blaze.py;52;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-04-17 18:03:16-07:00;205a3246df439d8c925f1995e48115d829b86342;"remove dask.array.blaze  this has moved to blaze"
blaze.py;52;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-04-19 10:45:44-07:00;0f7161cc83e67dbb270114c97f7a314ee5144133;"Merge pull request #160 from mrocklin/chunks  Rename blockdims/blockshape to chunks"
into.py;35;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-04-19 10:45:44-07:00;0f7161cc83e67dbb270114c97f7a314ee5144133;""
into.py;44;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-04-19 10:45:44-07:00;0f7161cc83e67dbb270114c97f7a314ee5144133;""
utils.py;116;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-04-19 11:14:24-07:00;9f7822eab2530577d788b999edc6755955405fe9;"add filetexts to utils.py  stolen from odo"
utils.py;116;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-04-19 11:18:48-07:00;d80c5a217e32b7341219e42c4cd3a9d1fdc2329a;"Merge pull request #162 from mrocklin/cleanup-travis  reduce travis.yml"
test_dataframe.py;308;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-05-06 09:44:07-07:00;7af967151c95aba54a56deac58311380962cd469;"dataframe: move io/optimize out of core"
test_io.py;169;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-05-06 09:44:07-07:00;7af967151c95aba54a56deac58311380962cd469;""
test_dataframe.py;391;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-05-06 17:08:16-07:00;27a2dee392b107cabe30a8b33e1e73b8245ba07e;"Merge pull request #187 from mrocklin/dataframe4  Dataframe additions"
test_io.py;189;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-05-06 17:08:16-07:00;27a2dee392b107cabe30a8b33e1e73b8245ba07e;""
core.py;24;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-05-15 15:50:38-07:00;84526c0e6aee6679266ea56381e069975365be62;"Add test coverage to dask.bag.core"
core.py;24;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-05-15 17:41:25-07:00;3004fc1fa1d439de3d1091b82022af971682f2ad;"Merge pull request #215 from mrocklin/bag-coverage  Add test coverage to dask.bag.core"
cframe.py;98;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-06-21 13:34:08-07:00;bcc3642e74efcc42b37c159d6eb52bf8362885c4;"remove pframe  This has been replaced by partd and by castra"
core.py;162;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-06-21 13:34:08-07:00;bcc3642e74efcc42b37c159d6eb52bf8362885c4;""
utils.py;15;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-06-21 13:34:08-07:00;bcc3642e74efcc42b37c159d6eb52bf8362885c4;""
cframe.py;98;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-06-22 08:16:13-07:00;d533d0aa42fef3ab60e731869d1065bf0d4d0686;"Merge pull request #347 from mrocklin/partd-set-partitions  Use partd for dask.dataframe.set_index"
core.py;162;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-06-22 08:16:13-07:00;d533d0aa42fef3ab60e731869d1065bf0d4d0686;""
utils.py;15;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-06-22 08:16:13-07:00;d533d0aa42fef3ab60e731869d1065bf0d4d0686;""
core.py;277;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-06-24 10:19:39-07:00;1b97de500bfbc9a5392eaddce25abf9032fe39da;"Make subs robust to eq returning non-nonzero-able  Subs on DataFrame objects fails because      >>> DataFrame() == 'x'     DataFrame()  This wraps up the eq in a try-except block.  It's a bit ugly. Impovements welcome.  cc @eriknw"
cframe.py;98;DELETED;Phillip Cloud;cpcloud@gmail.com;2015-06-25 12:59:32-04:00;952a0aefca5679708a832eea9c011bb7c95c2730;"Merge branch 'master' of github.com:ContinuumIO/dask into resample"
core.py;162;DELETED;Phillip Cloud;cpcloud@gmail.com;2015-06-25 12:59:32-04:00;952a0aefca5679708a832eea9c011bb7c95c2730;""
utils.py;15;DELETED;Phillip Cloud;cpcloud@gmail.com;2015-06-25 12:59:32-04:00;952a0aefca5679708a832eea9c011bb7c95c2730;""
core.py;277;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-06-25 17:29:27-07:00;f025be6827397a003f5f9bdcfb75e43ced079e2b;"Merge pull request #360 from mrocklin/multi  Multi-dataframe computations"
core.py;277;ADD;Jim Crist;crist042@umn.edu;2015-06-29 18:33:08-05:00;04b56b88861c4950ea08b9ea601a05d49b42458a;"Merge remote-tracking branch 'upstream/master' into profile"
cframe.py;98;DELETED;Jim Crist;crist042@umn.edu;2015-06-29 18:33:08-05:00;04b56b88861c4950ea08b9ea601a05d49b42458a;""
core.py;162;DELETED;Jim Crist;crist042@umn.edu;2015-06-29 18:33:08-05:00;04b56b88861c4950ea08b9ea601a05d49b42458a;""
utils.py;15;DELETED;Jim Crist;crist042@umn.edu;2015-06-29 18:33:08-05:00;04b56b88861c4950ea08b9ea601a05d49b42458a;""
core.py;277;ADD;Phillip Cloud;cpcloud@gmail.com;2015-06-29 20:48:41-04:00;f35ea53ac603ab27f144cc00eb5f72fc86c7d614;"Merge branch 'master' of github.com:ContinuumIO/dask into resample"
compose.py;22;ADD;Jim Crist;crist042@umn.edu;2015-07-11 15:42:24-05:00;c71104d9cc3671bea981045988c2ea857efeb297;"Change uuid to robust tokenize  Could be cleaned up, but robust to common cases."
dot.py;85;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-07-14 12:37:05-07:00;ecf8f3c14157a54a3ca5403629eec29f7cf2043c;"dot-graph returns IPython.display.Image"
dot.py;85;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-07-14 14:34:19-07:00;b91374bbd158577a738eb5570e0239312ccf8b31;"Merge pull request #424 from mrocklin/dot-ipy-image  dot_graph returns IPython.display.Image"
dot.py;85;ADD;Phillip Cloud;cpcloud@gmail.com;2015-07-14 18:56:33-04:00;e1eda61a6d72196cc39fcf768db193bfe9c7e4fa;"Merge branch 'master' of github.com:ContinuumIO/dask into resample"
__init__.py;8;ADD;Jim Crist;crist042@umn.edu;2015-07-15 09:47:08-05:00;3e74aa52c012dbcbce23d5948579406662be3f81;"Add do, value to main __init__"
__init__.py;8;ADD;Jim Crist;crist042@umn.edu;2015-07-15 11:47:37-05:00;ecf9e013a2f460682b6c24e975639623f509ed6b;"Merge pull request #408 from jcrist/compose  Imperative dask composition"
imperative.py;87;ADD;Jim Crist;crist042@umn.edu;2015-07-15 11:47:37-05:00;ecf9e013a2f460682b6c24e975639623f509ed6b;""
test_dot.py;36;DELETED;Jim Crist;crist042@umn.edu;2015-07-15 14:10:16-05:00;522394f3fa212602b41950b6240557343930f6aa;"Change graph drawing to use graphviz  This now works for python 2.6, 2.7, and 3.3+."
test_dot.py;40;DELETED;Jim Crist;crist042@umn.edu;2015-07-15 15:00:51-05:00;3dec8e3526520459668ced05f8e144fd7605d5ec;"Merge pull request #409 from jcrist/dot_cleanup  Remove networkx as dependency"
profile_visualize.py;51;ADD;Jim Crist;crist042@umn.edu;2015-07-17 17:15:32-05:00;0632dfe6b3e7e94a234ed0b36f844913da560956;"Improve labeling of tasks in diagnostics  - dot graphs now use `...` to indicate nested tasks - profiler shows whole task, with `_` to indicate variables - profiler hover now handles html escape characters"
profile_visualize.py;51;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-07-20 13:02:30-07:00;b5827ec358adfe5ec5b72be732aecc10e4b08da6;"Merge pull request #441 from jcrist/improve_labels  Improve labeling of tasks in diagnostics"
imperative.py;101;ADD;Jim Crist;crist042@umn.edu;2015-07-21 16:18:15-05:00;23b321bb851b7d0a966b29233acb9497acc6a662;"Add `pure` kwarg to `do`  Can now specify if a wrapped function is pure or not (default is False). This is important for functions like `random` or `time`.  Also changed `tokenize` to default to incremental token if hashing fails. This means we don't do common-subexpression-elimination as aggressively as we did earlier, but people shouldn't be relying on dask preventing repeat computations anyway. This is probably a more sane default than we had originally."
imperative.py;87;DELETED;Jim Crist;crist042@umn.edu;2015-07-21 16:18:15-05:00;23b321bb851b7d0a966b29233acb9497acc6a662;""
imperative.py;101;ADD;Jim Crist;crist042@umn.edu;2015-07-21 16:38:11-05:00;449555f7639bf39f7dc197c165575cf7ead8d7ac;"Merge pull request #456 from jcrist/imperative_tokens  Add `pure` kwarg to `do`"
imperative.py;87;DELETED;Jim Crist;crist042@umn.edu;2015-07-21 16:38:11-05:00;449555f7639bf39f7dc197c165575cf7ead8d7ac;""
test_progress.py;35;ADD;Jim Crist;crist042@umn.edu;2015-07-31 09:52:35-05:00;b35adb3c153904e4a2e0b468da2d73a38778bcf6;"Finish callback called on error in scheduler  Allows for cleanup of diagnostics resources on error."
test_progress.py;35;ADD;Jim Crist;crist042@umn.edu;2015-07-31 10:34:03-05:00;1ab72aa532868405829932c18e47fbaf9af336c4;"Merge pull request #501 from jcrist/callback_on_error  Finish callback called on error in scheduler"
__init__.py;8;ADD;Phillip Cloud;cpcloud@gmail.com;2015-07-31 16:38:01-04:00;370eebd5e2ea4b85be0f90bd72423b1360c7a591;"Merge branch 'master' of github.com:ContinuumIO/dask into resample"
profile_visualize.py;51;ADD;Phillip Cloud;cpcloud@gmail.com;2015-07-31 16:38:01-04:00;370eebd5e2ea4b85be0f90bd72423b1360c7a591;""
test_progress.py;35;ADD;Phillip Cloud;cpcloud@gmail.com;2015-07-31 16:38:01-04:00;370eebd5e2ea4b85be0f90bd72423b1360c7a591;""
imperative.py;101;ADD;Phillip Cloud;cpcloud@gmail.com;2015-07-31 16:38:01-04:00;370eebd5e2ea4b85be0f90bd72423b1360c7a591;""
test_dot.py;40;DELETED;Phillip Cloud;cpcloud@gmail.com;2015-07-31 16:38:01-04:00;370eebd5e2ea4b85be0f90bd72423b1360c7a591;""
test_fft.py;30;ADD;Blake Griffith;blake.a.griffith@gmail.com;2015-08-04 14:53:15-05:00;7bf47ceb1872db834a91cbcc2193366bff1abb58;"Add tests for fft and ifft"
test_fft.py;33;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-08-06 11:13:04-07:00;43804a7eca170d8f4de508462d8a19988d6bfe2e;"Merge pull request #522 from cowlicks/gh-405  Add dask.array.fft"
cache.py;7;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-08-03 15:25:34-07:00;39fdd33c735aa527445a2b21dae832b6a8244116;"skip tests if cachey not available"
cache.py;8;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-08-12 08:41:37-07:00;3a330c6b79743d9c5f108d8682e5b66b21b9cfe6;"Merge pull request #502 from mrocklin/cachey  Cachey"
image.py;6;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-08-12 17:31:21-07:00;66960853476d0302995181764da0a866ebe085de;"Add da.image.imread function  Example -------  >>> from dask.array.image import imread >>> x = imread('2014-*-*.png') >>> x.shape (365, 1000, 1000, 3)  Arose in Stack Overflow question: http://stackoverflow.com/questions/31951507/out-of-core-4d-image-tif-storage-as-hdf5-python"
image.py;6;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-08-13 17:12:25-07:00;d771470f11db2b61f002a0474571ec9fbd7bb828;"Merge pull request #578 from mrocklin/imread  Add da.image.imread function"
imperative.py;108;DELETED;Jim Crist;crist042@umn.edu;2015-08-19 15:02:14-05:00;40f87b3286ec8a075a84bbc35a6bfa8102ff37b9;"Use base.tokenize in dask imperative"
imperative.py;108;DELETED;Jim Crist;crist042@umn.edu;2015-08-19 16:12:05-05:00;abdcec69338b3b2c6eda0d94370847338752032a;"Merge pull request #607 from jcrist/tokenize_imp  Use base.tokenize in dask imperative"
image.py;6;ADD;Jim Crist;crist042@umn.edu;2015-08-20 10:30:03-05:00;80545a05237be52dad4bb49bf77ed1dfc865af85;"Merge branch 'master' into resample"
test_fft.py;33;ADD;Jim Crist;crist042@umn.edu;2015-08-20 10:30:03-05:00;80545a05237be52dad4bb49bf77ed1dfc865af85;""
cache.py;8;ADD;Jim Crist;crist042@umn.edu;2015-08-20 10:30:03-05:00;80545a05237be52dad4bb49bf77ed1dfc865af85;""
imperative.py;101;DELETED;Jim Crist;crist042@umn.edu;2015-08-20 10:30:03-05:00;80545a05237be52dad4bb49bf77ed1dfc865af85;""
dot.py;156;ADD;sinhrks;sinhrks@gmail.com;2015-08-23 12:02:44+09:00;d1134d251f5a1ad71b5a53d18fe287932338211e;"Allow dot_graph to accept filename=None"
dot.py;166;ADD;sinhrks;sinhrks@gmail.com;2015-08-23 12:02:44+09:00;d1134d251f5a1ad71b5a53d18fe287932338211e;""
dot.py;149;DELETED;sinhrks;sinhrks@gmail.com;2015-08-23 12:02:44+09:00;d1134d251f5a1ad71b5a53d18fe287932338211e;""
dot.py;156;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-08-26 20:46:17-07:00;65e6b9f88faa3cf2f5a982420a3c9f6a1a96c775;"Merge pull request #618 from sinhrks/vis_nofile  Allow dot_graph to accept filename=None"
dot.py;166;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-08-26 20:46:17-07:00;65e6b9f88faa3cf2f5a982420a3c9f6a1a96c775;""
dot.py;149;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-08-26 20:46:17-07:00;65e6b9f88faa3cf2f5a982420a3c9f6a1a96c775;""
test_dataframe.py;54;ADD;sinhrks;sinhrks@gmail.com;2015-09-02 21:26:31+09:00;240005e8733282760a5da4480f71a89611fb42fc;"Allow dd.concat to handle known divisions"
test_dataframe.py;54;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-09-04 07:09:04-07:00;abdb43c5490b8eef40f4aafea37805347e675756;"Merge pull request #610 from sinhrks/concat  Allow dd.concat to handle known divisions"
dot.py;155;DELETED;Scott Sanderson;scoutoss@gmail.com;2015-09-07 02:25:38-04:00;b928b1cd8829a0bef7b6fc6292329786ea09b634;"MAINT: Allow users to specify format to dot_graph.  We support 'png', 'pdf', 'dot', 'svg', and 'jpeg' as formats.  If IPython is installed, passing 'png' or 'jpeg', causes us to return an IPython.display.Image.  Passing 'svg' causes us to return an IPython.display.SVG.  In all other cases, or if IPython is not installed, we return None."
dot.py;165;DELETED;Scott Sanderson;scoutoss@gmail.com;2015-09-07 02:25:38-04:00;b928b1cd8829a0bef7b6fc6292329786ea09b634;""
dot.py;156;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-09-07 17:14:51-07:00;a0eef9ef3afd0d4c57b4853e3c1718db2725a9ee;"Merge pull request #674 from ssanderson/allow-dot-format-choice  Allow dot format choice"
dot.py;166;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-09-07 17:14:51-07:00;a0eef9ef3afd0d4c57b4853e3c1718db2725a9ee;""
__init__.py;5;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-09-13 08:31:17-07:00;d36053764e8a5776d3c37a7e35beb9ba5cb67386;"Add visualize to diagnostics import"
__init__.py;5;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-09-13 09:02:12-07:00;26878bcd17f14d1454f07b3865f5a00e5d94bb22;"Merge pull request #704 from mrocklin/add-visualize-to-diagnostics  Add visualize to diagnostics import"
__init__.py;12;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-10-19 18:22:03-07:00;9e86d6fe8ae4526df182071451f62a2d99228791;"add visualize and base to __init__"
__init__.py;12;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-10-20 10:32:15-07:00;286e60f906185006c797321be3e4b327281735f4;"Merge pull request #791 from mrocklin/imports  add visualize and base to __init__"
__init__.py;12;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-10-20 11:00:21-07:00;8c6c572a43b3a8dd3a165c6d1ce5ed6d38709772;"Merge branch 'master' of github.com:blaze/dask"
test_dataframe.py;57;DELETED;sinhrks;sinhrks@gmail.com;2015-11-23 10:37:55+09:00;d047c8730e839d56fad73b19c27da4cf9bf8a5a3;"COMPAT: Remove warnings caused by pandas 0.17.0"
utils.py;225;ADD;sinhrks;sinhrks@gmail.com;2015-11-23 10:37:55+09:00;d047c8730e839d56fad73b19c27da4cf9bf8a5a3;""
test_dataframe.py;57;DELETED;Matthew Rocklin;mrocklin@gmail.com;2015-11-23 10:28:13-08:00;f7f7062e772d7201eb9e5590f4a58e2c21e27504;"Merge pull request #844 from mrocklin/bag-from-castra  Simplify Bag.from_castra"
utils.py;225;ADD;Matthew Rocklin;mrocklin@gmail.com;2015-11-23 10:28:13-08:00;f7f7062e772d7201eb9e5590f4a58e2c21e27504;""
core.py;948;ADD;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-11-24 23:52:27+01:00;0d42a83ef1d2c29bae38b06ecc7e731da12a7a70;"Added more efficient readline function that supports arbitrary line separators. Bug fixes and modifications to support the new readline function in the _textblock function."
core.py;933;ADD;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-11-28 11:32:57+01:00;7b18d083601577d2073adf561563880724392309;"Modified _textblock to use io.{BufferedReader, TextIOWrapper} to handle provided line separators and removed custom _readlines function. Modified tests accordingly. Added a warning to _textblock if chunksize is less than the length of a line which may result in duplicate processing of that line."
core.py;958;DELETED;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-11-28 11:32:57+01:00;7b18d083601577d2073adf561563880724392309;""
core.py;538;ADD;Erkka Rinne;erkka.rinne@vtt.fi;2015-12-07 12:18:05+02:00;f60050204a7a95adc0821e6490c9a7c4f523502a;"Support map_blocks block_id kwarg in python 2  Python 2 does not accept keyword-only arguments."
core.py;942;DELETED;Sigurd Spieckermann;sigurd.spieckermann@gmail.com;2015-12-23 18:35:18+01:00;b9ae4b5e79e34495d4c87f8f9b8679a520ead7b0;"Added io.BaseIO compatibile classes of GzipFile and BZ2File for Python 2.6. Fixed bug in 'textblock' and moved it to dask.utils. Adapted dask.dataframe code that uses 'textblock' accordingly. Added centralized 'open' function which handles compression inference and modified code to use this function. Added compression argument to dask.bag.from_filenames and dask.bag.to_textfiles."
test_array_core.py;111;DELETED;Matthew Rocklin;mrocklin@gmail.com;2016-01-21 14:25:47-08:00;c4eba18a43d08abec096c263fa2e2f3d15249a88;"move eq to array.utils"
utils.py;23;ADD;Matthew Rocklin;mrocklin@gmail.com;2016-01-21 14:25:47-08:00;c4eba18a43d08abec096c263fa2e2f3d15249a88;""
test_array_core.py;111;DELETED;Matthew Rocklin;mrocklin@gmail.com;2016-01-21 15:28:26-08:00;47061f5bd1eb844da54bee3d5bf688c2187171a3;"Merge pull request #934 from mrocklin/eq  Eq"
utils.py;23;ADD;Matthew Rocklin;mrocklin@gmail.com;2016-01-21 15:28:26-08:00;47061f5bd1eb844da54bee3d5bf688c2187171a3;""
cache.py;10;DELETED;Jim Crist;crist042@umn.edu;2016-03-03 11:31:19-06:00;2d68573b125b8f713caf15fb68a17bb151d1cc61;"Move cachey import to local import  Displays nicer error on failed Cache creation. Fixes #868."
cache.py;10;DELETED;Jim Crist;crist042@umn.edu;2016-03-03 13:11:16-06:00;8ac6005f29957ad7e9eae56657e7df00aec831bb;"Merge pull request #1026 from jcrist/cachey_import  Move cachey import to local import"
utils_test.py;50;ADD;Pedro M Duarte;pmd323@gmail.com;2016-04-17 13:03:51-07:00;98679e9935213058389c556b6e552b4ab5a25140;"TestCase for get functions (#1078)  * Added general test suite for get functions. Used it to test get_async.  * removed GetFunctionTestCase from the toplevel namespace"
utils_test.py;62;ADD;Pedro M Duarte;pmd323@gmail.com;2016-04-17 13:03:51-07:00;98679e9935213058389c556b6e552b4ab5a25140;""
utils.py;599;ADD;Matthew Rocklin;mrocklin@gmail.com;2016-04-23 09:54:39-07:00;a82b10db696ef43fa46052889f3072ba73379866;"add file seek util functions"
test_s3.py;53;ADD;Matthew Rocklin;mrocklin@gmail.com;2016-04-25 10:46:48-07:00;992a9b0cd5d5d1088a924f6ca495b2be2c451223;"use moto in bytes/s3 tests"
utils.py;64;ADD;Matthew Rocklin;mrocklin@gmail.com;2016-04-27 09:52:33-07:00;2950e4af7bf74785e75015d5081b80755a843827;"Respond to comments on ingest"
utils.py;599;DELETED;Matthew Rocklin;mrocklin@gmail.com;2016-04-27 09:52:33-07:00;2950e4af7bf74785e75015d5081b80755a843827;""
test_s3.py;56;ADD;Matthew Rocklin;mrocklin@gmail.com;2016-04-28 11:43:46-07:00;ec6d1e06e167cd8d8780a052e412e7cc2edf5734;"Merge pull request #1116 from mrocklin/bytes  Refactor data ingest and read_csv"
utils.py;64;ADD;Matthew Rocklin;mrocklin@gmail.com;2016-04-28 11:43:46-07:00;ec6d1e06e167cd8d8780a052e412e7cc2edf5734;""
core.py;867;ADD;Matthew Rocklin;mrocklin@gmail.com;2016-05-04 09:19:02-07:00;d9396a92e43b580d0e4638f68045ef5f553c8c2f;"cache Array._keys  This is surprisingly expensive to compute"
core.py;871;ADD;Matthew Rocklin;mrocklin@gmail.com;2016-05-05 07:00:47-07:00;abcb8ce2317b3996d5065724ceeb74a3afef2d18;"Merge pull request #1144 from mrocklin/big-array  Changes on dask.array from recent experiments"
async.py;148;ADD;Jim Crist;crist042@umn.edu;2016-06-07 19:00:52-05:00;6d591740201c6eec326ba691df47f8d9fe7a1fa0;"Fix scheduler behavior for top-level lists  Previously lists were treated differently depending on if they were a toplevel key in the graph or not. The new behavior treats them the same as long as they're not nested lists. This is best illustrated with an example:  ```python dsk = {'a': [1, 2, 3],        'b': 'a',        'c': [(inc, 1), 2],        'd': [[1, 2, (inc, 1)], 4],        'e': [(list, [1, 2, (inc, 1)]), 4],        'f': ['a', 'b']} ```  In this example: - 'a' is data, as none of the elements are keys or tasks - 'b' is not data, it's just an alias to 'a' (a trivial task) - 'c' is not data, as it contains a task - 'd' is data, as the list contains no tasks. - 'e' is not data, as it contains tasks. Note that the result of this is   ``[[1, 2, 3], 4]``, which is probably the desired result for `d`. - 'f' is not data as it contains keys in the graph  To summarize:  A value in the graph is computed if: - It's a task - It's a key in the graph - It's a list that contains either tasks or keys"
async.py;157;ADD;Jim Crist;crist042@umn.edu;2016-06-07 19:00:52-05:00;6d591740201c6eec326ba691df47f8d9fe7a1fa0;""
async.py;157;DELETED;Jim Crist;crist042@umn.edu;2016-06-08 15:15:59-05:00;defdd65be1018a39f8f540d70cd04dd3b71c4122;"Make graph definition recursive  Now traverses lists recursively, even at top-level.  Also made the get test case not a subclass of ``unittest.TestCase``, which allows it to be imported without running multiple times."
async.py;148;DELETED;Jim Crist;crist042@umn.edu;2016-06-08 17:30:36-05:00;4e815e3aa4571f7259a124fc7ee095ae2ad4084d;"Fix core.get to use new spec  This was difficult to do with the existing interface. Since the existing interface wasn't used anywhere (was from the original reference implementation), I changed some things. New signature takes a keyword `recursive` that determines whether the recursive or non-recursive definition is used."
core.py;58;ADD;Jim Crist;crist042@umn.edu;2016-06-08 17:30:36-05:00;4e815e3aa4571f7259a124fc7ee095ae2ad4084d;""
core.py;58;ADD;Jim Crist;crist042@umn.edu;2016-06-10 17:52:35-05:00;893183ea18f04d9256f86ea5282dc5ea7aeaa356;"Merge pull request #1250 from jcrist/sched_key_fix  [WIP] Fix scheduler behavior for top-level lists"
test_bytes_utils.py;61;ADD;Matthew Rocklin;mrocklin@gmail.com;2016-06-27 09:00:44-07:00;5068149628ed59d7a2ed7d125e3fb1cddf6fd7ef;"Load known but external protocols automatically (#1325)  Fixes #1324"
__init__.py;7;DELETED;Jim Crist;crist042@umn.edu;2016-07-22 14:06:07-05:00;0b9a5aa885b2c2c98a56c7db60ecccf7012f7f9c;"Add nice error messages on import failures  - Throw a nice error when imports fail on optional dependencies. - Make the `dask.diagnostics.visualize` function always importable,   moving the missing dependency failure to runtime.  Fixes #1372."
__init__.py;7;DELETED;Jim Crist;crist042@umn.edu;2016-07-23 11:00:21-05:00;b51f2a200a9027985f7ff9423eea84e677cc85c4;"Merge pull request #1402 from jcrist/nice-errors-on-imports  Add nice error messages on import failures"
_version.py;140;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;"Add versioneer (#1569)  Use versioneer for version support. This removes the need to manually update the version in `__init__.py` and `setup.py`, and also adds a version per-commit based on the git hash. Fixes #1533."
_version.py;455;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;""
_version.py;473;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;""
_version.py;479;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;""
versioneer.py;400;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;""
versioneer.py;624;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;""
versioneer.py;939;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;""
versioneer.py;957;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;""
versioneer.py;963;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;""
versioneer.py;992;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;""
versioneer.py;1155;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;""
versioneer.py;1433;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;""
versioneer.py;1441;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;""
versioneer.py;1452;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;""
versioneer.py;1461;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;""
versioneer.py;1705;ADD;Jim Crist;crist042@umn.edu;2016-09-25 10:11:13-05:00;b488152295bbff6e2eaae14fdedbddf41f03109c;""
test_fft.py;33;DELETED;Matthew Rocklin;mrocklin@gmail.com;2016-10-05 18:01:03-04:00;669aae7d2b125e7b4070221aaa27be21cc4ee3e4;"Use assert_eq everywhere in dask.array tests (#1617)  Previously we had a bunch of custom eq functions defined. These were not as comprehensive as dask.array.utils.assert_eq. In particular many of them failed to check dtypes.  Now we use assert_eq everywhere and we ensure that all dask.array functions propagate dtype information."
core.py;579;DELETED;Jim Crist;crist042@umn.edu;2016-10-13 13:49:20-04:00;0b84cb1853aa516da27aad52ab3c0a1340c800d0;"A few fixes for `map_blocks` (#1654)  * map_blocks block_id works with other kwargs  Fixes #1481.  * map_blocks with drop_axis/new_axis works  Fix a few bugs in drop_axis/new_axis. Fixes #1297."
utils.py;193;ADD;Antoine Pitrou;pitrou@free.fr;2016-10-14 16:59:30+02:00;42719215a8c06b311181a6d28c24f772f7f99544;"Fix #1656: failures when parallel testing (#1657)  * Fix #1656: failures when parallel testing  Parallel testing works using the `pytest-xdist` plugin with a hard-coded PYTHONHASHSEED, e.g.:  $ PYTHONHASHSEED=1 py.test -n=auto dask  * Appease flake8; also, use a hardcoded number of workers"
utils.py;166;DELETED;Antoine Pitrou;pitrou@free.fr;2016-10-14 16:59:30+02:00;42719215a8c06b311181a6d28c24f772f7f99544;""
core.py;212;ADD;Antoine Pitrou;pitrou@free.fr;2016-11-03 15:17:12+01:00;1b188294f637cdd55911bf0c7c866e5ccfed5eca;"Faster array slicing (#1731)  * Faster array slicing  * Take a bit more shortcuts  * Appease flake8  * Remove unwanted change in docstring  * Optimize inline_functions()  * Faster iterative _deps()  * Optimize cull() and friends  * Appease flake8 again  * Add tests for new functions  * Appease flake8 again  * Use deterministic initialization in test  * Standardize around get_dependencies()  * Install up-to-date distributed in .travis.yml  * Try to fix dependencies on Travis  * Avoid pulling dependencies when upgrading distributed and zict from git"
utils.py;546;ADD;Antoine Pitrou;pitrou@free.fr;2016-12-05 23:46:51+01:00;7a2d5e378fe67b54df74b0b52ca160a7f3952513;"Improve import time (#1833)  * Improve import time  * Allow using Dispatch.register and Dispatch.register_lazy as a decorator  * Appease flake8  * Remove modules-counting test"
utils.py;554;ADD;Antoine Pitrou;pitrou@free.fr;2016-12-05 23:46:51+01:00;7a2d5e378fe67b54df74b0b52ca160a7f3952513;""
__init__.py;19;ADD;Matthew Rocklin;mrocklin@gmail.com;2016-12-22 13:54:05-05:00;edfa5f3c668e66e5a39e564b34ca322b940c4955;"add read_parquet to dask.dataframe base api (#1859)"
__init__.py;11;ADD;Matthew Rocklin;mrocklin@gmail.com;2016-12-22 13:54:05-05:00;edfa5f3c668e66e5a39e564b34ca322b940c4955;""
base.py;489;ADD;Matthew Rocklin;mrocklin@gmail.com;2017-01-25 14:28:34-05:00;7f42b420795d92ebf78b17f9e3ca742b71a98719;"Add persist function (#1927)  * Add persist function  This mirrors the interface of compute, but returns in-memory dask collections.  * use client.persist if a client exists  * support non-collections in distributed persist  * add persist method to base  * add docstring to persist  * flake8  * respond to feedback"
base.py;494;ADD;Matthew Rocklin;mrocklin@gmail.com;2017-01-25 14:28:34-05:00;7f42b420795d92ebf78b17f9e3ca742b71a98719;""
optimization.py;70;ADD;Matthew Rocklin;mrocklin@gmail.com;2017-03-15 17:03:16-04:00;7b7c765c057f7ac763d991060c98d8ec8b1db0de;"Test that numpy literals in graph don't get inlined (#2080)  * Test that numpy literals in graph don't get inlined  * add tests to minimize data transfer  * Explicitly state keys to hold on fusion"
async.py;148;ADD;Jim Crist;crist042@umn.edu;2017-03-31 17:33:54-04:00;da51f9bc6720bf2b069298c91fb77e9290ab9d09;"`dask.threaded.get` can be interrupted in python 2 (#2144)  * `dask.threaded.get` can be interrupted in python 2  Due to a bug in `Queue.get` in python 2, `get` is not interruptible if no timeout is set (see https://bugs.python.org/issue1360). To get around this, we specify an extremely long timeout. Benchmarking shows no noticeable overhead to specifying a timeout, and this allows `dask.threaded.get` to be interrupted.  * More robust interrupt handling  - Properly handle windows with python 3 - Add test for keyboard interrupt  * Fix test for windows  * Remove slow mark on interrupt test  * Re-skip the test on appveyor"
base.py;532;ADD;stuartarchibald;stuartarchibald@users.noreply.github.com;2017-04-09 14:23:42+01:00;33d7a791d9d4a103ff46c237844cf16fcc2b8a68;"Raise error in persist if get functions differ. (#2176)  * Raise error in persist if get functions differ.  This patch adds a check in base.persist() to raise if the globally set get function does not match a locally supplied instance.  Test is added.  * Allow set_options(get=) to override distributed in persist"
base.py;523;DELETED;stuartarchibald;stuartarchibald@users.noreply.github.com;2017-04-09 14:23:42+01:00;33d7a791d9d4a103ff46c237844cf16fcc2b8a68;""
test_utils.py;357;ADD;Matthew Rocklin;mrocklin@gmail.com;2017-04-28 11:10:48-04:00;918f2331e923c96a7c769993273c14464ac62aef;"Support sparse arrays (#2234)  * Support sparse arrays  This supports sparse arrays mostly by relying on ufuncs to do the right thing.  Additionally we check for operations like concatenate and tensordot on the object's module.  * add sparse to CI  * add package_of function to utils  * clean up package_of  -  Add test -  Support missing module  * add comment around concatenate2/3  * fix typo  * Avoid testing sparse on old versions of Python/Numpy  This is a new and fringe feature.  Didn't want to spend the time supporting old systems.  * Tensordot, rechunk, reshape, abs, and other elemwise operations  * support mixed dense/sparse arrays  * Use array_priority to determine concatenate function  * use __array_priority__ for concatenate3 as well  * handle corner cases with concatenate3  * flake8  * add sparse array docs  * skip more sparse tests in python 3.4  * flake8  * remove dead code"
test_threaded.py;131;ADD;Jim Crist;jcrist@users.noreply.github.com;2017-05-01 13:29:01-05:00;659ee444256a4fd2abe3daa03b4de451ce866ced;"New interrupt test (#2261)  * New interrupt test  Runs in same process, should hopefully be less flaky."
profile.py;236;ADD;Jim Crist;jcrist@users.noreply.github.com;2017-05-02 13:45:29-05:00;a5da73881d8c4afdcdbb04d7ab5b4555cc7771bd;"Make ResourceProfiler more robust (#2286)  Previously processes could be dropped after a tracking loop was started, which may lead to an exception due to trying to get memory/cpu info from a dead process. This PR fixes this to handle dead processes whenever information is recorded."
parquet.py;443;ADD;Matthew Rocklin;mrocklin@gmail.com;2017-05-05 08:42:34-04:00;4897da6c3f60f751bddef625f441fd39d1c58613;"Catch missing pyarrow import (#2295)  See https://github.com/dask/fastparquet/issues/142"
async.py;147;DELETED;Jim Crist;jcrist@users.noreply.github.com;2017-05-11 09:27:56-05:00;0108940387a8d17034a7fbad0558d7e3672243d9;"Move dask.async to dask.local (#2318)  * Move dask.async to dask.local  In Python 3.7 `async` will become a keyword and `dask.async` will no longer be a valid module name. We move `dask.async` to `dask.local` and deprecate the old module. The documentation has been updated accordingly."
local.py;147;ADD;Jim Crist;jcrist@users.noreply.github.com;2017-05-11 09:27:56-05:00;0108940387a8d17034a7fbad0558d7e3672243d9;""
core.py;1617;ADD;Jim Crist;jcrist@users.noreply.github.com;2017-05-16 15:56:23-04:00;f7a44ada3d47a55c9f92e2c7b20a2441a2c57ea6;"Add `db.map`, `Bag.starmap`, fix `Bag.map` (#2339)  * Add db.map  Implement `db.map`, a mapping function that has the same semantics as `builtins.map`, with the following extensions: - Supports keyword arguments - Non-bag arguments are "broadcast" across all function calls  * Add Bag.starmap  Similar to `itertools.starmap`, except also supports keyword arguments.  * Deprecate old magic Bag.map behavior  * Update bag docs"
optimization.py;79;ADD;Jim Crist;jcrist@users.noreply.github.com;2017-05-30 12:29:19-04:00;7da2c0722942ec84194f756b8cdfd08ca9edbdae;"Fuse slices works with alias in graph (#2364)  * Fuse slices works with alias in graph  In #2080 a bug was introduced that prevented fusing slices across aliases in the graph. These would show up when several dask arrays were concatenated together. This fixes that bug, and adds a test that fusing works across aliases.  * Fuse slices works with locks"
optimization.py;74;DELETED;Jim Crist;jcrist@users.noreply.github.com;2017-05-30 12:29:19-04:00;7da2c0722942ec84194f756b8cdfd08ca9edbdae;""
optimization.py;79;ADD;Martin Durant;martin.durant@utoronto.ca;2017-05-31 09:33:20-04:00;9305484d9ee114efafee1ca6db843d0d77129bc5;"Merge branch 'master' into fastparquet_metadata"
optimization.py;74;DELETED;Martin Durant;martin.durant@utoronto.ca;2017-05-31 09:33:20-04:00;9305484d9ee114efafee1ca6db843d0d77129bc5;""
hashing.py;19;ADD;Antoine Pitrou;pitrou@free.fr;2017-05-31 18:04:52+02:00;522c38430a8483bfd8f1aa5cb2904310f0c64af5;"Faster array tokenize() (#2377)  * Faster array tokenize()  Optionally uses fast hashing functions if available (the packages 'mmh3' or 'cityhash' need to be installed), falls back on SHA1.  * Appease flake8  * Disable cityhash  * Reenable cityhash if post-0.2.1  * Also catch OverflowError (for mmh3)  * Add xxHash"
hashing.py;40;ADD;Antoine Pitrou;pitrou@free.fr;2017-05-31 18:04:52+02:00;522c38430a8483bfd8f1aa5cb2904310f0c64af5;""
hashing.py;53;ADD;Antoine Pitrou;pitrou@free.fr;2017-05-31 18:04:52+02:00;522c38430a8483bfd8f1aa5cb2904310f0c64af5;""
hashing.py;91;ADD;Antoine Pitrou;pitrou@free.fr;2017-05-31 18:04:52+02:00;522c38430a8483bfd8f1aa5cb2904310f0c64af5;""
distributed.py;17;ADD;Matthew Rocklin;mrocklin@gmail.com;2017-06-11 19:07:09-04:00;ecdae84aa3b8ee5408876b0b7d7eade3d127e177;"bump version to 0.15.0 (#2435)  * bump version to 0.15.0  * update changelog  * extend dask/distributed imports  * update changelog  * separate newer imports"
distributed.py;17;DELETED;Matthew Rocklin;mrocklin@gmail.com;2017-07-04 08:22:40-04:00;c7ce4bceafb3a7835e56d966b4edbb881d3e4245;"Import star from dask.distributed (#2503)  While generally a bad habit in this case it allows us to evolve the dask/distributed API without touching the dask/dask codebase."
core.py;1116;DELETED;Jim Crist;jcrist@users.noreply.github.com;2017-08-01 11:51:47-05:00;a056b9f46f4a2d75f4c542337610f89158165832;"Clear `_cached_keys` on name change in dask.array (#2572)  Previously a `_cached_keys` attribute was added to `dask.array` to store the result of the `_keys` method for fast recompute. Later, mutating the `name`/`dask` attributes of a `dask.array` was supported. Unfortunately, mutating these attributes wouldn't clear the cache, which would lead to hard to find bugs.  To fix this, we do the following:  - Make `Base` define `__slots__`, so that the `__slots__` attribute of   `Array` is respected. Before the `__slots__` on `Array` were ignored,   making `_cached_keys` an unexpected source of state (wasn't declared,   and the declaration was thought to be respected)  - Make `name` a property, and clear the cache when set  - Add a test for the cache behavior."
test_utils.py;312;DELETED;Jim Crist;jcrist@users.noreply.github.com;2017-09-01 14:12:17-05:00;dd0802fb2a38b2dfa5af9c3acd19c21b03b1f680;"Masked arrays (#2301)  - Add support for masked arrays as chunks - Add api docs for mask arrays - Update sparse docs on arbitrary chunk types"
base.py;463;ADD;Jim Crist;jcrist@users.noreply.github.com;2017-10-14 20:07:50-05:00;9e9fa10ef11bfe86a52214d8a2cda19508a4ee37;"Dask Collection Interface  This adds a standard protocol for the dask collections implemented via a set of methods (and no required base class). The methods are similar to the existing non-public api, but not exactly the same.  - Specified collection interface - Switched all internals to use new interface - Deprecated previous interface - Broke out the core methods (e.g. `.compute` into a mixin) - Deprecated `Base` class - Documented interface"
base.py;468;ADD;Jim Crist;jcrist@users.noreply.github.com;2017-10-14 20:07:50-05:00;9e9fa10ef11bfe86a52214d8a2cda19508a4ee37;""
base.py;571;DELETED;Jim Crist;jcrist@users.noreply.github.com;2017-10-14 20:07:50-05:00;9e9fa10ef11bfe86a52214d8a2cda19508a4ee37;""
base.py;576;DELETED;Jim Crist;jcrist@users.noreply.github.com;2017-10-14 20:07:50-05:00;9e9fa10ef11bfe86a52214d8a2cda19508a4ee37;""
parquet.py;492;DELETED;Jim Crist;jcrist@users.noreply.github.com;2017-10-14 20:07:50-05:00;9e9fa10ef11bfe86a52214d8a2cda19508a4ee37;""
parquet.py;447;ADD;Jim Crist;jcrist@users.noreply.github.com;2017-11-13 14:02:14-06:00;950ba9e7e54cf0a04acc4c51ce5e53c33d8cfa30;"Support arrow in `to_parquet`. Several other parquet cleanups. (#2868)  - Support `engine` kwarg in `to_parquet` - Add support for using `pyarrow` in `to_parquet` - Switch `'arrow'` to `'pyarrow'` for engine kwarg, deprecating    old `'arrow'` name. This matches the pandas interface. - Refactor how engines were handled, removing top-level imports   in `dask.dataframe.io.parquet` - Fix several bugs in both readers and writers, mostly having to do   with how indices were handled - Expand testing for `pyarrow` and `fastparquet` compatibility - Allow running the test suite with neither, one, or both of   `pyarrow` and `fastparquet` installed - Add tests for reading and writing from both engines - Cleanup bugs in the implementations of both engines that    arose during testing. - Change default of `compression` in `to_parquet` to `'default'`,   meaning the use the default compression for the backend engine. - Fix threadsafe bug in fastparquet where metadata was being mutated in   a non-deterministic manner. This should be upstreamed, but fix here   for now. - Fix part of a metadata bug in fastparquet where the total number of   rows isn't consistent when writing a file."
test_routines.py;190;ADD;jakirkham;jakirkham@gmail.com;2017-11-22 13:30:20-05:00;32ebaa5497b8b17b0189276f8bbcab0805859535;"Support N-D arrays with matmul (#2909)  * Reimplement matmul methods with the function  Should simplify things a bit while retaining the same functionality.  * Rewrite `matmul` to support N-D arrays  Previously `matmul` was restricted to 1-D and 2-D arrays. This rewrites `matmul` to support N-D arrays with N > 1. Support for N > 2 is accomplished by using `atop` with NumPy's `matmul`. Some adjustments to the arrays are made to handle the 1-D array case correctly and handle broadcasting in the same way that NumPy's `matmul` would.  * Test `matmul` on N-D arrays  Make sure that `matmul` behaves correctly on a wide range of array dimensionalities.  * Drop check for unimplemented behavior in `matmul`  Now that we have implemented `matmul` for N-D arrays with arbitrary N, there is no need to check which case are not implemented as all cases are implemented.  * Note `matmul`'s N-D support in the changelog"
core.py;158;ADD;Jim Crist;jcrist@users.noreply.github.com;2018-01-17 13:36:58-08:00;b7be7d8007ed7c2b425b5998b85dde60d82052c5;"A mild refactor of `dask.bytes` (#3069)  * Refactor bytes implementation  Refactor handling of paths/filesystems in bytes to fit a more generic filesystem class. In particular:  - All protocol/parameters specified in the urlpath are stripped before forwarding to any filesystem methods. Filesystems only see paths, making this interface more uniform. Also avoids parsing the paths multiple times.  - Cleanup Open/OpenFile classes.  * Refactor bytes backend a bit  - Remove `OpenFileCreator` class, as it's unnecessary - Use `open_files` in more places - Fix bug in hdfs specific block functionality to not check for client   when block locations aren't known. - Remove any non-standard use of methods on `filesystem`, in prep for   merging arrow and dask filesystem backends. This means removing   `get_block_locations` from required methods, and moving `logical_size`   to a function (as it should be).  * parquet tokenizes names properly  * A few renames/docstrings  * Add a few tests  * Fix failing py2 test  * Fix windows error  * Actually fix windows bug  * Respond to comments"
core.py;163;DELETED;Jim Crist;jcrist@users.noreply.github.com;2018-01-18 12:24:13-08:00;fef1532a6ceb040a18a84476562e79258a16df66;"Remove `get_block_locations` handling (#3079)  * Remove `get_block_locations` handling  This was used for short circuit reads from hdfs using libhdfs3, but has the following problems:  - `hdfs3` specific, other hdfs libraries currently don't expose this feature. This would be less of an issue if `hdfs3` was a full featured hdfs library, but due to its lack of handling various security features other libraries (e.g. `libhdfs`) may be preferable instead (for now). - This feature complicated testing and code, relying on tests in the `hdfs3` library that have now started failing (due to lack of being run). - The feature wasn't fully thought out in a generic way. If we re-add it later, we can think about how this might expand to other hdfs clients (or other potential backends).  This optimization also only comes into play if: - You have short-circuit reads enabled - The data you want to read is on the same nodes you're computing on - The data you want to read is evenly distributed among those nodes - The scheduler decides it makes sense to read from those nodes instead of moving the computation elsewhere.  * Add to changelog"
core.py;396;ADD;Jim Crist;jcrist@users.noreply.github.com;2018-02-01 15:59:01-08:00;ae5e1d564ba429dc2a66995555173c58b8e7f000;"Support using pyarrow for hdfs (#3123)  * Add support for HDFS using pyarrow  * Tweak a few tests  * Update dockerfile  * Tests run without hdfs3  * Update ci environment  * Test backend drivers  * Remove patches for pyarrow  - Only support recent Pyarrow version with patches pushed upstream - Add tests for glob - Add psf license for glob functionality  * Remove unnecessary hdfs3 test  * Update docs [ci skip]  * Update changelog  * Skip doctests for filesystems  * Respond to comments  * Respond to doc comments  * Make glob generic  Move the glob code out of pyarrow module, and apply it to hdfs3 driver as well (due to inconsistent behavior between hdfs3 and other glob implementations). Test that hdfs3 and pyarrow glob matches.  * Use multiprocessing in hdfs read_text test  * Add distributed test"
test_bytes_utils.py;61;DELETED;Jim Crist;jcrist@users.noreply.github.com;2018-02-01 15:59:01-08:00;ae5e1d564ba429dc2a66995555173c58b8e7f000;""
compression.py;45;ADD;Thrasibule;thrasibule@users.noreply.github.com;2018-02-10 14:26:35-05:00;8b2bebec7e08c19cf5a398f5e1b7751371760363;"use more recent api (#3157)"
__init__.py;21;ADD;Christopher Ren;christopher.x.ren@gmail.com;2018-03-25 19:40:18+01:00;907434be10d7351c28179d15954ff4a363559b7f;"Add isna method to Dask Dataframe (#3294)"
base.py;815;ADD;Matthew Rocklin;mrocklin@gmail.com;2018-05-04 07:38:38-04:00;24fda1faf0da80a3d839d917372aeb7cd421e59c;"Replace get= with scheduler= keyword (#3448)  This adds a new scheduler= keyword to compute and persist functions, replacing the non-intuitive get= keyword, enabling users to specify different schedulers with names like the following:  ```python x.compute(get=dask.threaded.get)  # Before x.compute(scheduler='threads')    # After ```  The common schedulers are stored in a dictionary in dask/base.py and dask.distributed is handled specially to avoid importing by default  This also changes docstrings and documentation."
parquet.py;958;ADD;andrethrill;andrethrill@users.noreply.github.com;2018-06-13 21:48:06+01:00;85af1cd48670838a9cb70c87e73cde791507726d;"Add parquet file support (#3573)  * intial changes to add support for ParquetFile as argument  * removed extra returned arguments that were added for testing purposes  * added test_read_from_fastparquet_parquetfile  * flake8 refactoring  * Added additional assert  * Removed additional assert after testing with a ParquetFile from S3 and worked  * Added check if path contains protocol when not using LocalFileSystem  * Added support for non-hive ParquetFiles and flake8 refactoring  * more robust logic for removing '_metadata' from path, if contained  * added assertion and test for when incompatible engine is set"
config.py;225;ADD;Jim Crist;jcrist@users.noreply.github.com;2018-06-20 09:01:22-05:00;1755e866a421fc758bcd70a114702c3e3f46ab2f;"DASK_CONFIG dictates config write location (#3621)  * DASK_CONFIG dictates config write location  Previously existing configuration files could be specified by `DASK_CONFIG`, but projects like `distributed` would always write the default configuration file to `~/.config/dask/`. We now make the write location configurable as well. This is important in environments where `~/.config` may not exist of be writable.  * Overhaul ensure_file  - Don't ever write to destination if it's an existing file - Catch errors when writing fails."
config.py;264;ADD;Matthew Rocklin;mrocklin@gmail.com;2018-06-21 17:53:55-04:00;69fc200c9d6524820a75b1f7713af44848c522a6;"Avoid deepcopy in dask.config.set (#3649)  When using dask.config.set as a context manager we need to be able to reverse the changes we make.  Before we used to do a `deepcopy` of the previous configuration and then apply it back when we exited.  This was expensive and broke whenever the configuration contained anything that wasn't easily deepcopyable (roughly the same things that aren't pickleable).  Now we record what changes we made, and remove them more surgically."
delayed.py;531;ADD;jakirkham;jakirkham@gmail.com;2018-07-20 18:41:52-04:00;91ad15f1c6f755766d88cf27c56c792ee4e40c94;"Handle missing `matmul` on Python 3.4 (#3791)  As `matmul` was added in Python 3.5 and we still support Python 3.4, we can't get away with just adding this on Python 3 only as it will fail on Python 3.4. To fix this, simply try to add `matmul` support everywhere and skip it if `matmul` is not an operator."
__init__.py;20;ADD;Danilo Horta;danilo.horta@gmail.com;2018-07-24 20:21:14+01:00;3dddd1148d1050ea7eca16a9c6dd2bc187adb02a;"Better error message on import when missing common dependencies (#3771)"
__init__.py;24;ADD;Danilo Horta;danilo.horta@gmail.com;2018-07-24 20:21:14+01:00;3dddd1148d1050ea7eca16a9c6dd2bc187adb02a;""
__init__.py;19;DELETED;Danilo Horta;danilo.horta@gmail.com;2018-07-24 20:21:14+01:00;3dddd1148d1050ea7eca16a9c6dd2bc187adb02a;""
__init__.py;23;DELETED;Danilo Horta;danilo.horta@gmail.com;2018-07-24 20:21:14+01:00;3dddd1148d1050ea7eca16a9c6dd2bc187adb02a;""
test_s3.py;93;ADD;Martin Durant;martindurant@users.noreply.github.com;2018-12-16 15:10:57+00:00;b8bd7f1289b45a64443d243e2405cad3ed03a2d3;"boto3 appears to be out of sync with moto; pin boto3 to earlier version (#4276)  * boto3 appears to be out of sync with moto; pin boto3 to earlier version  Also revealed multi-file write bug, now fixed  * moto as conda  * try pin botocore  * try to prevent boto plugins search  * Try BOTO_CONFIG=/dev/null  https://github.com/boto/boto/issues/3717#issuecomment-445054921  * Set AWS_SECRET_ACCESS_KEY and AWS_ACCESS_KEY_ID env vars  * Newer moto from pip  * Mock HTTP requests for bytes tests  * Adds a fixture with simulated taxi data * Changes the s3 scope to session  * Use moto context managers"
test_s3.py;65;DELETED;Martin Durant;martindurant@users.noreply.github.com;2018-12-16 15:10:57+00:00;b8bd7f1289b45a64443d243e2405cad3ed03a2d3;""
core.py;3432;ADD;Matthew Rocklin;mrocklin@gmail.com;2019-03-12 10:11:29-07:00;1b3381358575a22f0224a627f943d0432b8f4f15;"Support setting the index (#4565)  -  When we manipulate the index, change the divisions accordingly.  So for example `df.index * 10` has its divisions also multiplied by 10 -  Allow assignment of the index  The first change is more complex, and has some negative effects for situations like the following:      df.groupby(df.index.dt.day)  Because now the grouper and the dataframe do not have matching divisions and so we'll either try to align them or raise an error (which is what happens today).  It's not clear what correct behavior is here.  This PR relaxes the check for aligned divisions to only ask that they have the same number of partitions, not that their division values are equivalent."
core.py;3825;ADD;Matthew Rocklin;mrocklin@gmail.com;2019-03-12 10:11:29-07:00;1b3381358575a22f0224a627f943d0432b8f4f15;""
utils.py;201;ADD;Brett Naul;brettnaul@gmail.com;2019-03-12 11:23:42-07:00;4bcd0fb6cc0add749d6f37b0bd86ef7dea1dab9d;"Use recursive glob in LocalFileSystem (#4186)  * Use recursive glob in LocalFileSystem  * Add recursive glob test"
