Filename;Linha;Tipo;Autor;Email;Data;Hash;Commit
channel.py;232;ADD;Tony Garnock-Jones;tonygarnockjones@gmail.com;2010-06-12 02:35:54+00:00;5175a4601af1170df242c1e1bd4f07c651308c4b;"Make channel's close method idempotent"
channel.py;232;ADD;Ask Solem;askh@opera.com;2010-06-18 15:46:38+02:00;23df22b56990b1af994945801bf99e26e1a9370c;"Merge branch 'tonyg/master'"
channel.py;239;DELETED;Gavin M. Roy;gmr@myyearbook.com;2011-01-17 21:42:25-05:00;d41bf52b6a5e7af01f4498d4bcb58b8932fdbb30;"Stopping point on these files, still needs major attention"
channel.py;239;DELETED;Gavin M. Roy;gmr@myyearbook.com;2011-02-05 17:30:17-05:00;a742354d5144a22bf140ba60f76e50bac817850b;"Merge in of async-refactor branch"
base_connection.py;30;ADD;Gavin M. Roy;gmr@myyearbook.com;2011-04-06 19:39:01-04:00;ec30cbbb50d7042dcbdbf3e6505fbf31ba1cecc6;"Add SSL support to connections.  Only SelectConnection testing but the support is built into the BaseConnection so all other adapters (but asyncore) should extend it in the same way."
__init__.py;15;ADD;Jan Urba≈Ñski;wulczer@wulczer.org;2011-09-09 16:24:05+02:00;e792cf714e7c7a18480937864f9e73295e958c8b;"Initial support for using Pika with a Twisted reactor.  Provides a Deferred-based interface for channel methods and includes both a Pika connection adapter estabilishing and a Twisted protocol that uses Pika for parsing and marshalling the frames.  Not all channel methods have been tested, but the test program exercises some of the more common ones."
__init__.py;15;ADD;Gavin M. Roy;gmr@myyearbook.com;2011-09-15 10:14:16-07:00;11f7633d20956a57cca61d188d490d2ca0daff29;"Merge pull request #81 from wulczer/twisted  Twisted adapter for Pika"
callback.py;33;ADD;Gavin M. Roy;gmr@meetme.com;2012-09-29 22:38:53-04:00;5d03729e9bfadea11d415960526e984beb58173f;"Cleanup and slight refactor of CallbackManager  - Removed the ability for ONLY_CALLER to match on a Class, should only match on an instance - Add full test coverage"
spec.py;79;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;"Address the unicode encoding/decoding problems detailed in issue #34  - Remove the deprecated and soon to be a problem immediate flag - Update how to get to the amqp_codegen module from rabbitmq-public-umbrella/rabbitmq-codegen - Remove python 2.4 support"
spec.py;87;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;131;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;139;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;147;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;190;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;222;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;316;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;324;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;368;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;405;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;469;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;501;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;590;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;659;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;748;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;756;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;839;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;908;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;916;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;924;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1002;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1010;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1018;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1104;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1160;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1205;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1213;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1221;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1296;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1364;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1438;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1446;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1454;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1586;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1594;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1650;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1683;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1722;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1760;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1768;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1821;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1829;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1837;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1884;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1897;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1905;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;1956;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;2005;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;2013;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;2058;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;2462;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;2473;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;2498;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;2509;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;2520;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;2531;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;2547;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;2558;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;2569;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
spec.py;2580;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:29:41-04:00;d15d22c46e73b116e5ad0af540be940121065918;""
data.py;93;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:37:50-04:00;a36d43ba51772957f76cb4ee4a79af22e479b989;"Handle UTF-8 in table encoding/decoding"
data.py;102;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-02 08:37:50-04:00;a36d43ba51772957f76cb4ee4a79af22e479b989;""
connection.py;406;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-18 17:05:25-04:00;2ba7a1065411e2c8e26ff90ddb098df3badaa1a4;"Add a URLParamters class, addressing feature request in ticket #169  - Refactor to create a base Parameters class that sets default parameter values and validates them - Add URLParamters class - Make ConnectionParameters extend Parameters - Update references in Connection classes"
channel.py;1045;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-22 10:49:27-04:00;c2740f71c6a52f8584bda28e6d4b03de422c3d96;"Handle UTF-8 content bodies, fixing issue #197  - Automatically try and decode a frame into UTF-8 and then cast it back to a string. If it fails, stay as unicode, otherwise it will return as a str - Add test coverage"
channel.py;1051;ADD;Gavin M. Roy;gmr@meetme.com;2012-10-27 13:49:54-04:00;9b22ec4a738c6ad048990fcb98c0cb970a638403;"Handle non-UTF-8 binary data in the body addressing issue #202  Previously when recomposing the body there would be no check to see if a binary, non-unicode body was being recomposed. Catch a UnicodeDecode error in that case and keep the value as a str.  - Add a channel close test"
channel.py;1050;DELETED;Gavin M. Roy;gmr@meetme.com;2012-10-27 13:49:54-04:00;9b22ec4a738c6ad048990fcb98c0cb970a638403;""
data.py;198;ADD;Gavin M. Roy;gmr@meetme.com;2013-04-07 17:52:28-04:00;7e1b6fc93c79058a5ce4e7db62e1605021b139c3;"Address issue #318 by adding in all field types with their explicit conversions, matching signed and unsigned decoding"
data.py;209;ADD;Gavin M. Roy;gmr@meetme.com;2013-04-07 17:52:28-04:00;7e1b6fc93c79058a5ce4e7db62e1605021b139c3;""
data.py;132;DELETED;Gavin M. Roy;gmr@meetme.com;2013-04-07 17:52:28-04:00;7e1b6fc93c79058a5ce4e7db62e1605021b139c3;""
data.py;141;DELETED;Gavin M. Roy;gmr@meetme.com;2013-04-07 17:52:28-04:00;7e1b6fc93c79058a5ce4e7db62e1605021b139c3;""
channel.py;1131;ADD;Garth Williamson;garth@catalyst.net.nz;2013-05-03 17:41:27+12:00;f501187072c87e7ea078c8745c6378c7c301e84d;"Add option to get binary data only"
channel.py;1126;DELETED;Garth Williamson;garth@catalyst.net.nz;2013-05-03 17:41:27+12:00;f501187072c87e7ea078c8745c6378c7c301e84d;""
channel.py;1131;ADD;Gavin M. Roy;gmr@meetme.com;2013-05-03 07:35:28-07:00;d08d86cedcd014b2827b164b46aeaa6e1444537d;"Merge pull request #331 from garthwilliamson/master  Add option to get binary data only"
channel.py;1126;DELETED;Gavin M. Roy;gmr@meetme.com;2013-05-03 07:35:28-07:00;d08d86cedcd014b2827b164b46aeaa6e1444537d;""
spec.py;463;ADD;Gavin M. Roy;gmr@meetme.com;2013-07-08 10:09:49-04:00;7a099792a653ba2d0075bfd2d5594fb242b98916;"Add support for upcoming Connection.Blocked/Unblocked"
spec.py;463;ADD;Michael Laing;michael.laing@nytimes.com;2013-07-08 13:24:16-04:00;48fb161b42cae7fea75142ad5e72897e906c4b23;"Merge branch 'master' of https://github.com/pika/pika"
callback.py;263;ADD;Gavin M. Roy;gavinr@aweber.com;2014-02-17 14:23:34-05:00;6045dda157234bfff8a27b3b264ccd6720c4d7b6;"Catch KeyError (#437) to ensure that an exception is not raised in a race condition"
channel.py;1135;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2014-05-07 09:43:52-07:00;efea53d109352400830609ecdca86707782fb822;"Remove force binary and unicode casting"
data.py;198;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2014-05-07 09:44:04-07:00;5a4bd5dbb7a48eda63fecaf61e3d1c5643a4c6b4;"Remove unicode casting"
data.py;209;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2014-05-07 09:44:04-07:00;5a4bd5dbb7a48eda63fecaf61e3d1c5643a4c6b4;""
base_connection.py;172;ADD;Gavin M. Roy;gavinmroy@gmail.com;2015-04-29 00:46:00-04:00;1c921c18c6110915588b4294df1638cd8e798196;"Socket close/shutdown cleanup  This is directly taken from #505 but I could not cleanly merge it due to cleanup and some post-PR refactoring. Thanks @	kherrala"
select_connection.py;218;ADD;Will;wjpslater@gmail.com;2015-05-01 14:26:15+01:00;7f91a684f4b8548ab18d9f2a3cd0d5f49fb60e3d;"Make SelectConnection behave like an ioloop  Rework all the SelectConnection pollers to behave like a standard ioloop and deal with multiple filedescriptors.  Also fix the timeout handling code so that timeouts fire when they are scheduled to do so rather than on a periodic timer.  Add an interrupt socketpair so that a second thread can interrupt the ioloop if required (to make it exit). That's not to say it's the use of threads is heavily tested or recommended.  This work is required to make full non-blocking connect possible in pika. It will also allow connections to multiple rabbitmq servers to be handled in a single ioloop. The SelectConnection ioloop can now also be used by other code that wants to deal with non pika sockets using the a single generic ioloop."
select_connection.py;287;ADD;Will;wjpslater@gmail.com;2015-05-01 14:26:15+01:00;7f91a684f4b8548ab18d9f2a3cd0d5f49fb60e3d;""
select_connection.py;218;ADD;Gavin M. Roy;gavinmroy@gmail.com;2015-05-04 16:34:25-04:00;8efddcfb3ae64c0b83606ced6cdcb4e8dafd8785;"Merge pull request #555 from wjps/select-connection-ioloop  Make SelectConnection behave like an ioloop"
select_connection.py;287;ADD;Gavin M. Roy;gavinmroy@gmail.com;2015-05-04 16:34:25-04:00;8efddcfb3ae64c0b83606ced6cdcb4e8dafd8785;""
data.py;54;ADD;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;"Allow passing exchange, queue and routing_key as text, handle short strings as text in python3"
spec.py;134;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;150;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;319;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;327;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;371;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;408;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;466;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;523;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;644;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;713;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;802;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;810;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;893;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;962;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;970;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;978;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1056;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1064;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1072;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1158;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1214;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1259;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1267;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1275;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1350;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1418;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1492;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1500;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1508;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1640;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1648;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1704;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1737;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1776;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1814;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1822;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1875;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1883;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1891;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1938;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1951;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;1959;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;2010;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;2059;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;2067;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;2112;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;2516;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;2527;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;2552;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;2563;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;2574;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;2585;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;2601;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;2612;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;2623;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
spec.py;2634;DELETED;saarni;saarni@gmail.com;2015-06-09 10:58:00+03:00;498f1be4bd7465822e734a65ee22a2bde0abccdf;""
data.py;54;ADD;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;"Merge pull request #598 from everilae/bytesfixes  Allow passing exchange, queue and routing_key as text"
spec.py;134;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;150;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;319;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;327;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;371;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;408;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;466;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;523;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;644;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;713;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;802;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;810;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;893;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;962;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;970;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;978;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1056;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1064;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1072;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1158;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1214;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1259;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1267;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1275;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1350;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1418;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1492;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1500;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1508;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1640;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1648;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1704;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1737;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1776;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1814;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1822;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1875;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1883;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1891;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1938;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1951;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;1959;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;2010;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;2059;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;2067;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;2112;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;2516;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;2527;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;2552;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;2563;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;2574;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;2585;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;2601;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;2612;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;2623;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
spec.py;2634;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2015-06-17 22:10:33-04:00;b5539b3fc2519d751b00ac1d848d10adf5228954;""
select_connection.py;261;DELETED;Vitaly Kruglikov;vkruglikov@numenta.com;2015-12-28 03:44:33-08:00;608f0047dd5365b81f2f2657f3afc264dc20b4d4;"Fix leakage of ioloop pollers in SelectConnection and BlockingConnection.  Bypass closing logic in BlockingConnection if already closed.  Properly patch/restore select_connection.SELECT_TYPE in select_connection_ioloop_tests.IOLoopBaseTest; the old code didn't restore it, causing side-effects in other tests. Also override shortDescription to include poller type.  Define explicit public methods in select_connection's IOLoop, to make it clear what the interface really is.  Removed superfluous write_only arg from select_connection pollers.  Resolve pylint findings in tests/unit/blocking_connection_tests.py"
select_connection.py;261;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2016-01-22 11:58:21-05:00;5ea591297d9aad2af4bbeaf804e6ba8070915b20;"Merge pull request #680 from vitaly-krugl/release-select-connection-ioloop-pollers  Fix leakage of ioloop pollers in SelectConnection and BlockingConnection"
select_connection.py;261;DELETED;Nick Cash;nick.cash@gmail.com;2016-02-09 08:49:32-06:00;fe3b245546d858989631280de1eb33689b6ac5c3;"Merge pull request #3 from vitaly-krugl/nickcash-master-heartbeat-timeout-resolve-merge-conflict  Resolve merge conflict against pika master"
connection.py;552;DELETED;Vitaly Kruglikov;vkruglikov@numenta.com;2016-03-06 01:42:58-08:00;8d939362a924f22d983bc265f552f98f8504689d;"Refactored connection.Parameters, ConnectionParameters, and URLParameters classes to simplify logic and make them more robust.  Partition the validation and parsing logic into separate functions.  Perform validation on assignment via property setters to avoid accepting invalid values.  Block accidental assignment of invalid instance members.  Implemented unit tests for pika.connection.Parameters, pika.ConnectionParameters, and pika.URLParameters.  Moved legacy connection parameters unit tests to connection_parameters_tests.py and updated as needed.  Deprecated the heartbeat_interval constructor arg of pika.ConnectionParameters in favor of the new heartbeat arg for consitency with the other connection parameters classes in pika.  Used a singleton marker to identify default values in pika.ClonnectionParameters constructor instead of None to disambiguate between default and an actual value of None.  Import unittest2 as unittest, if available, to get needed API with python 2.6  When port arg is left as default in ConnectionParameters constructor, set its value based on whether SSL is enabled or not, for consistency with URLParameters.  Restored code in URLParameters that substitutes http for ampq before invoking urlparse, and added a comment that this is needed due to failure in urlparse on pre-2.7 python to propertly separate url params from path when scheme isn't http(s).  Added notes that the exceptions InvalidMinimumFrameSize and InvalidMaximumFrameSize are now deprecated.  Implemented equality operators on credential classes and tests.  Updated class docstring in connection.Parameters.  Fix BaseConnection._wrap_socket to deal with ssl_options=None and add unit tests to verify."
connection.py;552;DELETED;Gavin M. Roy;gavinmroy@gmail.com;2016-03-31 19:38:24-04:00;ed7b8c73db8f80bdb9a648eb99dff645eee6d125;"Merge pull request #714 from vitaly-krugl/refactor-conn-params  Refactored connection Parameters, ConnectionParameters, and URLParameters classes to simplify logic and make them more robust"
blocking_connection.py;1181;ADD;Patrick Hayes;pfhayes@gmail.com;2016-04-19 13:00:19-07:00;7922e076c2b5ded29156b9523dc5cf8178c3f1ce;"__enter__ / __exit__ on BlockingChannel"
blocking_connection.py;1181;ADD;Gavin M. Roy;gavinmroy@gmail.com;2016-04-19 20:14:34-04:00;fb326fed0c45366fe87e1e03684dc8f8a5c5823a;"Merge pull request #737 from pfhayes/enterexit  __enter__ / __exit__ on BlockingChannel"
tcp_socket_opts.py;24;ADD;Tuomas Virtanen;katajakasa@gmail.com;2017-08-24 04:03:00+03:00;979278ab91e453dde405966e61634ad774587fe2;"tcp_opts: Allow setting TCP keepalive options via pika parameters  tcp_opts: Add some tests for TCP keepalive options  tcp_opts: Fix compatibility issues on tcp socket options  tcp_opts: Mock TCP_KEEPIDLE in tests  tcp_opts: Documentation improvements  Move TCP options code to own module"
tcp_socket_opts.py;24;ADD;Michael Klishin;michael@novemberain.com;2017-10-02 10:26:50+03:00;5ceaef10cd96f82479226a93ec0bf8291fa731bf;"Merge pull request #880 from pika/pika-tcp-options-864  Allow setting common TCP socket options"
data.py;69;ADD;Luke Bakken;luke@bakken.io;2017-11-07 16:13:55-08:00;ca5bf0a122b892ecac49c2f79c2068503567aa22;"Trap unicode decode errors when data is not valid utf-8  Fixes #769"
data.py;270;ADD;Luke Bakken;luke@bakken.io;2017-11-07 16:13:55-08:00;ca5bf0a122b892ecac49c2f79c2068503567aa22;""
data.py;69;ADD;Michael Klishin;michael@novemberain.com;2017-11-09 11:44:36+02:00;572acdc1632ce0cbe55162d8cdc28556fbdcf97d;"Merge pull request #890 from pika/gh-769  Trap unicode decode errors when data is not valid utf-8"
data.py;270;ADD;Michael Klishin;michael@novemberain.com;2017-11-09 11:44:36+02:00;572acdc1632ce0cbe55162d8cdc28556fbdcf97d;""
__init__.py;200;ADD;Luke Bakken;luke@bakken.io;2017-12-26 10:12:24-08:00;2b145f4e40e4fa2dda3b5e94dba8a86fbaf83319;"Replace home-grown socketpair  Use the version of socketpair that comes in Python 3.5, which is also in this project:  https://github.com/mhils/backports.socketpair  Comment fix"
__init__.py;200;ADD;Luke Bakken;luke@bakken.io;2017-12-27 12:08:15-08:00;28ab7bb1eeeda267949c11690ee75f045a3a31cc;"Merge pull request #908 from pika/pika-compat-socketpair  Replace home-grown socketpair"
__init__.py;200;DELETED;Luke Bakken;luke@bakken.io;2018-01-10 17:46:37-08:00;6f264113eda87395de9ad6683853cc8585bb8a7a;"Do not monkey-patch socket, ensure socketpair returns non-blocking sockets  Fixes #916 Fixes #917"
__init__.py;200;DELETED;Luke Bakken;luke@bakken.io;2018-01-11 08:08:50-08:00;9cc373888613a19fe9b3687111e18326be64b140;"Merge pull request #918 from pika/pika-916  Do not monkey-patch socket, ensure socketpair returns non-blocking sockets"
base_connection.py;198;DELETED;Vitaly Kruglikov;vitaly.krugl.github@gmail.com;2018-02-27 04:00:14-08:00;69cedfddb731b02cf96cb9d3a51ce0a1ad32045c;"Summary of New features: - Made connection brining-up (DNS, socket.connect(), SSL-handshake) non-blocking and implemented timeout support for connection bring-up. - Legacy ConnectionParameters.socket_timeout is now used to abort socket.connect() if it doesn't complete in time. - Added stack_timeout property and constructor arg to connection parameters (connection.Parameters/ConnectionParameters/URLParameters). - ConnectionParameters.stack_timeout is used to time out individual TCP/[SSL]/AMQP full-stack bring-up attempts. - BlockingConnection supports passing a sequence of connection parameters for fault-tolerant implementations. - Asynchronous adapters support multiple connection param configs via the class method create_connection(). - ConnectionClosed is now formalized for use with the well-defined reason_code (and reason_text) which is not available in such scenarios - ConnectionClosed subclass ConnectionClosedByClient is used when a fully-open AMQP connection is gracefully closed as the result of user's connection.close() call. - ConnectionClosed subclass ConnectionClosedByBroker is used upon receipt of AMQP Connection.Close from the broker.  Summary of Backward-incompatible improvements: - Changed Connection.close() to raise pika.exceptions.ConnectionWrongStateError instead of simply returning if connection is already closed or closing. - BlockingConnection.close() raises ConnectionWrongStateError instead of simply returning if connection is not open. - Raise pika.exceptions.ConnectionWrongStateError instead of ConnectionClosed when the connection is in wrong state for the requested operation. This makes more sense in a number of scenarios such as when connection is opening. - Use `pika.exceptions.ConnectionBlockedTimeout` exception instead of `ConnectionClosed` with `InternalCloseReasons.BLOCKED_CONNECTION_TIMEOUT`. - Get rid of pika.Connection.InternalCloseReasons. - pika.connection.Connection now passes exception object to on_close_callback instead of reason_code/reason_text args since not all close reasons have a well-defined reason_code. This also makes it consistent with on_open_error_callback signature. Now ConnectionClosed exception is used only for cases when fully-open AMQP connection is closed by user upon receipt of AMQP Connection.CloseOK from broker and when AMQP Connection.Close is received from broker. - When non-blocking connection bring-up is interrupted via `connection.close()` call (before `on_open_callback` is called), report ConnectionOpenAborted exception via `on_open_error_callback`. Previously, `ConnectionClosed` was reported via `on_close_callback` even though the connection opening never completed. I.e., if opening fails or is interrupted for any reason, it's now consistently reported via `on_open_error_callback`. - Only one of on_open_error_callback/on_close_callback will be called by pika.connection.Connection, depending on whether connection reached the fully-open state before the closure. Previously, on_close_callback followed on_open_error_callback. - Removed pika.connection.Connection.connect() public method. Connections are not adequately tested for properly resetting state and reconnecting. Similar to socket.socket objects, just create a new instance of connection to (re)connect. - Renamed pika.exceptions.RecursionError exception to ReentrancyError in order to avoid naming conflict with the built-in RecursionError exception.  Implementation changes:  Enable IPv6 on travis-ci builds per github.com/travis-ci/travis-ci/issues/8711.  Fixed ForwardServer's echo mode by making the loopback sockets blocking after earlier pull request inadvertently changed them to non-blocking.  Defined AbstractIOServices, AbstractStreamTransport, and AbstractStreamProtocol interfaces.  Implemented AbstractIOServices abstractions for all supported adapter I/O loops (select_connection.IOLoop, Tornado, Asyncio, Twisted).  Implemented generic acceptance test suite for all AbstractIOServices interface implementations.  Refactored the relationship between protocol and data streaming into Protocol/Transport model akin to that in Asyncio and Twisted.  Implemented AMQPConnectionWorkflow for connection establishment logic, including support for multiple parameter sets and retries.  Defined AbstractAMQPConnectionWorkflow to support cusom connection workflows.  Integrating AMQPConnectionWorkflow for internally-initiated connection establisment.  Implemented pika.diagnostic_utils.create_log_exception_decorator() and unit tests for it.  Suppress signal handler installation when _TwistedAsyncServicesAdapter runs the twisted reactor; pika doesn't need signal handlers and installing them causes exceptions in tests that run from a thread.  Moved shared test utility classes to the tests/ directory.  Added __init__.py files in test directories so that relative imports can work.  Implemented socket events tests for select_connection's IOLoop with all its pollers.  select_connection.IOLoop: On OS X when socket fails to connect or local end shuts WR direction, poll() just sets the POLLHUP event and not POLLOUT. `man poll` on OS X describes POLLHUP as mutually exclusive with POLLOUT, which differs from Linux. So, we or-in POLLERR whenever we get POLLHUP from poll() on OS X in order to imitate the expected behavior of the other pollers and other platforms.  When calling inet_pton(socket.AF_INET6, ...) on Windows, also catch ValueError since twisted.internet monkey-patches socket module to provide inet_pton when it's not built in.  Connection.close() bypasses graceful AMQP Connection.Close and simply tears down the transport if AMQP is not fully up yet.  Remove twisted version limit from test-requirements since pika no longer claims to support python 2.6.  Externally-managed connection establishment: Defined BaseConnection.create_connection() pure virtual factory method and implemented BaseConnection._start_connection_workflow().  Fleshed out create_connection() factory method in all supported connection adapters.  Fixed up tests to work with the new Protocol/Transport model.  Increase TIMER_INTERVAL in select_connection_ioloop_tests.IOLoopTimerTestSelect to decrease likelyhood of false positive.  Implemented BlockingConnection acceptance tests for connecting with multiple param configs.  Fixed async_test_base.AsyncTestCase to fail test on unexpected closing of AMQP connection. Implemented async adapters' create_connection() tests.  Implemented streaming protocol interface fail tests.  Don't monkey-patch the socket module to add `TCP_KEEPIDLE` in test code."
io_services_utils.py;879;ADD;Vitaly Kruglikov;vitaly.krugl.github@gmail.com;2018-02-27 04:00:14-08:00;69cedfddb731b02cf96cb9d3a51ce0a1ad32045c;""
threaded_test_wrapper_test.py;77;ADD;Vitaly Kruglikov;vitaly.krugl.github@gmail.com;2018-02-27 04:00:14-08:00;69cedfddb731b02cf96cb9d3a51ce0a1ad32045c;""
base_connection.py;198;DELETED;Luke Bakken;luke@bakken.io;2018-04-26 07:59:37-07:00;98e0e56ece4657dd95b35eccbd3bd664df964175;"Merge pull request #1002 from vitaly-krugl/make-connect-non-blocking-and-refactor-interfaces  Refactor interfaces and make DNS/TCP/SSL connection setup non-blocking"
io_services_utils.py;879;ADD;Luke Bakken;luke@bakken.io;2018-04-26 07:59:37-07:00;98e0e56ece4657dd95b35eccbd3bd664df964175;""
threaded_test_wrapper_test.py;77;ADD;Luke Bakken;luke@bakken.io;2018-04-26 07:59:37-07:00;98e0e56ece4657dd95b35eccbd3bd664df964175;""
consume_recover_retry.py;32;ADD;Daniil Fedotov;hairyhum@gmail.com;2018-04-27 17:01:01+01:00;05bd2b31b353de1488380277b172b6331e0ed8c8;"Examples to describe connection recovery."
blocking_connection.py;1248;DELETED;Vitaly Kruglikov;vitaly.krugl.github@gmail.com;2018-04-27 01:03:27-07:00;761ef5cf8e484fe8d52909e767ceef69afc82d3a;"Backward-incompatible improvements: - Raise ChannelWrongStateError instead of ChannelClosed and ChannelAlreadyClosing when requesting channel operation incompatible with channel state. For consistency with ConnectionWrongStateError. - Get rid of pika.channel.ClientChannelErrors. - "_on_channel_close" callback registered via Channel.add_on_close_callback() passes exception as reason instead of reply_code/reply_text. For consistency with "on connection closed" callback. - Removed Channel.is_closed_by_broker property (which was added not long ago for v1.0.0).  Other improvements for v1.0.0: - Added ChannelClosed-based exceptions ChannelClosedByClient and ChannelClosedByBroker to help user distinguish between the scenarios.  Implemented BlockingChannel context manager tests."
consume_recover_retry.py;32;DELETED;Daniil Fedotov;hairyhum@gmail.com;2018-05-03 15:19:01+01:00;e188612aa415e2644f476b2ab5b4d6662b83a66a;"Reduce duplication in connection recovery examples"
blocking_connection.py;1266;DELETED;vitaly-krugl;vitaly-krugl@users.noreply.github.com;2018-05-03 23:00:40-07:00;c0a66d2e8ab039b8453fd413fd4edbe2129748d9;"Merge pull request #1026 from vitaly-krugl/channel-closed-cleanup  Cleaned up "on channel closed" callback and ChannelClosed exception scenarios"
